{"version":3,"file":"BusinessLookup.stories-21fe5a8a.js","sources":["../../src/components/business-lookup/BusinessLookup.vue"],"sourcesContent":["<template>\n  <div id=\"business-lookup\">\n    <div v-if=\"state !== States.SUMMARY\">\n      <v-autocomplete\n        v-model=\"selectedBusiness\"\n        autofocus\n        filled\n        no-filter\n        append-icon=\"\"\n        return-object\n        class=\"mt-5\"\n        autocomplete=\"chrome-off\"\n        menu-props=\"{ maxHeight: 380 }\"\n        item-text=\"identifier\"\n        :label=\"label\"\n        :name=\"Math.random()\"\n        :rules=\"showErrors ? businessLookupRules: []\"\n        :items=\"searchResults\"\n        :loading=\"state == States.SEARCHING\"\n        :hide-no-data=\"state != States.NO_RESULTS\"\n        @update:search-input=\"onSearchInput($event)\"\n      >\n        <!-- Empty selection slot will stop re-triggering of search-input event -->\n        <template #selection=\"\" />\n\n        <template #no-data>\n          <v-list-item>\n            <div>No matches found.</div>\n          </v-list-item>\n        </template>\n\n        <template #item=\"{ item }\">\n          <v-row class=\"business-lookup-result pt-1\">\n            <v-col cols=\"2\">\n              <div class=\"result-identifier\">\n                {{ item.identifier }}\n              </div>\n            </v-col>\n            <v-col cols=\"10\">\n              <div class=\"result-name\">\n                {{ item.name }}\n              </div>\n              <div class=\"result-bn\">\n                {{ item.bn }}\n              </div>\n            </v-col>\n          </v-row>\n        </template>\n      </v-autocomplete>\n    </div>\n\n    <div\n      v-if=\"state === States.SUMMARY && haveBusiness\"\n      class=\"summary-block mt-5\"\n    >\n      <v-row no-gutters>\n        <v-col cols=\"10\">\n          <v-row no-gutters>\n            <v-col cols=\"12\">\n              <div\n                v-if=\"editableBusinessName\"\n                class=\"d-flex align-center\"\n              >\n                <label>Business or Corporation Name:</label>\n                <v-text-field\n                  id=\"organization-name\"\n                  dense\n                  filled\n                  hide-details=\"auto\"\n                  class=\"mx-4 mr-md-0\"\n                  :rules=\"businessNameRules\"\n                  :value=\"businessName\"\n                  @input=\"setBusinessName($event)\"\n                />\n              </div>\n              <template v-else>\n                <label>Name: </label>\n                <span>{{ businessName }}</span>\n              </template>\n            </v-col>\n          </v-row>\n\n          <v-row\n            no-gutters\n            class=\"mt-1\"\n          >\n            <v-col cols=\"12\">\n              <label>Incorporation Number: </label>\n              <span>{{ identifier }}</span>\n            </v-col>\n          </v-row>\n\n          <v-row\n            no-gutters\n            class=\"mt-1\"\n          >\n            <v-col cols=\"12\">\n              <label>Business Number: </label>\n              <span>{{ businessNumber }}</span>\n            </v-col>\n          </v-row>\n        </v-col>\n\n        <v-col cols=\"2\">\n          <div id=\"bl-more-actions\">\n            <v-btn\n              id=\"bl-undo-btn\"\n              text\n              color=\"primary\"\n              @click=\"emitUndo()\"\n            >\n              <v-icon small>\n                mdi-undo\n              </v-icon>\n              <span>Undo</span>\n            </v-btn>\n          </div>\n        </v-col>\n      </v-row>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport { Component, Emit, Prop, Watch } from 'vue-property-decorator'\nimport { debounce } from 'lodash'\nimport { BusinessLookupIF, BusinessLookupResultIF } from '@/interfaces'\n\nenum States {\n  INITIAL = 'initial',\n  SEARCHING = 'searching',\n  SHOW_RESULTS = 'show results',\n  NO_RESULTS = 'no results',\n  SUMMARY = 'summary'\n}\n\n@Component({})\nexport default class BusinessLookup extends Vue {\n  /** Whether to show errors. */\n  @Prop({ required: true }) readonly showErrors!: boolean\n\n  /** The BusinessLookup object. */\n  @Prop({ required: true }) readonly businessLookup!: BusinessLookupIF\n\n  /** Class for BusinessLookup services. */\n  @Prop({ required: true }) readonly BusinessLookupServices!: any\n\n  /** Whether to display Change features. */\n  @Prop({ default: false }) readonly hasBusinessLookupChanges!: boolean\n\n  /** Whether to allow editing of business name. */\n  @Prop({ default: false }) readonly editableBusinessName!: boolean\n\n  /** Business status to search for (eg, ACTIVE or HISTORICAL or '' to match all. */\n  @Prop({ default: 'ACTIVE' }) readonly searchStatus!: string\n\n  /** Label for BusinessLookup component. */\n  @Prop({ default: 'Business or Corporation Name or Incorporation Number' }) readonly label!: string\n\n  /** BusinessLookup legal types to search for. */\n  @Prop({ default: 'BC,A,ULC,C,S,XP,GP,LP,CUL,XS,LLC,LL,BEN,CP,CC,XL,FI,XCP,PA' }) readonly legalTypes!: string\n\n  // enum for template\n  readonly States = States\n\n  // local variables\n  state = States.INITIAL\n  searchResults: Array<BusinessLookupResultIF> = []\n  selectedBusiness: BusinessLookupResultIF = null\n\n  /** The business lookup validation rules. */\n  readonly businessLookupRules: Array<(v) => boolean | string> = [\n    v => !!v || 'Business is required'\n  ]\n\n  /** The business name validation rules. */\n  readonly businessNameRules: Array<(v) => boolean | string> = [\n    (v: string) => !!v?.trim() || 'Business or corporation name is required',\n    (v: string) => (v?.length <= 150) || 'Cannot exceed 150 characters' // maximum character count\n  ]\n\n  /** The identifier. */\n  get identifier (): string {\n    return this.businessLookup.identifier\n  }\n\n  /** The business name. */\n  get businessName (): string {\n    return this.businessLookup.name\n  }\n\n  /** The business number. */\n  get businessNumber (): string {\n    return this.businessLookup.bn || ''\n  }\n\n  /** Whether we have stored business data. */\n  get haveBusiness (): boolean {\n    // allow empty business name if editable\n    return (!!this.identifier && (!!this.businessName || this.editableBusinessName))\n  }\n\n  /** Whether this form is valid. */\n  get isFormValid (): boolean {\n    return (this.haveBusiness && this.state === States.SUMMARY)\n  }\n\n  /** Sets the business name. */\n  setBusinessName (val: string): void {\n    const name = val?.trim()\n    this.onSelectedBusiness({ ...this.businessLookup, name } as any)\n  }\n\n  /**\n   * Called when Search Input has been updated.\n   * This method is debounced to prevent excessive calls to the API.\n   */\n  onSearchInput (searchInput: string) {\n    this.onSearchInputDebounced(this, searchInput)\n  }\n\n  private onSearchInputDebounced = debounce(async (that: this, searchInput: string) => {\n    // safety check\n    if (searchInput?.length > 2) {\n      that.state = States.SEARCHING\n      that.searchResults =\n        await that.BusinessLookupServices.search(searchInput, that.searchStatus, that.legalTypes).catch(() => [])\n      // display appropriate section\n      that.state = (that.searchResults.length > 0) ? States.SHOW_RESULTS : States.NO_RESULTS\n    } else {\n      that.searchResults = []\n      that.state = States.INITIAL\n    }\n  }, 600)\n\n  /** Called when selectedBusiness property has changed. */\n  @Watch('selectedBusiness')\n  private onSelectedBusiness (result: BusinessLookupResultIF): void {\n    // safety check\n    if (result) {\n      this.setBusiness(result)\n      this.selectedBusiness = null\n    }\n  }\n\n  /** Called when haveBusiness property (which is based on this component's props) has changed. */\n  @Watch('haveBusiness', { immediate: true })\n  private onHaveBusinessChanged (val: boolean): void {\n    this.state = val ? States.SUMMARY : States.INITIAL\n  }\n\n  /** Called when this form's validity has changed. */\n  @Watch('isFormValid')\n  private onIsFormValidChanged (val: boolean): void {\n    this.emitValid(val)\n  }\n\n  /** Emits event to update the Business object. */\n  @Emit('setBusiness')\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private setBusiness (val: BusinessLookupResultIF): void {}\n\n  /** Emits event to undo the selected business. */\n  @Emit('undoBusiness')\n  emitUndo (): void {}\n\n  /** Emits event to update this component's validity. */\n  @Emit('valid')\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private emitValid (val: boolean): void {}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/theme.scss';\n\n.v-icon.mdi-open-in-new {\n  margin-top: -2px;\n  padding-left: 2px;\n}\n\n.business-lookup-result {\n  font-size: $px-14;\n  color: $gray7;\n\n  &:hover {\n    background-color: $gray1;\n    color: $app-blue;\n  }\n}\n\n.result-identifier,\n.result-name {\n  cursor: pointer;\n  font-size: $px-16;\n}\n\n#bl-more-actions {\n  margin-right: -14px;\n  white-space: nowrap;\n\n  #bl-undo-btn {\n    min-width: unset;\n    float: right;\n  }\n}\n\n.summary-block {\n  label {\n    font-weight: bold;\n    color: $gray9;\n  }\n}\n\n// Vuetify overrides\n:deep() {\n  .v-text-field .v-label {\n    font-weight: normal;\n  }\n}\n</style>\n"],"names":["States","BusinessLookup","Vue","__publicField","v","debounce","that","searchInput","val","name","result","__decorateClass","Prop","Watch","Emit","Component"],"mappings":"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"}