{"version":3,"file":"ApprovalType.stories-7f5ed95d.js","sources":["../../src/enums/approval-types.ts","../../src/components/approval-type/ApprovalType.vue"],"sourcesContent":["/** Restoration approval types. */\nexport enum ApprovalTypes {\n  VIA_COURT_ORDER = 'courtOrder',\n  VIA_REGISTRAR = 'registrar'\n}\n","<template>\n  <div id=\"approval-type\">\n    <v-row no-gutters>\n      <v-col\n        cols=\"12\"\n        sm=\"3\"\n        class=\"pr-4\"\n      >\n        <label :class=\"{ 'error-text': invalidSection }\">Approval Type</label>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"9\"\n        class=\"mt-n4\"\n      >\n        <v-radio-group\n          v-model=\"approvalTypeSelected\"\n          class=\"payment-group pt-0\"\n          @change=\"radioButtonChanged\"\n        >\n          <!-- COURT ORDER section -->\n          <template v-if=\"!isCourtOrderRadio\">\n            <span class=\"v-label ml-2 mb-2\">{{ getRadioText(ApprovalTypes.VIA_COURT_ORDER) }}</span>\n          </template>\n          <template v-else>\n            <v-radio\n              id=\"court-order-radio\"\n              class=\"mb-n3\"\n              :label=\"getRadioText(ApprovalTypes.VIA_COURT_ORDER)\"\n              :value=\"ApprovalTypes.VIA_COURT_ORDER\"\n            />\n          </template>\n          <v-form\n            id=\"court-num-form\"\n            ref=\"courtNumRef\"\n            v-model=\"valid\"\n            class=\"mt-8 ml-2\"\n          >\n            <v-expand-transition class=\"pb-0 mb-0\">\n              <v-text-field\n                v-if=\"approvalTypeSelected === ApprovalTypes.VIA_COURT_ORDER\"\n                id=\"court-order-number-input\"\n                v-model=\"courtOrderNumberText\"\n                label=\"Court Order Number\"\n                :rules=\"courtOrderNumRules\"\n                hide-details=\"auto\"\n                filled\n                @input=\"courtOrderNumberChanged\"\n                @update:error=\"emitValidationError($event)\"\n              />\n            </v-expand-transition>\n          </v-form>\n          <!-- REGISTRAR section -->\n          <v-radio\n            v-if=\"!isCourtOrderOnly\"\n            id=\"registrar-radio\"\n            class=\"mb-n5 pt-2\"\n            :label=\"getRadioText(ApprovalTypes.VIA_REGISTRAR)\"\n            :value=\"ApprovalTypes.VIA_REGISTRAR\"\n          />\n          <v-expand-transition>\n            <div\n              v-if=\"approvalTypeSelected === ApprovalTypes.VIA_REGISTRAR\"\n              flat\n            >\n              <div class=\"ml-8 mt-3\">\n                <span class=\"v-label\">Enter the date the Notice of the Application for Restoration was published in\n                  the BC Gazette:\n                </span>\n                <DatePicker\n                  id=\"date-picker-notice\"\n                  ref=\"noticeDateRef\"\n                  class=\"mt-2\"\n                  title=\"Select Date\"\n                  :nudgeRight=\"150\"\n                  :initialValue=\"noticeDate\"\n                  :inputRules=\"datePickerRules\"\n                  @emitDateSync=\"noticeDateChanged($event)\"\n                />\n              </div>\n              <div class=\"ml-8\">\n                <span class=\"v-label\">Enter the date the Application for Restoration was mailed to the company:</span>\n                <DatePicker\n                  id=\"date-picker-application\"\n                  ref=\"applicationDateRef\"\n                  class=\"mt-2\"\n                  title=\"Select Date\"\n                  :nudgeRight=\"150\"\n                  :initialValue=\"applicationDate\"\n                  :inputRules=\"datePickerRules\"\n                  @emitDateSync=\"applicationDateChanged($event)\"\n                />\n              </div>\n            </div>\n          </v-expand-transition>\n        </v-radio-group>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport { Component, Emit, Prop } from 'vue-property-decorator'\nimport { ApprovalTypes } from '@bcrs-shared-components/enums'\nimport { FormIF } from '@bcrs-shared-components/interfaces'\nimport { DatePicker } from '@bcrs-shared-components/date-picker'\n\n@Component({\n  components: {\n    DatePicker\n  }\n})\nexport default class ApprovalType extends Vue {\n  // Refs\n  $refs!: Vue['$refs'] & {\n    courtNumRef: FormIF\n  }\n\n  /** Draft court order number. */\n  @Prop({ default: '' }) readonly courtOrderNumber!: string\n\n  /** Whether approved by the registrar. */\n  @Prop({ default: false }) readonly approvedByRegistrar!: boolean\n\n  /** filing name used in radio options. */\n  @Prop({ default: 'restoration' }) readonly filingType!: string\n\n  /** Show only the court order option; remove via registrar option. */\n  @Prop({ default: false }) readonly isCourtOrderOnly!: boolean\n\n  /** Draft notice date. */\n  @Prop({ default: '' }) readonly noticeDate!: string\n\n  /** Draft application date. */\n  @Prop({ default: '' }) readonly applicationDate!: string\n\n  /** Whether this section is invalid. */\n  @Prop({ default: false }) readonly invalidSection!: boolean\n\n  /** Whether the display of court order section is a radio button. */\n  @Prop({ default: true }) readonly isCourtOrderRadio!: boolean\n\n  // Local properties\n  private courtOrderNumberText = ''\n  private valid = false\n  private approvalTypeSelected = ''\n  private noticeDateText = ''\n  private applicationDateText = ''\n\n  // For template\n  readonly ApprovalTypes = ApprovalTypes\n\n  // Date Picker Rules\n  protected readonly datePickerRules = [(v: string) => !!v || 'Date is required']\n\n  // Text Field Rules\n  protected readonly courtOrderNumRules = [\n    (v: string) => (!v || !/^\\s/g.test(v)) || 'Invalid spaces', // leading spaces\n    (v: string) => (!v || !/\\s$/g.test(v)) || 'Invalid spaces', // trailing spaces\n    (v: string) => (!v || !(v.length < 5)) || 'Court order number is invalid',\n    (v: string) => (!v || !(v.length > 20)) || 'Court order number is invalid',\n    (v: string) => !!v || 'A Court Order number is required'\n  ]\n\n  /** Called when component is mounted. */\n  mounted (): void {\n    // Copy props to mutable properties\n    if (this.approvedByRegistrar) {\n      this.courtOrderNumberText = ''\n      this.approvalTypeSelected = ApprovalTypes.VIA_REGISTRAR\n    } else if (this.courtOrderNumber) {\n      this.courtOrderNumberText = this.courtOrderNumber\n      this.approvalTypeSelected = ApprovalTypes.VIA_COURT_ORDER\n    } else {\n      // Default state (no button selected)\n      this.radioButtonChanged('')\n    }\n    if (!this.isCourtOrderRadio) {\n      this.approvalTypeSelected = ApprovalTypes.VIA_COURT_ORDER\n    }\n  }\n\n  /** Triggers the form validation. */\n  public validate (): boolean {\n    if (this.approvalTypeSelected === ApprovalTypes.VIA_COURT_ORDER) {\n      let status = this.$refs.courtNumRef.validate()\n      this.$emit('valid', status)\n      return status\n    } else if (this.approvalTypeSelected === ApprovalTypes.VIA_REGISTRAR) {\n      // Emit true (valid) if both dates were selected. Emit false (invalid) if at least one was empty.\n      let status = (!!this.noticeDateText && !!this.applicationDateText)\n      this.$emit('valid', status)\n      return status\n    } else {\n      // Default state. Emit false (invalid).\n      return false\n    }\n  }\n\n  private emitValidationError (event: boolean): void {\n    this.$emit('valid', !event)\n  }\n\n  // Emit the approval type (radio button selected).\n  @Emit('radioButtonChange')\n  private radioButtonChanged (event: string): void {\n    if (event === ApprovalTypes.VIA_REGISTRAR) {\n      this.courtOrderNumberText = ''\n      this.courtOrderNumberChanged('')\n    } else if (event === ApprovalTypes.VIA_COURT_ORDER) {\n      this.noticeDateChanged('')\n      this.applicationDateChanged('')\n      this.$emit('valid', false)\n    } else {\n      // Default State.\n      this.$emit('valid', false)\n    }\n  }\n\n  // Emit the court number.\n  @Emit('courtNumberChange')\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private courtOrderNumberChanged (event: string): void {\n    this.validate()\n  }\n\n  private getRadioText (option: string): string {\n    if (option === ApprovalTypes.VIA_COURT_ORDER && this.isCourtOrderRadio) {\n      return `This ${this.filingType} is approved by court order.`\n    } else if (option === ApprovalTypes.VIA_COURT_ORDER && !this.isCourtOrderRadio) {\n      return 'Enter a Court Order number, as the restoration of this company was ordered by the court:'\n    }\n    if (option === ApprovalTypes.VIA_REGISTRAR) {\n      return `This ${this.filingType} is approved by registrar.`\n    }\n    return '[error]'\n  }\n\n  /**\n   * Emit the date the notice of the application for restoration was published in the BC Gazette.\n   * Validate that a date was successfully selected.\n   * @param noticeDate is the date that was selected (if any)\n   */\n  @Emit('update:noticeDate')\n  private noticeDateChanged (noticeDate: string): string {\n    this.noticeDateText = noticeDate\n    this.validate()\n    return noticeDate\n  }\n\n  /**\n   * Emit the date the application for restoration was mailed to the company.\n   * Validate that a date was successfully selected.\n   * @param applicationDate is the date that was selected (if any)\n   */\n  @Emit('update:applicationDate')\n  private applicationDateChanged (applicationDate: string): string {\n    this.applicationDateText = applicationDate\n    this.validate()\n    return applicationDate\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/theme.scss';\n\n:deep() {\n  .v-card__actions {\n    justify-content: flex-end;\n  }\n\n  .v-input .v-label {\n    font-weight: normal;\n    color: $gray7;\n  }\n\n  .theme--light.v-input input {\n    font-weight: normal;\n    color: $gray7;\n  }\n}\n</style>\n"],"names":["ApprovalTypes","ApprovalType","Vue","__publicField","v","status","event","option","noticeDate","applicationDate","__decorateClass","Prop","Emit","Component","DatePicker"],"mappings":"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"}