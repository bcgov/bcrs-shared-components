{"version":3,"file":"NatureOfBusiness.stories-b1b57b02.js","sources":["../../src/components/nature-of-business/NaicsHelpText.vue","../../src/components/nature-of-business/NaicsResult.vue","../../src/components/nature-of-business/NatureOfBusiness.vue"],"sourcesContent":["<template>\n  <div id=\"naics-help-text\">\n    <p>If you are having difficulty locating a NAICS code, try the following:</p>\n    <ul>\n      <li>\n        Use more general terms (for example, instead of searching 'imported shoe\n        sales', try 'shoe').\n      </li>\n      <li>\n        Remove pluralization or unnecessary endings (for example, instead of\n        searching 'deliveries', try 'deliver').\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport { Component } from 'vue-property-decorator'\n\n@Component({})\nexport default class NaicsHelpText extends Vue {}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/theme.scss';\n\n#naics-help-text {\n  font-size: $px-16;\n  color: $gray7;\n}\n\nli {\n  font-size: $px-14;\n  margin-left: -0.25rem;\n}\n\nli:last-of-type {\n  margin-top: 0.25rem;\n}\n</style>\n","<template>\n  <v-row\n    v-if=\"!!result\"\n    no-gutters\n    class=\"naics-result\"\n    @click=\"emitClick()\"\n  >\n    <v-col cols=\"2\">\n      <div class=\"result-code\">\n        {{ result.code }}\n      </div>\n    </v-col>\n\n    <v-col cols=\"10\">\n      <div class=\"d-flex justify-space-between align-top\">\n        <label class=\"result-class-title\">{{ result.classTitle }}</label>\n        <v-btn\n          large\n          depressed\n          color=\"primary\"\n          class=\"mt-n2\"\n        >\n          Select\n        </v-btn>\n      </div>\n\n      <div class=\"result-class-definition\">\n        {{ result.classDefinition }}\n      </div>\n\n      <template v-if=\"elements.length > 0\">\n        <div class=\"sample-activities\">\n          Sample activities:\n        </div>\n        <ul>\n          <template v-for=\"(element, index) in elements\">\n            <li\n              v-if=\"showMore || (index < 5)\"\n              :key=\"index\"\n            >\n              {{ capitalize(element.elementDescription) }}\n            </li>\n          </template>\n        </ul>\n\n        <div\n          v-if=\"!showMore && (elements.length >= 5)\"\n          class=\"show-more\"\n          @click.stop=\"showMore = true\"\n        >\n          Show more...\n        </div>\n      </template>\n    </v-col>\n  </v-row>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport { Component, Emit, Prop } from 'vue-property-decorator'\nimport { NaicsElementIF, NaicsResultIF } from '@bcrs-shared-components/interfaces'\n\n@Component({})\nexport default class NaicsResult extends Vue {\n  @Prop({ required: true }) readonly result!: NaicsResultIF\n\n  @Emit('click')\n  protected emitClick (): void {}\n\n  // local variables\n  protected showMore = true // FUTURE: change to 'false' to enable this feature\n\n  get elements (): NaicsElementIF[] {\n    return this.result?.naicsElements || []\n  }\n\n  /** Returns the string with the first character capitalized. */\n  protected capitalize (s: string): string {\n    return s.replace(/^\\w/, c => c.toUpperCase())\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/theme.scss';\n\n.naics-result {\n  padding: 1.5rem;\n  font-size: $px-14;\n  color: $gray7;\n  border-bottom: 1px solid $gray3;\n\n  &:hover {\n    background-color: $app-lt-blue;\n  }\n}\n\n.result-code,\n.result-class-title {\n  cursor: pointer;\n  font-size: $px-16;\n  color: $app-blue;\n}\n\n.result-class-definition {\n  padding-top: 1rem;\n}\n\n.sample-activities {\n  padding-top: 1rem;\n  font-weight: bold;\n}\n\nul {\n  padding-top: 0.25rem;\n}\n\n.show-more {\n  cursor: pointer;\n  color: $app-blue;\n}\n</style>\n","<template>\n  <div id=\"nature-of-business\">\n    <v-row no-gutters>\n      <v-col\n        cols=\"12\"\n        sm=\"3\"\n        class=\"pr-4\"\n      >\n        <label>Nature of Business</label>\n        <v-chip\n          v-if=\"hasNaicsChanges\"\n          id=\"edited-chip\"\n          x-small\n          label\n          color=\"primary\"\n          text-color=\"white\"\n        >\n          {{ editedLabel }}\n        </v-chip>\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        sm=\"9\"\n      >\n        <div v-if=\"state !== States.SUMMARY\">\n          <p class=\"ma-0\">\n            Enter one or more keywords that describe the primary nature of your business or enter\n            the six-digit NAICS code. Learn more by visiting the\n            <a\n              :href=\"STATS_CAN_URL\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <span>Statistics Canada website</span>\n            </a>\n            <v-icon\n              small\n              color=\"primary\"\n            >\n              mdi-open-in-new\n            </v-icon>.\n          </p>\n          <v-text-field\n            v-model=\"searchField\"\n            filled\n            persistent-hint\n            class=\"mt-5\"\n            autocomplete=\"chrome-off\"\n            label=\"Keywords or Six-Digit NAICS\"\n            hint=\"Example: landscaping, grocery, automotive repair, etc.\"\n            :name=\"Math.random()\"\n            :rules=\"showErrors ? natureOfBusinessRules: []\"\n            @keydown.enter=\"onSearchClicked()\"\n          >\n            <template #append>\n              <v-btn\n                id=\"nob-search-btn\"\n                depressed\n                color=\"primary\"\n                :loading=\"state === States.SEARCHING\"\n                @click=\"onSearchClicked()\"\n              >\n                <v-icon>mdi-magnify</v-icon>\n              </v-btn>\n            </template>\n          </v-text-field>\n          <template v-if=\"state === States.INITIAL && haveNaics\">\n            <v-btn\n              id=\"nob-cancel1-btn\"\n              large\n              outlined\n              color=\"primary\"\n              class=\"float-right\"\n              @click=\"onCancelClicked()\"\n            >\n              <span>Cancel</span>\n            </v-btn>\n          </template>\n        </div>\n\n        <div\n          v-if=\"state === States.SHOW_RESULTS\"\n          class=\"mt-5\"\n        >\n          <p class=\"ma-0\">\n            Select an option below that best describes the nature of your business:\n          </p>\n          <div\n            id=\"result-list\"\n            class=\"mt-5\"\n          >\n            <NaicsResult\n              v-for=\"(result, index) in searchResults\"\n              :key=\"index\"\n              :result=\"result\"\n              @click=\"onResultClicked(result)\"\n            />\n            <!-- NB: NAICS help panel needs same formatting as NaicsResult -->\n            <v-row\n              no-gutters\n              class=\"pa-6\"\n            >\n              <v-col cols=\"2\" />\n              <v-col cols=\"10\">\n                <NaicsHelpText />\n              </v-col>\n            </v-row>\n          </div>\n          <v-btn\n            id=\"nob-cancel2-btn\"\n            large\n            outlined\n            color=\"primary\"\n            class=\"float-right mt-8\"\n            @click=\"onCancelClicked()\"\n          >\n            <span>Cancel</span>\n          </v-btn>\n        </div>\n\n        <div\n          v-if=\"state === States.NO_RESULTS\"\n          class=\"mt-5\"\n        >\n          <p class=\"font-weight-bold\">\n            No results found.\n          </p>\n          <NaicsHelpText />\n          <v-btn\n            id=\"nob-cancel3-btn\"\n            large\n            outlined\n            color=\"primary\"\n            class=\"float-right mt-8\"\n            @click=\"onCancelClicked()\"\n          >\n            <span>Cancel</span>\n          </v-btn>\n        </div>\n\n        <div\n          v-if=\"state === States.SUMMARY\"\n          class=\"summary-block d-flex justify-space-between align-center\"\n        >\n          <span v-if=\"naicsCode && naicsDescription\">{{ naicsCode }} - {{ naicsDescription }}</span>\n          <span v-else-if=\"naicsCode\">{{ naicsCode }}</span>\n          <span v-else-if=\"naicsDescription\">{{ naicsDescription }}</span>\n          <span v-else>(Not entered)</span>\n\n          <v-btn\n            v-if=\"!hasNaicsChanges\"\n            id=\"nob-edit-btn\"\n            text\n            color=\"primary\"\n            @click=\"onChangeClicked()\"\n          >\n            <v-icon small>\n              mdi-pencil\n            </v-icon>\n            <span>{{ editLabel }}</span>\n          </v-btn>\n\n          <div\n            v-else\n            id=\"nob-more-actions\"\n          >\n            <v-btn\n              id=\"nob-undo-btn\"\n              text\n              color=\"primary\"\n              @click=\"emitUndo()\"\n            >\n              <v-icon small>\n                mdi-undo\n              </v-icon>\n              <span>Undo</span>\n            </v-btn>\n            <v-menu\n              v-model=\"dropdown\"\n              offset-y\n              left\n              nudge-bottom=\"4\"\n            >\n              <template #activator=\"{ on }\">\n                <v-btn\n                  id=\"nob-menu-btn\"\n                  text\n                  small\n                  color=\"primary\"\n                  v-on=\"on\"\n                >\n                  <v-icon>{{ dropdown ? 'mdi-menu-up' : 'mdi-menu-down' }}</v-icon>\n                </v-btn>\n              </template>\n              <v-btn\n                id=\"more-changes-btn\"\n                text\n                color=\"primary\"\n                class=\"py-5\"\n                @click=\"onChangeClicked(); dropdown = false\"\n              >\n                <v-icon\n                  small\n                  color=\"primary\"\n                >\n                  mdi-pencil\n                </v-icon>Change\n              </v-btn>\n            </v-menu>\n          </div>\n        </div>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport { Component, Emit, Prop, Watch } from 'vue-property-decorator'\nimport NaicsHelpText from './NaicsHelpText.vue'\nimport NaicsResult from './NaicsResult.vue'\nimport { NaicsIF, NaicsResultIF } from '@bcrs-shared-components/interfaces'\n\nenum States {\n  INITIAL = 'initial',\n  SEARCHING = 'searching',\n  SHOW_RESULTS = 'show results',\n  NO_RESULTS = 'no results',\n  SUMMARY = 'summary'\n}\n\n@Component({\n  components: { NaicsHelpText, NaicsResult }\n})\nexport default class NatureOfBusiness extends Vue {\n  readonly STATS_CAN_URL = 'https://www.statcan.gc.ca/en/subjects/standard/naics/2017/v3/index'\n\n  /** Whether to show errors. */\n  @Prop({ required: true }) readonly showErrors!: boolean\n\n  /** The NAICS object. */\n  @Prop({ required: true }) readonly naics!: NaicsIF\n\n  /** Class for NAICS services. */\n  @Prop({ required: true }) readonly NaicsServices!: any\n\n  /** Whether to display Change features. */\n  @Prop({ default: false }) readonly hasNaicsChanges!: boolean\n\n  /** Edit label name (ie, 'Change' or 'Correct'). */\n  @Prop({ default: 'Change' }) readonly editLabel!: string\n\n  /** Edited label name (ie, 'Changed' or 'Corrected'). */\n  @Prop({ default: 'Changed' }) readonly editedLabel!: string\n\n  // enum for template\n  readonly States = States\n\n  // local variables\n  private state = States.INITIAL\n  private searchField = ''\n  private searchResults: Array<NaicsResultIF> = []\n\n  /** V-model for dropdown menu. */\n  private dropdown: boolean = null\n\n  /** The text field validation rules. */\n  readonly natureOfBusinessRules: Array<(v) => boolean | string> = [\n    v => !!v || 'Nature of Business is required'\n  ]\n\n  /** The NAICS code. */\n  get naicsCode (): string {\n    return this.naics.naicsCode\n  }\n\n  /** The NAICS description. */\n  get naicsDescription (): string {\n    return this.naics.naicsDescription\n  }\n\n  /** Whether we have stored NAICS data. */\n  get haveNaics (): boolean {\n    return (!!this.naicsCode || !!this.naicsDescription)\n  }\n\n  /** Whether this form is valid. */\n  get isFormValid (): boolean {\n    return (this.haveNaics && this.state === States.SUMMARY)\n  }\n\n  /** Called when user has clicked the Search button. */\n  protected async onSearchClicked (): Promise<void> {\n    // remove extra whitespace\n    this.searchField = this.searchField.trim().replaceAll(/\\s+/g, ' ')\n\n    // safety check\n    if (this.searchField) {\n      this.state = States.SEARCHING\n\n      this.searchResults = await this.NaicsServices.search(this.searchField).catch(() => [])\n\n      // display appropriate section\n      this.state = (this.searchResults.length > 0) ? States.SHOW_RESULTS : States.NO_RESULTS\n    }\n  }\n\n  /** Called when user has clicked a particular result. */\n  protected onResultClicked (result: any): void {\n    // safety check\n    if (result) {\n      // set store value\n      this.setNaics({\n        naicsCode: result.code,\n        naicsDescription: result.classTitle\n      })\n\n      this.state = States.SUMMARY\n    }\n  }\n\n  /** Called when user has clicked the Cancel button. */\n  protected onCancelClicked (): void {\n    // if we have stored NAICS data then display summary\n    // otherwise go back to INITIAL state\n    this.state = this.haveNaics ? States.SUMMARY : States.INITIAL\n  }\n\n  /** Called when user has clicked the Change button. */\n  protected onChangeClicked (): void {\n    // set search to current NOB\n    this.searchField = this.naicsDescription.toLowerCase()\n    this.state = States.INITIAL\n  }\n\n  /** Called when haveNaics property (which is based on this component's props) has changed. */\n  @Watch('haveNaics', { immediate: true })\n  private onHaveNaicsChanged (val: boolean): void {\n    this.state = val ? States.SUMMARY : States.INITIAL\n  }\n\n  /** Called when this form's validity has changed. */\n  @Watch('isFormValid', { immediate: true })\n  private onIsFormValidChanged (val: boolean): void {\n    this.emitValid(val)\n  }\n\n  /** Emits event to update the NAICS object. */\n  @Emit('setNaics')\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private setNaics (val: NaicsIF): void {}\n\n  /** Emits undo event. */\n  @Emit('undoNaics')\n  private emitUndo (): void {}\n\n  /** Emits event to update this component's validity. */\n  @Emit('valid')\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private emitValid (val: boolean): void {}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/theme.scss';\n\n#nature-of-business {\n  .col-sm-3 {\n    color: $gray9;\n    font-weight: bold;\n  }\n\n  .col-sm-9 {\n    color: $gray7;\n  }\n}\n\n.v-icon.mdi-open-in-new {\n  margin-top: -2px;\n  padding-left: 2px;\n}\n\n#nob-search-btn {\n  min-width: unset;\n  margin-top: -6px;\n  padding: 8px;\n}\n\n#nob-edit-btn {\n  margin-right: -14px;\n}\n\n#nob-more-actions {\n  margin-right: -14px;\n  white-space: nowrap;\n\n  #nob-undo-btn {\n    min-width: unset;\n    border-right: 1px solid $gray1;\n  }\n}\n\n#result-list {\n  background-color: $gray1;\n  max-height: 650px;\n  overflow-y: auto;\n}\n\n.summary-block {\n  margin-top: -6px; // compensate for Change button pushing this col down\n}\n\n// Vuetify overrides\n:deep(.v-text-field .v-label) {\n  font-weight: normal;\n}\n</style>\n"],"names":["NaicsHelpText","Vue","__decorateClass","Component","NaicsResult","__publicField","_a","c","Prop","Emit","States","NatureOfBusiness","v","result","val","Watch"],"mappings":"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"}