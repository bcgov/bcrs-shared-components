{"version":3,"file":"BusinessLookup.stories-97e8d32a.js","sources":["../../src/components/business-lookup/BusinessLookup.vue"],"sourcesContent":["<template>\r\n  <div id=\"business-lookup\">\r\n    <div v-if=\"state !== States.SUMMARY\">\r\n      <v-autocomplete\r\n        v-model=\"selectedBusiness\"\r\n        filled\r\n        no-filter\r\n        append-icon=\"\"\r\n        return-object\r\n        class=\"mt-5\"\r\n        autocomplete=\"chrome-off\"\r\n        menu-props=\"{ maxHeight: 380 }\"\r\n        label=\"Business or Corporation Name or Incorporation Number\"\r\n        item-text=\"identifier\"\r\n        :name=\"Math.random()\"\r\n        :rules=\"showErrors ? businessLookupRules: []\"\r\n        :items=\"searchResults\"\r\n        :loading=\"state == States.SEARCHING\"\r\n        :hide-no-data=\"state != States.NO_RESULTS\"\r\n        @update:search-input=\"onSearchInput($event)\"\r\n      >\r\n        <!-- Empty selection slot will stop re-triggering of search-input event -->\r\n        <template #selection=\"\" />\r\n\r\n        <template #no-data>\r\n          <v-list-item>\r\n            <div>No matches found.</div>\r\n          </v-list-item>\r\n        </template>\r\n\r\n        <template #item=\"{ item }\">\r\n          <v-row class=\"business-lookup-result pt-1\">\r\n            <v-col cols=\"2\">\r\n              <div class=\"result-identifier\">\r\n                {{ item.identifier }}\r\n              </div>\r\n            </v-col>\r\n            <v-col cols=\"10\">\r\n              <div class=\"result-name\">\r\n                {{ item.name }}\r\n              </div>\r\n              <div class=\"result-bn\">\r\n                {{ item.bn }}\r\n              </div>\r\n            </v-col>\r\n          </v-row>\r\n        </template>\r\n      </v-autocomplete>\r\n    </div>\r\n\r\n    <div\r\n      v-if=\"state === States.SUMMARY && haveBusiness\"\r\n      class=\"summary-block mt-5\"\r\n    >\r\n      <v-row no-gutters>\r\n        <v-col cols=\"10\">\r\n          <v-row no-gutters>\r\n            <v-col cols=\"12\">\r\n              <div\r\n                v-if=\"editableBusinessName\"\r\n                class=\"d-flex align-center\"\r\n              >\r\n                <label>Business or Corporation Name:</label>\r\n                <v-text-field\r\n                  id=\"organization-name\"\r\n                  dense\r\n                  filled\r\n                  hide-details=\"auto\"\r\n                  class=\"mx-4 mr-md-0\"\r\n                  :rules=\"businessNameRules\"\r\n                  :value=\"businessName\"\r\n                  @input=\"setBusinessName($event)\"\r\n                />\r\n              </div>\r\n              <template v-else>\r\n                <label>Name: </label>\r\n                <span>{{ businessName }}</span>\r\n              </template>\r\n            </v-col>\r\n          </v-row>\r\n\r\n          <v-row\r\n            no-gutters\r\n            class=\"mt-1\"\r\n          >\r\n            <v-col cols=\"12\">\r\n              <label>Incorporation Number: </label>\r\n              <span>{{ identifier }}</span>\r\n            </v-col>\r\n          </v-row>\r\n\r\n          <v-row\r\n            no-gutters\r\n            class=\"mt-1\"\r\n          >\r\n            <v-col cols=\"12\">\r\n              <label>Business Number: </label>\r\n              <span>{{ businessNumber }}</span>\r\n            </v-col>\r\n          </v-row>\r\n        </v-col>\r\n\r\n        <v-col cols=\"2\">\r\n          <div id=\"bl-more-actions\">\r\n            <v-btn\r\n              id=\"bl-undo-btn\"\r\n              text\r\n              color=\"primary\"\r\n              @click=\"emitUndo()\"\r\n            >\r\n              <v-icon small>\r\n                mdi-undo\r\n              </v-icon>\r\n              <span>Undo</span>\r\n            </v-btn>\r\n          </div>\r\n        </v-col>\r\n      </v-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\nimport { Component, Emit, Prop, Watch } from 'vue-property-decorator'\r\nimport { debounce } from 'lodash'\r\nimport { BusinessLookupIF, BusinessLookupResultIF } from '@/interfaces'\r\n\r\nenum States {\r\n  INITIAL = 'initial',\r\n  SEARCHING = 'searching',\r\n  SHOW_RESULTS = 'show results',\r\n  NO_RESULTS = 'no results',\r\n  SUMMARY = 'summary'\r\n}\r\n\r\n@Component({})\r\nexport default class BusinessLookup extends Vue {\r\n  /** Whether to show errors. */\r\n  @Prop({ required: true }) readonly showErrors!: boolean\r\n\r\n  /** The BusinessLookup object. */\r\n  @Prop({ required: true }) readonly businessLookup!: BusinessLookupIF\r\n\r\n  /** Class for BusinessLookup services. */\r\n  @Prop({ required: true }) readonly BusinessLookupServices!: any\r\n\r\n  /** Whether to display Change features. */\r\n  @Prop({ default: false }) readonly hasBusinessLookupChanges!: boolean\r\n\r\n  /** Whether to allow editing of business name. */\r\n  @Prop({ default: false }) readonly editableBusinessName!: boolean\r\n\r\n  /** Business status to search for (eg, ACTIVE or HISTORICAL or '' to match all. */\r\n  @Prop({ default: 'ACTIVE' }) readonly searchStatus!: string\r\n\r\n  // enum for template\r\n  readonly States = States\r\n\r\n  // local variables\r\n  state = States.INITIAL\r\n  searchResults: Array<BusinessLookupResultIF> = []\r\n  selectedBusiness: BusinessLookupResultIF = null\r\n\r\n  /** The business lookup validation rules. */\r\n  readonly businessLookupRules: Array<(v) => boolean | string> = [\r\n    v => !!v || 'Business is required'\r\n  ]\r\n\r\n  /** The business name validation rules. */\r\n  readonly businessNameRules: Array<(v) => boolean | string> = [\r\n    (v: string) => !!v?.trim() || 'Business or corporation name is required',\r\n    (v: string) => (v?.length <= 150) || 'Cannot exceed 150 characters' // maximum character count\r\n  ]\r\n\r\n  /** The identifier. */\r\n  get identifier (): string {\r\n    return this.businessLookup.identifier\r\n  }\r\n\r\n  /** The business name. */\r\n  get businessName (): string {\r\n    return this.businessLookup.name\r\n  }\r\n\r\n  /** The business number. */\r\n  get businessNumber (): string {\r\n    return this.businessLookup.bn || ''\r\n  }\r\n\r\n  /** Whether we have stored business data. */\r\n  get haveBusiness (): boolean {\r\n    // allow empty business name if editable\r\n    return (!!this.identifier && (!!this.businessName || this.editableBusinessName))\r\n  }\r\n\r\n  /** Whether this form is valid. */\r\n  get isFormValid (): boolean {\r\n    return (this.haveBusiness && this.state === States.SUMMARY)\r\n  }\r\n\r\n  /** Sets the business name. */\r\n  setBusinessName (val: string): void {\r\n    const name = val?.trim()\r\n    this.onSelectedBusiness({ ...this.businessLookup, name } as any)\r\n  }\r\n\r\n  /**\r\n   * Called when Search Input has been updated.\r\n   * This method is debounced to prevent excessive calls to the API.\r\n   */\r\n  onSearchInput (searchInput: string) {\r\n    this.onSearchInputDebounced(this, searchInput)\r\n  }\r\n\r\n  private onSearchInputDebounced = debounce(async (that: this, searchInput: string) => {\r\n    // safety check\r\n    if (searchInput?.length > 2) {\r\n      that.state = States.SEARCHING\r\n      that.searchResults =\r\n        await that.BusinessLookupServices.search(searchInput, that.searchStatus).catch(() => [])\r\n      // display appropriate section\r\n      that.state = (that.searchResults.length > 0) ? States.SHOW_RESULTS : States.NO_RESULTS\r\n    } else {\r\n      that.searchResults = []\r\n      that.state = States.INITIAL\r\n    }\r\n  }, 600)\r\n\r\n  /** Called when selectedBusiness property has changed. */\r\n  @Watch('selectedBusiness')\r\n  private onSelectedBusiness (result: BusinessLookupResultIF): void {\r\n    // safety check\r\n    if (result) {\r\n      this.setBusiness(result)\r\n      this.selectedBusiness = null\r\n    }\r\n  }\r\n\r\n  /** Called when haveBusiness property (which is based on this component's props) has changed. */\r\n  @Watch('haveBusiness', { immediate: true })\r\n  private onHaveBusinessChanged (val: boolean): void {\r\n    this.state = val ? States.SUMMARY : States.INITIAL\r\n  }\r\n\r\n  /** Called when this form's validity has changed. */\r\n  @Watch('isFormValid')\r\n  private onIsFormValidChanged (val: boolean): void {\r\n    this.emitValid(val)\r\n  }\r\n\r\n  /** Emits event to update the Business object. */\r\n  @Emit('setBusiness')\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  private setBusiness (val: BusinessLookupResultIF): void {}\r\n\r\n  /** Emits event to undo the selected business. */\r\n  @Emit('undoBusiness')\r\n  emitUndo (): void {}\r\n\r\n  /** Emits event to update this component's validity. */\r\n  @Emit('valid')\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  private emitValid (val: boolean): void {}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '@/assets/styles/theme.scss';\r\n\r\n.v-icon.mdi-open-in-new {\r\n  margin-top: -2px;\r\n  padding-left: 2px;\r\n}\r\n\r\n.business-lookup-result {\r\n  font-size: $px-14;\r\n  color: $gray7;\r\n\r\n  &:hover {\r\n    background-color: $gray1;\r\n    color: $app-blue;\r\n  }\r\n}\r\n\r\n.result-identifier,\r\n.result-name {\r\n  cursor: pointer;\r\n  font-size: $px-16;\r\n}\r\n\r\n#bl-more-actions {\r\n  margin-right: -14px;\r\n  white-space: nowrap;\r\n\r\n  #bl-undo-btn {\r\n    min-width: unset;\r\n    float: right;\r\n  }\r\n}\r\n\r\n.summary-block {\r\n  label {\r\n    font-weight: bold;\r\n    color: $gray9;\r\n  }\r\n}\r\n\r\n// Vuetify overrides\r\n:deep() {\r\n  .v-text-field .v-label {\r\n    font-weight: normal;\r\n  }\r\n}\r\n</style>\r\n"],"names":["States","BusinessLookup","Vue","__publicField","v","debounce","that","searchInput","val","name","result","__decorateClass","Prop","Watch","Emit","Component"],"mappings":"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"}