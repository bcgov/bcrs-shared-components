{"version":3,"file":"Jurisdiction.stories-d66a12b8.js","sources":["../../src/enums/jurisdiction-location.ts","../../src/components/jurisdiction/NestedSelect.vue","../../src/components/jurisdiction/list-data/canada-jurisdictions.ts","../../src/components/jurisdiction/list-data/intl-jurisdictions.ts","../../src/components/jurisdiction/Jurisdiction.vue"],"sourcesContent":["/** Enum for location code. */\nexport enum JurisdictionLocation {\n  BC = 'BC', // British Columbia\n  CA = 'CA', // Canadian\n  FD = 'FD', // Federal\n  IN = 'IN', // International\n  US = 'US', // United States\n  INFO = 'INFO' // special value for sub-menu\n}\n","<template>\n  <v-select\n    class=\"nested-select\"\n    item-value=\"[group,value]\"\n    return-object\n    variant=\"filled\"\n    :error-messages=\"errorMessages\"\n    :hide-details=\"hideDetails\"\n    :items=\"items\"\n    :label=\"label\"\n    :menu-props=\"menuProps\"\n    :value=\"value\"\n    @change=\"emitChangeEvent($event)\"\n  >\n    <!-- FUTURE: use \"selection\" slot to format the selected item -->\n    <!-- <template #selection=\"{ item }\">\n      <div class=\"font-weight-bold text-truncate\">{{ item.text }}</div>\n      <div class=\"text-subtitle-1\">{{ item.subtext }}</div>\n    </template> -->\n\n    <template #item=\"{ item }\">\n      <v-list-item\n        v-if=\"item.isHeader\"\n        class=\"group-header border-top mx-4 py-4\"\n        @click.stop=\"toggleActionGroup(item.group)\"\n      >\n        <div class=\"d-flex justify-space-between align-center\">\n          <div>\n            <v-icon\n              v-if=\"item.icon\"\n              color=\"primary\"\n              class=\"mr-2\"\n            >\n              {{ item.icon }}\n            </v-icon>\n            <span\n              class=\"mb-0 mr-4 font-weight-bold\"\n              :class=\"{'app-blue': item.group === activeActionGroup}\"\n            >\n              {{ item.text }}\n            </span>\n          </div>\n          <v-icon color=\"primary\">\n            {{ item.group === activeActionGroup ? 'mdi-chevron-up' : 'mdi-chevron-down' }}\n          </v-icon>\n        </div>\n      </v-list-item>\n\n      <!-- render but conditionally hide disabled list items, so that the v-select\n      continues to display the current selection even when a different group is active -->\n      <v-list-item-content\n        v-else\n        class=\"group-item mx-4 pl-4 py-4\"\n        :class=\"{ 'hide-me': item.disabled, 'border-top': item.separator }\"\n      >\n        <template v-if=\"!item.subtext\">\n          <div class=\"font-size-16\">\n            {{ item.text }}\n          </div>\n        </template>\n        <template v-else>\n          <div class=\"font-size-16 font-weight-bold\">\n            {{ item.text }}\n          </div>\n          <div class=\"font-size-14\">\n            {{ item.subtext }}\n          </div>\n        </template>\n      </v-list-item-content>\n    </template>\n  </v-select>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport { Component, Emit, Prop } from 'vue-property-decorator'\n\n@Component({})\nexport default class NestedSelect extends Vue {\n  // props\n  @Prop({ default: 'Select an item' }) readonly label!: string\n  @Prop() readonly menuItems!: Array<any>\n  @Prop() readonly errorMessages!: string\n  @Prop() readonly hideDetails!: boolean | 'auto'\n  @Prop({ default: null }) readonly value!: any\n  @Prop() readonly maxHeight!: string\n\n  // variables\n  activeActionGroup = NaN\n\n  // computed\n  get items (): Array<any> {\n    return this.menuItems.filter(item => {\n      // always include header items\n      if (item.isHeader) return true\n\n      // include but disable items not in active group\n      // (they will be hidden via CSS)\n      item['disabled'] = (item.group !== this.activeActionGroup)\n      return true\n    })\n  }\n\n  get menuProps (): any {\n    // specify maxHeight only if it's set, otherwise the v-menu doesn't show all items\n    // (\"maxHeight: auto\" doesn't work either)\n    if (this.maxHeight) return { bottom: true, offsetY: true, maxHeight: this.maxHeight }\n    return { bottom: true, offsetY: true }\n  }\n\n  // methods\n  toggleActionGroup (group: number): void {\n    // if current group is active, deactivate it, otherwise activate it\n    this.activeActionGroup = (this.activeActionGroup === group) ? NaN : group\n  }\n\n  @Emit('change')\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  emitChangeEvent (item: any): void {}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/theme.scss';\n\n// remove v-select-list top/bottom padding\n.v-select-list {\n  padding: 0;\n}\n\n// set content colour when hovering over list items\n.v-list-item:hover .v-list-item__content,\n.list-item:hover {\n  color: $app-blue !important;\n}\n\n// set top border\n.border-top {\n  border-top: 1px solid $gray3;\n}\n\n.group-header {\n  color: $gray9;\n}\n\n.group-item {\n  color: $gray7;\n}\n\n// remove v-list-item clickable padding\n::v-deep .v-list-item:has(.group-header),\n::v-deep .v-list-item:has(.group-item) {\n  padding: 0;\n}\n\n// hide disabled list items\n::v-deep .v-list-item:has(.v-list-item__content.hide-me) {\n  display: none;\n}\n// Removes empty spaces on nested select when the list is collapsed\n::v-deep .v-list-item {\n  min-height: auto;\n  display: list-item;\n  list-style:none;\n}\n// Hide and remove space for disabled list items and makes the nested select work for firefox\n.v-list-item.v-list-item--disabled.theme--light .v-list-item__content.hide-me {\n  display: none;\n}\n</style>\n","import { JurisdictionLocation } from '@bcrs-shared-components/enums'\nimport { JurisdictionI } from '../interfaces'\n\nexport const CanJurisdictions: JurisdictionI[] = [\n  {\n    value: 'AB',\n    SHORT_DESC: 'AB',\n    text: 'Alberta'\n  },\n  {\n    value: JurisdictionLocation.BC,\n    SHORT_DESC: 'BC',\n    text: 'British Columbia'\n  },\n  {\n    value: 'MB',\n    SHORT_DESC: 'MB',\n    text: 'Manitoba'\n  },\n  {\n    value: 'NB',\n    SHORT_DESC: 'NB',\n    text: 'New Brunswick'\n  },\n  {\n    value: 'NF',\n    SHORT_DESC: 'NF',\n    text: 'Newfoundland And Labrador'\n  },\n  {\n    value: 'NT',\n    SHORT_DESC: 'NT',\n    text: 'Northwest Territories'\n  },\n  {\n    value: 'NS',\n    SHORT_DESC: 'NS',\n    text: 'Nova Scotia'\n  },\n  {\n    value: 'NU',\n    SHORT_DESC: 'NU',\n    text: 'Nunavut'\n  },\n  {\n    value: 'ON',\n    SHORT_DESC: 'ON',\n    text: 'Ontario'\n  },\n  {\n    value: 'PE',\n    SHORT_DESC: 'PE',\n    text: 'Prince Edward Island'\n  },\n  {\n    value: 'QC',\n    SHORT_DESC: 'QC',\n    text: 'Quebec'\n  },\n  {\n    value: 'SK',\n    SHORT_DESC: 'SK',\n    text: 'Saskatchewan'\n  },\n  {\n    value: 'YT',\n    SHORT_DESC: 'YT',\n    text: 'Yukon'\n  },\n  {\n    value: JurisdictionLocation.FD,\n    SHORT_DESC: 'FED',\n    text: 'Federal'\n  }\n]\n\nexport const MrasJurisdictions = [\n  'alberta',\n  'manitoba',\n  'nova scotia',\n  'ontario',\n  'quebec',\n  'saskatchewan'\n]\n","import { JurisdictionLocation } from '@bcrs-shared-components/enums'\nimport { JurisdictionI } from '../interfaces'\n\nconst CanUsa: JurisdictionI[] = [\n  {\n    value: JurisdictionLocation.CA,\n    SHORT_DESC: 'Canada',\n    text: 'Canada'\n  },\n  {\n    value: JurisdictionLocation.US,\n    SHORT_DESC: 'United States',\n    text: 'United States'\n  }\n]\n\nconst Other: JurisdictionI[] = [\n  {\n    value: 'TM',\n    SHORT_DESC: 'Turkmenistan',\n    text: 'Turkmenistan'\n  },\n  {\n    value: 'TC',\n    SHORT_DESC: 'Turks And Caico',\n    text: 'Turks And Caicos Islands'\n  },\n  {\n    value: 'TV',\n    SHORT_DESC: 'Tuvalu',\n    text: 'Tuvalu'\n  },\n  {\n    value: 'UG',\n    SHORT_DESC: 'Uganda',\n    text: 'Uganda'\n  },\n  {\n    value: 'UA',\n    SHORT_DESC: 'Ukraine',\n    text: 'Ukraine'\n  },\n  {\n    value: 'AE',\n    SHORT_DESC: 'United Arab Emi',\n    text: 'United Arab Emirates'\n  },\n  {\n    value: 'GB',\n    SHORT_DESC: 'United Kingdom',\n    text: 'United Kingdom'\n  },\n  {\n    value: 'UM',\n    SHORT_DESC: 'United States M',\n    text: 'United States Minor Outlying Islands'\n  },\n  {\n    value: 'UY',\n    SHORT_DESC: 'Uruguay',\n    text: 'Uruguay'\n  },\n  {\n    value: 'ME',\n    SHORT_DESC: 'Montenegro',\n    text: 'Montenegro'\n  },\n  {\n    value: 'RS',\n    SHORT_DESC: 'Serbia',\n    text: 'Serbia'\n  },\n  {\n    value: 'IM',\n    SHORT_DESC: 'Isle Of Man',\n    text: 'Isle Of Man'\n  },\n  {\n    value: 'GG',\n    SHORT_DESC: 'Guernsey',\n    text: 'Guernsey'\n  },\n  {\n    value: 'JE',\n    SHORT_DESC: 'Jersey',\n    text: 'Jersey'\n  },\n  {\n    value: 'BQ',\n    SHORT_DESC: 'Bonaire',\n    text: 'Bonaire'\n  },\n  {\n    value: 'CW',\n    SHORT_DESC: 'Curacao',\n    text: 'Curacao'\n  },\n  {\n    value: 'SX',\n    SHORT_DESC: 'St Maar DP',\n    text: 'Sint Maarten(Dutch Part)'\n  },\n  {\n    value: 'SS',\n    SHORT_DESC: 'Sth Sudan',\n    text: 'South Sudan'\n  },\n  {\n    value: 'MF',\n    SHORT_DESC: 'St Mart FP',\n    text: 'Saint Martin(French Part)'\n  },\n  {\n    value: 'AX',\n    SHORT_DESC: 'Aland Islands',\n    text: 'Aland Islands'\n  },\n  {\n    value: 'BL',\n    SHORT_DESC: 'Saint Barthelem',\n    text: 'Saint Barthelemy'\n  },\n  {\n    value: 'TA',\n    SHORT_DESC: 'Tristan Da Cunh',\n    text: 'Tristan Da Cunha'\n  },\n  {\n    value: 'XZ',\n    SHORT_DESC: 'Kosovo',\n    text: 'Kosovo'\n  },\n  {\n    value: 'UZ',\n    SHORT_DESC: 'Uzbekistan',\n    text: 'Uzbekistan'\n  },\n  {\n    value: 'VU',\n    SHORT_DESC: 'Vanuatu',\n    text: 'Vanuatu'\n  },\n  {\n    value: 'VE',\n    SHORT_DESC: 'Venezuela',\n    text: 'Venezuela'\n  },\n  {\n    value: 'VN',\n    SHORT_DESC: 'Viet Nam',\n    text: 'Viet Nam'\n  },\n  {\n    value: 'VI',\n    text: 'Virgin Islands, U.S.',\n    SHORT_DESC: 'Virgin Islands, U.S.'\n  },\n  {\n    value: 'VG',\n    text: 'Virgin Islands, British',\n    SHORT_DESC: 'Virgin Islands, British'\n  },\n  {\n    value: 'WF',\n    SHORT_DESC: 'Wallis And Futu',\n    text: 'Wallis And Futuna'\n  },\n  {\n    value: 'EH',\n    SHORT_DESC: 'Western Sahara',\n    text: 'Western Sahara'\n  },\n  {\n    value: 'YE',\n    SHORT_DESC: 'Yemen',\n    text: 'Yemen'\n  },\n  {\n    value: 'YU',\n    SHORT_DESC: 'Yugoslavia',\n    text: 'Yugoslavia'\n  },\n  {\n    value: 'ZM',\n    SHORT_DESC: 'Zambia',\n    text: 'Zambia'\n  },\n  {\n    value: 'ZW',\n    SHORT_DESC: 'Zimbabwe',\n    text: 'Zimbabwe'\n  },\n  {\n    value: 'AF',\n    SHORT_DESC: 'Afghanistan',\n    text: 'Afghanistan'\n  },\n  {\n    value: 'AL',\n    SHORT_DESC: 'Albania',\n    text: 'Albania'\n  },\n  {\n    value: 'DZ',\n    SHORT_DESC: 'Algeria',\n    text: 'Algeria'\n  },\n  {\n    value: 'AS',\n    SHORT_DESC: 'American Samoa',\n    text: 'American Samoa'\n  },\n  {\n    value: 'AD',\n    SHORT_DESC: 'Andorra',\n    text: 'Andorra'\n  },\n  {\n    value: 'AO',\n    SHORT_DESC: 'Angola',\n    text: 'Angola'\n  },\n  {\n    value: 'AI',\n    SHORT_DESC: 'Anguilla',\n    text: 'Anguilla'\n  },\n  {\n    value: 'AQ',\n    SHORT_DESC: 'Antarctica',\n    text: 'Antarctica'\n  },\n  {\n    value: 'AG',\n    SHORT_DESC: 'Antigua And Bar',\n    text: 'Antigua And Barbuda'\n  },\n  {\n    value: 'AR',\n    SHORT_DESC: 'Argentina',\n    text: 'Argentina'\n  },\n  {\n    value: 'AM',\n    SHORT_DESC: 'Armenia',\n    text: 'Armenia'\n  },\n  {\n    value: 'AW',\n    SHORT_DESC: 'Aruba',\n    text: 'Aruba'\n  },\n  {\n    value: 'AU',\n    SHORT_DESC: 'Australia',\n    text: 'Australia'\n  },\n  {\n    value: 'AT',\n    SHORT_DESC: 'Austria',\n    text: 'Austria'\n  },\n  {\n    value: 'AZ',\n    SHORT_DESC: 'Azerbaijan',\n    text: 'Azerbaijan'\n  },\n  {\n    value: 'BS',\n    SHORT_DESC: 'Bahamas',\n    text: 'Bahamas'\n  },\n  {\n    value: 'BH',\n    SHORT_DESC: 'Bahrain',\n    text: 'Bahrain'\n  },\n  {\n    value: 'BD',\n    SHORT_DESC: 'Bangladesh',\n    text: 'Bangladesh'\n  },\n  {\n    value: 'BB',\n    SHORT_DESC: 'Barbados',\n    text: 'Barbados'\n  },\n  {\n    value: 'BY',\n    SHORT_DESC: 'Belarus',\n    text: 'Belarus'\n  },\n  {\n    value: 'BE',\n    SHORT_DESC: 'Belgium',\n    text: 'Belgium'\n  },\n  {\n    value: 'BZ',\n    SHORT_DESC: 'Belize',\n    text: 'Belize'\n  },\n  {\n    value: 'BJ',\n    SHORT_DESC: 'Benin',\n    text: 'Benin'\n  },\n  {\n    value: 'BM',\n    SHORT_DESC: 'Bermuda',\n    text: 'Bermuda'\n  },\n  {\n    value: 'BT',\n    SHORT_DESC: 'Bhutan',\n    text: 'Bhutan'\n  },\n  {\n    value: 'BO',\n    SHORT_DESC: 'Bolivia',\n    text: 'Bolivia'\n  },\n  {\n    value: 'BA',\n    SHORT_DESC: 'Bosnia And Herz',\n    text: 'Bosnia And Herzegovina'\n  },\n  {\n    value: 'BW',\n    SHORT_DESC: 'Botswana',\n    text: 'Botswana'\n  },\n  {\n    value: 'BV',\n    SHORT_DESC: 'Bouvet Island',\n    text: 'Bouvet Island'\n  },\n  {\n    value: 'BR',\n    SHORT_DESC: 'Brazil',\n    text: 'Brazil'\n  },\n  {\n    value: 'IO',\n    SHORT_DESC: 'British Indian ',\n    text: 'British Indian Ocean Territory'\n  },\n  {\n    value: 'BN',\n    SHORT_DESC: 'Brunei Darussal',\n    text: 'Brunei Darussalam'\n  },\n  {\n    value: 'BG',\n    SHORT_DESC: 'Bulgaria',\n    text: 'Bulgaria'\n  },\n  {\n    value: 'BF',\n    SHORT_DESC: 'Burkina Faso',\n    text: 'Burkina Faso'\n  },\n  {\n    value: 'BI',\n    SHORT_DESC: 'Burundi',\n    text: 'Burundi'\n  },\n  {\n    value: 'KH',\n    SHORT_DESC: 'Cambodia',\n    text: 'Cambodia'\n  },\n  {\n    value: 'CM',\n    SHORT_DESC: 'Cameroon',\n    text: 'Cameroon'\n  },\n  {\n    value: 'CV',\n    SHORT_DESC: 'Cape Verde',\n    text: 'Cape Verde'\n  },\n  {\n    value: 'KY',\n    SHORT_DESC: 'Cayman Islands',\n    text: 'Cayman Islands'\n  },\n  {\n    value: 'CF',\n    SHORT_DESC: 'Central African',\n    text: 'Central African Republic'\n  },\n  {\n    value: 'TD',\n    SHORT_DESC: 'Chad',\n    text: 'Chad'\n  },\n  {\n    value: 'CL',\n    SHORT_DESC: 'Chile',\n    text: 'Chile'\n  },\n  {\n    value: 'CN',\n    SHORT_DESC: 'China',\n    text: 'China'\n  },\n  {\n    value: 'CX',\n    SHORT_DESC: 'Christmas Islan',\n    text: 'Christmas Island'\n  },\n  {\n    value: 'CC',\n    SHORT_DESC: 'Cocos (Keeling)',\n    text: 'Cocos (Keeling) Islands'\n  },\n  {\n    value: 'CO',\n    SHORT_DESC: 'Colombia',\n    text: 'Colombia'\n  },\n  {\n    value: 'KM',\n    SHORT_DESC: 'Comoros',\n    text: 'Comoros'\n  },\n  {\n    value: 'CG',\n    SHORT_DESC: 'Congo',\n    text: 'Congo'\n  },\n  {\n    value: 'CK',\n    SHORT_DESC: 'Cook Islands',\n    text: 'Cook Islands'\n  },\n  {\n    value: 'CR',\n    SHORT_DESC: 'Costa Rica',\n    text: 'Costa Rica'\n  },\n  {\n    value: 'CI',\n    SHORT_DESC: \"Cote D'Ivoire\",\n    text: \"Cote D'Ivoire\"\n  },\n  {\n    value: 'HR',\n    SHORT_DESC: 'Croatia',\n    text: 'Croatia'\n  },\n  {\n    value: 'CU',\n    SHORT_DESC: 'Cuba',\n    text: 'Cuba'\n  },\n  {\n    value: 'CY',\n    SHORT_DESC: 'Cyprus',\n    text: 'Cyprus'\n  },\n  {\n    value: 'CZ',\n    SHORT_DESC: 'Czech Republic',\n    text: 'Czech Republic'\n  },\n  {\n    value: 'DK',\n    SHORT_DESC: 'Denmark',\n    text: 'Denmark'\n  },\n  {\n    value: 'DJ',\n    SHORT_DESC: 'Djibouti',\n    text: 'Djibouti'\n  },\n  {\n    value: 'DM',\n    SHORT_DESC: 'Dominica',\n    text: 'Dominica'\n  },\n  {\n    value: 'DO',\n    SHORT_DESC: 'Dominican Repub',\n    text: 'Dominican Republic'\n  },\n  {\n    value: 'EC',\n    SHORT_DESC: 'Ecuador',\n    text: 'Ecuador'\n  },\n  {\n    value: 'EG',\n    SHORT_DESC: 'Egypt',\n    text: 'Egypt'\n  },\n  {\n    value: 'SV',\n    SHORT_DESC: 'El Salvador',\n    text: 'El Salvador'\n  },\n  {\n    value: 'GQ',\n    SHORT_DESC: 'Equatorial Guin',\n    text: 'Equatorial Guinea'\n  },\n  {\n    value: 'ER',\n    SHORT_DESC: 'Eritrea',\n    text: 'Eritrea'\n  },\n  {\n    value: 'EE',\n    SHORT_DESC: 'Estonia',\n    text: 'Estonia'\n  },\n  {\n    value: 'ET',\n    SHORT_DESC: 'Ethiopia',\n    text: 'Ethiopia'\n  },\n  {\n    value: 'FK',\n    SHORT_DESC: 'Falkland Island',\n    text: 'Falkland Islands (Malvinas)'\n  },\n  {\n    value: 'FO',\n    SHORT_DESC: 'Faroe Islands',\n    text: 'Faroe Islands'\n  },\n  {\n    value: 'FJ',\n    SHORT_DESC: 'Fiji',\n    text: 'Fiji'\n  },\n  {\n    value: 'FI',\n    SHORT_DESC: 'Finland',\n    text: 'Finland'\n  },\n  {\n    value: 'FR',\n    SHORT_DESC: 'France',\n    text: 'France'\n  },\n  {\n    value: 'GF',\n    SHORT_DESC: 'French Guiana',\n    text: 'French Guiana'\n  },\n  {\n    value: 'PF',\n    SHORT_DESC: 'French Polynesi',\n    text: 'French Polynesia'\n  },\n  {\n    value: 'TF',\n    SHORT_DESC: 'French Southern',\n    text: 'French Southern Territories'\n  },\n  {\n    value: 'GA',\n    SHORT_DESC: 'Gabon',\n    text: 'Gabon'\n  },\n  {\n    value: 'GM',\n    SHORT_DESC: 'Gambia',\n    text: 'Gambia'\n  },\n  {\n    value: 'GE',\n    SHORT_DESC: 'Georgia',\n    text: 'Georgia'\n  },\n  {\n    value: 'DE',\n    SHORT_DESC: 'Germany',\n    text: 'Germany'\n  },\n  {\n    value: 'GH',\n    SHORT_DESC: 'Ghana',\n    text: 'Ghana'\n  },\n  {\n    value: 'GI',\n    SHORT_DESC: 'Gibraltar',\n    text: 'Gibraltar'\n  },\n  {\n    value: 'GR',\n    SHORT_DESC: 'Greece',\n    text: 'Greece'\n  },\n  {\n    value: 'GL',\n    SHORT_DESC: 'Greenland',\n    text: 'Greenland'\n  },\n  {\n    value: 'GD',\n    SHORT_DESC: 'Grenada',\n    text: 'Grenada'\n  },\n  {\n    value: 'GP',\n    SHORT_DESC: 'Guadeloupe',\n    text: 'Guadeloupe'\n  },\n  {\n    value: 'GU',\n    SHORT_DESC: 'Guam',\n    text: 'Guam'\n  },\n  {\n    value: 'GT',\n    SHORT_DESC: 'Guatemala',\n    text: 'Guatemala'\n  },\n  {\n    value: 'GN',\n    SHORT_DESC: 'Guinea',\n    text: 'Guinea'\n  },\n  {\n    value: 'GW',\n    SHORT_DESC: 'Guinea-Bissau',\n    text: 'Guinea-Bissau'\n  },\n  {\n    value: 'GY',\n    SHORT_DESC: 'Guyana',\n    text: 'Guyana'\n  },\n  {\n    value: 'HT',\n    SHORT_DESC: 'Haiti',\n    text: 'Haiti'\n  },\n  {\n    value: 'HM',\n    SHORT_DESC: 'Heard Island An',\n    text: 'Heard Island And McDonald Islands'\n  },\n  {\n    value: 'VA',\n    SHORT_DESC: 'Holy See (Vatic',\n    text: 'Holy See (Vatican City State)'\n  },\n  {\n    value: 'HN',\n    SHORT_DESC: 'Honduras',\n    text: 'Honduras'\n  },\n  {\n    value: 'HK',\n    SHORT_DESC: 'Hong Kong',\n    text: 'Hong Kong'\n  },\n  {\n    value: 'HU',\n    SHORT_DESC: 'Hungary',\n    text: 'Hungary'\n  },\n  {\n    value: 'IS',\n    SHORT_DESC: 'Iceland',\n    text: 'Iceland'\n  },\n  {\n    value: 'IN',\n    SHORT_DESC: 'India',\n    text: 'India'\n  },\n  {\n    value: 'ID',\n    SHORT_DESC: 'Indonesia',\n    text: 'Indonesia'\n  },\n  {\n    value: 'IR',\n    SHORT_DESC: 'Iran',\n    text: 'Iran'\n  },\n  {\n    value: 'IQ',\n    SHORT_DESC: 'Iraq',\n    text: 'Iraq'\n  },\n  {\n    value: 'IE',\n    SHORT_DESC: 'Ireland',\n    text: 'Ireland'\n  },\n  {\n    value: 'IL',\n    SHORT_DESC: 'Israel',\n    text: 'Israel'\n  },\n  {\n    value: 'IT',\n    SHORT_DESC: 'Italy',\n    text: 'Italy'\n  },\n  {\n    value: 'JM',\n    SHORT_DESC: 'Jamaica',\n    text: 'Jamaica'\n  },\n  {\n    value: 'JP',\n    SHORT_DESC: 'Japan',\n    text: 'Japan'\n  },\n  {\n    value: 'JO',\n    SHORT_DESC: 'Jordan',\n    text: 'Jordan'\n  },\n  {\n    value: 'KZ',\n    SHORT_DESC: 'Kazakhstan',\n    text: 'Kazakhstan'\n  },\n  {\n    value: 'KE',\n    SHORT_DESC: 'Kenya',\n    text: 'Kenya'\n  },\n  {\n    value: 'KI',\n    SHORT_DESC: 'Kiribati',\n    text: 'Kiribati'\n  },\n  {\n    value: 'KP',\n    SHORT_DESC: 'Korea',\n    text: \"Democratic People's Republic Of Korea\"\n  },\n  {\n    value: 'KR',\n    SHORT_DESC: 'Korea',\n    text: 'South Korea'\n  },\n  {\n    value: 'KW',\n    SHORT_DESC: 'Kuwait',\n    text: 'Kuwait'\n  },\n  {\n    value: 'KG',\n    SHORT_DESC: 'Kyrgyzstan',\n    text: 'Kyrgyzstan'\n  },\n  {\n    value: 'LA',\n    SHORT_DESC: 'Laos',\n    text: \"Lao People's Democratic Republic\"\n  },\n  {\n    value: 'LV',\n    SHORT_DESC: 'Latvia',\n    text: 'Latvia'\n  },\n  {\n    value: 'LB',\n    SHORT_DESC: 'Lebanon',\n    text: 'Lebanon'\n  },\n  {\n    value: 'LS',\n    SHORT_DESC: 'Lesotho',\n    text: 'Lesotho'\n  },\n  {\n    value: 'LR',\n    SHORT_DESC: 'Liberia',\n    text: 'Liberia'\n  },\n  {\n    value: 'LY',\n    SHORT_DESC: 'Libya',\n    text: 'Libya'\n  },\n  {\n    value: 'LI',\n    SHORT_DESC: 'Liechtenstein',\n    text: 'Liechtenstein'\n  },\n  {\n    value: 'LT',\n    SHORT_DESC: 'Lithuania',\n    text: 'Lithuania'\n  },\n  {\n    value: 'LU',\n    SHORT_DESC: 'Luxembourg',\n    text: 'Luxembourg'\n  },\n  {\n    value: 'MO',\n    SHORT_DESC: 'Macao',\n    text: 'Macao'\n  },\n  {\n    value: 'MK',\n    SHORT_DESC: 'Macedonia',\n    text: 'Macedonia'\n  },\n  {\n    value: 'MG',\n    SHORT_DESC: 'Madagascar',\n    text: 'Madagascar'\n  },\n  {\n    value: 'MW',\n    SHORT_DESC: 'Malawi',\n    text: 'Malawi'\n  },\n  {\n    value: 'MY',\n    SHORT_DESC: 'Malaysia',\n    text: 'Malaysia'\n  },\n  {\n    value: 'MV',\n    SHORT_DESC: 'Maldives',\n    text: 'Maldives'\n  },\n  {\n    value: 'ML',\n    SHORT_DESC: 'Mali',\n    text: 'Mali'\n  },\n  {\n    value: 'MT',\n    SHORT_DESC: 'Malta',\n    text: 'Malta'\n  },\n  {\n    value: 'MH',\n    SHORT_DESC: 'Marshall Island',\n    text: 'Marshall Islands'\n  },\n  {\n    value: 'MQ',\n    SHORT_DESC: 'Martinique',\n    text: 'Martinique'\n  },\n  {\n    value: 'MR',\n    SHORT_DESC: 'Mauritania',\n    text: 'Mauritania'\n  },\n  {\n    value: 'MU',\n    SHORT_DESC: 'Mauritius',\n    text: 'Mauritius'\n  },\n  {\n    value: 'YT',\n    SHORT_DESC: 'Mayotte',\n    text: 'Mayotte'\n  },\n  {\n    value: 'MX',\n    SHORT_DESC: 'Mexico',\n    text: 'Mexico'\n  },\n  {\n    value: 'FM',\n    SHORT_DESC: 'Micronesia',\n    text: 'Micronesia'\n  },\n  {\n    value: 'MD',\n    SHORT_DESC: 'Moldova',\n    text: 'Moldova'\n  },\n  {\n    value: 'MC',\n    SHORT_DESC: 'Monaco',\n    text: 'Monaco'\n  },\n  {\n    value: 'MN',\n    SHORT_DESC: 'Mongolia',\n    text: 'Mongolia'\n  },\n  {\n    value: 'MS',\n    SHORT_DESC: 'Montserrat',\n    text: 'Montserrat'\n  },\n  {\n    value: 'MA',\n    SHORT_DESC: 'Morocco',\n    text: 'Morocco'\n  },\n  {\n    value: 'MZ',\n    SHORT_DESC: 'Mozambique',\n    text: 'Mozambique'\n  },\n  {\n    value: 'MM',\n    SHORT_DESC: 'Myanmar',\n    text: 'Myanmar'\n  },\n  {\n    value: 'NA',\n    SHORT_DESC: 'Namibia',\n    text: 'Namibia'\n  },\n  {\n    value: 'NR',\n    SHORT_DESC: 'Nauru',\n    text: 'Nauru'\n  },\n  {\n    value: 'NP',\n    SHORT_DESC: 'Nepal',\n    text: 'Nepal'\n  },\n  {\n    value: 'AN',\n    SHORT_DESC: 'Netherlands Ant',\n    text: 'Netherlands Antilles'\n  },\n  {\n    value: 'NL',\n    SHORT_DESC: 'Netherlands',\n    text: 'Netherlands'\n  },\n  {\n    value: 'NC',\n    SHORT_DESC: 'New Caledonia',\n    text: 'New Caledonia'\n  },\n  {\n    value: 'NZ',\n    SHORT_DESC: 'New Zealand',\n    text: 'New Zealand'\n  },\n  {\n    value: 'NI',\n    SHORT_DESC: 'Nicaragua',\n    text: 'Nicaragua'\n  },\n  {\n    value: 'NE',\n    SHORT_DESC: 'Niger',\n    text: 'Niger'\n  },\n  {\n    value: 'NG',\n    SHORT_DESC: 'Nigeria',\n    text: 'Nigeria'\n  },\n  {\n    value: 'NU',\n    SHORT_DESC: 'Niue',\n    text: 'Niue'\n  },\n  {\n    value: 'NF',\n    SHORT_DESC: 'Norfolk Island',\n    text: 'Norfolk Island'\n  },\n  {\n    value: 'MP',\n    SHORT_DESC: 'Northern Marian',\n    text: 'Northern Mariana Islands'\n  },\n  {\n    value: 'NO',\n    SHORT_DESC: 'Norway',\n    text: 'Norway'\n  },\n  {\n    value: 'OM',\n    SHORT_DESC: 'Oman',\n    text: 'Oman'\n  },\n  {\n    value: 'PK',\n    SHORT_DESC: 'Pakistan',\n    text: 'Pakistan'\n  },\n  {\n    value: 'PW',\n    SHORT_DESC: 'Palau',\n    text: 'Palau'\n  },\n  {\n    value: 'PS',\n    SHORT_DESC: 'Palestinian Ter',\n    text: 'Palestinian Territory'\n  },\n  {\n    value: 'PA',\n    SHORT_DESC: 'Panama',\n    text: 'Panama'\n  },\n  {\n    value: 'PG',\n    SHORT_DESC: 'Papua New Guine',\n    text: 'Papua New Guinea'\n  },\n  {\n    value: 'PY',\n    SHORT_DESC: 'Paraguay',\n    text: 'Paraguay'\n  },\n  {\n    value: 'PE',\n    SHORT_DESC: 'Peru',\n    text: 'Peru'\n  },\n  {\n    value: 'PH',\n    SHORT_DESC: 'Philippines',\n    text: 'Philippines'\n  },\n  {\n    value: 'PN',\n    SHORT_DESC: 'Pitcairn',\n    text: 'Pitcairn'\n  },\n  {\n    value: 'PL',\n    SHORT_DESC: 'Poland',\n    text: 'Poland'\n  },\n  {\n    value: 'PT',\n    SHORT_DESC: 'Portugal',\n    text: 'Portugal'\n  },\n  {\n    value: 'PR',\n    SHORT_DESC: 'Puerto Rico',\n    text: 'Puerto Rico'\n  },\n  {\n    value: 'QA',\n    SHORT_DESC: 'Qatar',\n    text: 'Qatar'\n  },\n  {\n    value: 'RE',\n    SHORT_DESC: 'Reunion',\n    text: 'Reunion'\n  },\n  {\n    value: 'RO',\n    SHORT_DESC: 'Romania',\n    text: 'Romania'\n  },\n  {\n    value: 'RU',\n    SHORT_DESC: 'Russian Federat',\n    text: 'Russian Federation'\n  },\n  {\n    value: 'RW',\n    SHORT_DESC: 'Rwanda',\n    text: 'Rwanda'\n  },\n  {\n    value: 'SH',\n    SHORT_DESC: 'Saint Helena',\n    text: 'Saint Helena'\n  },\n  {\n    value: 'KN',\n    SHORT_DESC: 'Saint Kitts And',\n    text: 'Saint Kitts And Nevis'\n  },\n  {\n    value: 'LC',\n    SHORT_DESC: 'Saint Lucia',\n    text: 'Saint Lucia'\n  },\n  {\n    value: 'PM',\n    SHORT_DESC: 'Saint Pierre An',\n    text: 'Saint Pierre And Miquelon'\n  },\n  {\n    value: 'VC',\n    SHORT_DESC: 'Saint Vincent A',\n    text: 'Saint Vincent And The Grenadines'\n  },\n  {\n    value: 'WS',\n    SHORT_DESC: 'Samoa',\n    text: 'Samoa'\n  },\n  {\n    value: 'SM',\n    SHORT_DESC: 'San Marino',\n    text: 'San Marino'\n  },\n  {\n    value: 'ST',\n    SHORT_DESC: 'Sao Tome And Pr',\n    text: 'Sao Tome And Principe'\n  },\n  {\n    value: 'SA',\n    SHORT_DESC: 'Saudi Arabia',\n    text: 'Saudi Arabia'\n  },\n  {\n    value: 'SN',\n    SHORT_DESC: 'Senegal',\n    text: 'Senegal'\n  },\n  {\n    value: 'SC',\n    SHORT_DESC: 'Seychelles',\n    text: 'Seychelles'\n  },\n  {\n    value: 'SL',\n    SHORT_DESC: 'Sierra Leone',\n    text: 'Sierra Leone'\n  },\n  {\n    value: 'SG',\n    SHORT_DESC: 'Singapore',\n    text: 'Singapore'\n  },\n  {\n    value: 'SK',\n    SHORT_DESC: 'Slovakia',\n    text: 'Slovakia'\n  },\n  {\n    value: 'SI',\n    SHORT_DESC: 'Slovenia',\n    text: 'Slovenia'\n  },\n  {\n    value: 'SB',\n    SHORT_DESC: 'Solomon Islands',\n    text: 'Solomon Islands'\n  },\n  {\n    value: 'SO',\n    SHORT_DESC: 'Somalia',\n    text: 'Somalia'\n  },\n  {\n    value: 'ZA',\n    SHORT_DESC: 'South Africa',\n    text: 'South Africa'\n  },\n  {\n    value: 'GS',\n    SHORT_DESC: 'South Georgia a',\n    text: 'South Georgia and the South Sandwich Isl'\n  },\n  {\n    value: 'ES',\n    SHORT_DESC: 'Spain',\n    text: 'Spain'\n  },\n  {\n    value: 'LK',\n    SHORT_DESC: 'Sri Lanka',\n    text: 'Sri Lanka'\n  },\n  {\n    value: 'SD',\n    SHORT_DESC: 'Sudan',\n    text: 'Sudan'\n  },\n  {\n    value: 'SR',\n    SHORT_DESC: 'Suriname',\n    text: 'Suriname'\n  },\n  {\n    value: 'SJ',\n    SHORT_DESC: 'Svalbard And Ja',\n    text: 'Svalbard And Jan Mayen'\n  },\n  {\n    value: 'SZ',\n    SHORT_DESC: 'Swaziland',\n    text: 'Swaziland'\n  },\n  {\n    value: 'SE',\n    SHORT_DESC: 'Sweden',\n    text: 'Sweden'\n  },\n  {\n    value: 'CH',\n    SHORT_DESC: 'Switzerland',\n    text: 'Switzerland'\n  },\n  {\n    value: 'SY',\n    SHORT_DESC: 'Syrian Arab Rep',\n    text: 'Syrian Arab Republic'\n  },\n  {\n    value: 'TW',\n    SHORT_DESC: 'Taiwan',\n    text: 'Taiwan'\n  },\n  {\n    value: 'TJ',\n    SHORT_DESC: 'Tajikistan',\n    text: 'Tajikistan'\n  },\n  {\n    value: 'TZ',\n    SHORT_DESC: 'Tanzania',\n    text: 'Tanzania, United Republic Of'\n  },\n  {\n    value: 'TH',\n    SHORT_DESC: 'Thailand',\n    text: 'Thailand'\n  },\n  {\n    value: 'TL',\n    SHORT_DESC: 'Timor-Leste',\n    text: 'Timor-Leste'\n  },\n  {\n    value: 'TG',\n    SHORT_DESC: 'Togo',\n    text: 'Togo'\n  },\n  {\n    value: 'TK',\n    SHORT_DESC: 'Tokelau',\n    text: 'Tokelau'\n  },\n  {\n    value: 'TO',\n    SHORT_DESC: 'Tonga',\n    text: 'Tonga'\n  },\n  {\n    value: 'TT',\n    SHORT_DESC: 'Trinidad And To',\n    text: 'Trinidad And Tobago'\n  },\n  {\n    value: 'TN',\n    SHORT_DESC: 'Tunisia',\n    text: 'Tunisia'\n  },\n  {\n    value: 'TR',\n    SHORT_DESC: 'Turkey',\n    text: 'Turkey'\n  }\n]\n\nconst OtherSorted = Other.sort((a, b) => {\n  if (a.text >= b.text) {\n    return 1\n  }\n  if (a.text <= b.text) {\n    return -1\n  }\n  if (a.text === b.text) {\n    return 0\n  }\n})\n\n// put Can and USA at front of sorted list\nexport const IntlJurisdictions = CanUsa.concat(OtherSorted)\n","<template>\n  <NestedSelect\n    :label=\"label\"\n    :errorMessages=\"errorMessages\"\n    :hideDetails=\"false\"\n    :menuItems=\"jurisdictionOptions\"\n    :value=\"jurisdiction ? jurisdiction.text : ''\"\n    @change=\"emitChangeEvent($event)\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { Component, Emit, Prop, Vue } from 'vue-property-decorator'\nimport NestedSelect from './NestedSelect.vue'\nimport { JurisdictionLocation } from '@bcrs-shared-components/enums'\nimport { CanJurisdictions, IntlJurisdictions } from './list-data'\n\n@Component({\n  components: { NestedSelect }\n})\nexport default class Jurisdiction extends Vue {\n  // props\n  @Prop({ default: 'Select the home jurisdiction' }) readonly label!: string\n  @Prop() readonly errorMessages!: string\n\n  // variables\n  jurisdiction = null\n\n  /** The jursidiction select options */\n  get jurisdictionOptions (): Array<any> {\n    const array = [] as Array<any>\n\n    // add in Canadian jurisdictions (not including BC)\n    array.push({ isHeader: true, group: 0, text: 'Canadian' })\n    CanJurisdictions\n      .filter(jur => jur.value !== JurisdictionLocation.BC)\n      .forEach(jur => array.push({\n        group: 0,\n        text: jur.text,\n        value: jur.value,\n        separator: (jur.value === JurisdictionLocation.FD)\n      }))\n\n    // add in International jurisdictions (not including CA)\n    array.push({ isHeader: true, group: 1, text: 'International' })\n    IntlJurisdictions\n      .filter(jur => jur.value !== JurisdictionLocation.CA)\n      .forEach(jur => array.push({\n        group: 1,\n        text: jur.text,\n        value: jur.value,\n        separator: false\n      }))\n\n    return array\n  }\n\n  @Emit('change')\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  emitChangeEvent (jurisdiction: any): void {}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n"],"names":["JurisdictionLocation","NestedSelect","Vue","__publicField","item","group","__decorateClass","Prop","Emit","Component","CanJurisdictions","CanUsa","Other","OtherSorted","a","b","IntlJurisdictions","Jurisdiction","array","jur","jurisdiction"],"mappings":"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M,SACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,0BACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,aACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,2BACR,EACA,CACE,MAAO,KACP,WAAY,gBACZ,KAAM,eACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,kBACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,kBACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,WACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,KAAM,uBACN,WAAY,sBACd,EACA,CACE,MAAO,KACP,KAAM,0BACN,WAAY,yBACd,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,mBACR,EACA,CACE,MAAO,KACP,WAAY,iBACZ,KAAM,gBACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,cACZ,KAAM,aACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,iBACZ,KAAM,gBACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,qBACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,WACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,WACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,wBACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,gBACZ,KAAM,eACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,gCACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,mBACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,eACZ,KAAM,cACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,iBACZ,KAAM,gBACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,0BACR,EACA,CACE,MAAO,KACP,WAAY,OACZ,KAAM,MACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,kBACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,yBACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,eACZ,KAAM,cACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,gBACZ,KAAM,eACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,OACZ,KAAM,MACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,iBACZ,KAAM,gBACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,oBACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,cACZ,KAAM,aACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,mBACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,6BACR,EACA,CACE,MAAO,KACP,WAAY,gBACZ,KAAM,eACR,EACA,CACE,MAAO,KACP,WAAY,OACZ,KAAM,MACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,gBACZ,KAAM,eACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,kBACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,6BACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,WACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,WACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,OACZ,KAAM,MACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,WACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,gBACZ,KAAM,eACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,mCACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,+BACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,WACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,WACR,EACA,CACE,MAAO,KACP,WAAY,OACZ,KAAM,MACR,EACA,CACE,MAAO,KACP,WAAY,OACZ,KAAM,MACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,uCACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,aACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,OACZ,KAAM,kCACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,gBACZ,KAAM,eACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,WACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,WACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,OACZ,KAAM,MACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,kBACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,WACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,sBACR,EACA,CACE,MAAO,KACP,WAAY,cACZ,KAAM,aACR,EACA,CACE,MAAO,KACP,WAAY,gBACZ,KAAM,eACR,EACA,CACE,MAAO,KACP,WAAY,cACZ,KAAM,aACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,WACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,OACZ,KAAM,MACR,EACA,CACE,MAAO,KACP,WAAY,iBACZ,KAAM,gBACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,0BACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,OACZ,KAAM,MACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,uBACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,kBACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,OACZ,KAAM,MACR,EACA,CACE,MAAO,KACP,WAAY,cACZ,KAAM,aACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,cACZ,KAAM,aACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,oBACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,eACZ,KAAM,cACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,uBACR,EACA,CACE,MAAO,KACP,WAAY,cACZ,KAAM,aACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,2BACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,kCACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,uBACR,EACA,CACE,MAAO,KACP,WAAY,eACZ,KAAM,cACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,eACZ,KAAM,cACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,WACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,iBACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,eACZ,KAAM,cACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,0CACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,WACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,wBACR,EACA,CACE,MAAO,KACP,WAAY,YACZ,KAAM,WACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,cACZ,KAAM,aACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,sBACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,EACA,CACE,MAAO,KACP,WAAY,aACZ,KAAM,YACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,8BACR,EACA,CACE,MAAO,KACP,WAAY,WACZ,KAAM,UACR,EACA,CACE,MAAO,KACP,WAAY,cACZ,KAAM,aACR,EACA,CACE,MAAO,KACP,WAAY,OACZ,KAAM,MACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,QACZ,KAAM,OACR,EACA,CACE,MAAO,KACP,WAAY,kBACZ,KAAM,qBACR,EACA,CACE,MAAO,KACP,WAAY,UACZ,KAAM,SACR,EACA,CACE,MAAO,KACP,WAAY,SACZ,KAAM,QACR,CACF,EAEMC,EAAcD,EAAM,KAAK,CAACE,EAAGC,IAAM,CACnC,GAAAD,EAAE,MAAQC,EAAE,KACP,MAAA,GAEL,GAAAD,EAAE,MAAQC,EAAE,KACP,MAAA,GAEL,GAAAD,EAAE,OAASC,EAAE,KACR,MAAA,EAEX,CAAC,EAGYC,EAAoBL,EAAO,OAAOE,CAAW,kMC9uC1D,IAAAI,EAAA,cAAAf,CAAA,CAAA,kCAEAC,EAAA,cACAA,EAAA,sBAGAA,EAAA,oBAAA,MAGA,IAAA,qBAAA,CACA,MAAAe,EAAA,CAAA,EAGA,OAAAA,EAAA,KAAA,CAAA,SAAA,GAAA,MAAA,EAAA,KAAA,WAAA,EAEAR,EAAA,OAAAS,GAAAA,EAAA,QAAAnB,EAAA,EAAA,EACA,QAAAmB,GAAAD,EAAA,KAAA,CACA,MAAA,EACA,KAAAC,EAAA,KACA,MAAAA,EAAA,MACA,UAAAA,EAAA,QAAAnB,EAAA,EACA,CAAA,CAAA,EAGAkB,EAAA,KAAA,CAAA,SAAA,GAAA,MAAA,EAAA,KAAA,gBAAA,EAEAF,EAAA,OAAAG,GAAAA,EAAA,QAAAnB,EAAA,EAAA,EACA,QAAAmB,GAAAD,EAAA,KAAA,CACA,MAAA,EACA,KAAAC,EAAA,KACA,MAAAA,EAAA,MACA,UAAA,EACA,CAAA,CAAA,EAEAD,CACA,CAIA,gBAAAE,EAAA,CAAA,CACA,EAtCAd,EAAA,CAAAC,EAAA,CAAA,QAAA,+BAAA,CAAA,EAFAU,EAEA,UAAA,QAAA,CAAA,EACAX,EAAA,CAAAC,EAAA,CAAA,EAHAU,EAGA,UAAA,gBAAA,CAAA,EAoCAX,EAAA,CAFAE,EAAA,QAAA,CAAA,EArCAS,EAuCA,UAAA,kBAAA,CAAA,EAvCAA,EAAAX,EAAA,CAHAG,EAAA,CACA,WAAA,CAAA,aAAAR,CAAA,CAAA,CACA,CAAA,EACAgB,CAAA;;;;;;;;"}