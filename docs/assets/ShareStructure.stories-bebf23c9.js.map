{"version":3,"file":"ShareStructure.stories-bebf23c9.js","sources":["../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/native.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../src/components/share-structure/array-move.ts","../../src/components/share-structure/currency-lookup-mixin.ts","../../src/components/share-structure/EditShareStructure.vue","../../src/components/share-structure/ShareStructure.vue"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","/** array-move version 4.0\r\nCredit: https://github.com/sindresorhus/array-move\r\n\r\nLicence:\r\n\r\nMIT License\r\n\r\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\r\ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the\r\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\r\npersons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or\r\nsubstantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\r\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\nUSE OR OTHER DEALINGS IN THE SOFTWARE.\r\n**/\r\n\r\n/**\r\nMoves the item to the new position in the input array. Useful for huge arrays where absolute performance is needed.\r\n\r\n@param array - The array to modify.\r\n@param fromIndex - The index of item to move. If negative, it will begin that many elements from the end.\r\n@param toIndex - The index of where to move the item. If negative, it will begin that many elements from the end.\r\n**/\r\nexport function arrayMoveMutable (array: unknown[], fromIndex: number, toIndex: number): void {\r\n  const startIndex = fromIndex < 0 ? array.length + fromIndex : fromIndex\r\n\r\n  if (startIndex >= 0 && startIndex < array.length) {\r\n    const endIndex = toIndex < 0 ? array.length + toIndex : toIndex\r\n\r\n    const [item] = array.splice(fromIndex, 1)\r\n    array.splice(endIndex, 0, item)\r\n  }\r\n}\r\n\r\n/**\r\nClones the given `array`, moves the item to a new position in the new array, and then returns the new array.\r\nThe given `array` is not mutated.\r\n\r\n@param array - The array with the item to move.\r\n@param fromIndex - The index of item to move. If negative, it will begin that many elements from the end.\r\n@param toIndex - The index of where to move the item. If negative, it will begin that many elements from the end.\r\n@returns A new array with the item moved to the new position.\r\n**/\r\nexport function arrayMoveImmutable<ValueType> (array: readonly ValueType[], fromIndex: number, toIndex: number):\r\n  ValueType[] {\r\n  const newArray = [...array]\r\n  arrayMoveMutable(newArray, fromIndex, toIndex)\r\n  return newArray\r\n}\r\n","import Vue from 'vue'\r\nimport { Component } from 'vue-property-decorator'\r\n\r\n/**\r\n * Mixin that provides currency list and lookup operations\r\n */\r\n@Component({})\r\nexport default class CurrencyLookupMixin extends Vue {\r\n  readonly currencyList = [\r\n    { code: 'CAD', name: 'Canadian dollar' },\r\n    { code: 'USD', name: 'United States dollar' },\r\n    { divider: true },\r\n    { code: 'AED', name: 'UAE dirham' },\r\n    { code: 'AFN', name: 'Afghan afghani' },\r\n    { code: 'ALL', name: 'Albanian lek' },\r\n    { code: 'AMD', name: 'Armenian dram' },\r\n    { code: 'ANG', name: 'Netherlands Antillean gulden' },\r\n    { code: 'AOA', name: 'Angolan kwanza' },\r\n    { code: 'ARS', name: 'Argentine peso' },\r\n    { code: 'AUD', name: 'Australian dollar' },\r\n    { code: 'AWG', name: 'Aruban florin' },\r\n    { code: 'AZN', name: 'Azerbaijani manat' },\r\n    { code: 'BAM', name: 'Bosnia and Herzegovina konvertibilna marka' },\r\n    { code: 'BBD', name: 'Barbadian dollar' },\r\n    { code: 'BDT', name: 'Bangladeshi taka' },\r\n    { code: 'BGN', name: 'Bulgarian lev' },\r\n    { code: 'BHD', name: 'Bahraini dinar' },\r\n    { code: 'BIF', name: 'Burundi franc' },\r\n    { code: 'BMD', name: 'Bermudian dollar' },\r\n    { code: 'BND', name: 'Brunei dollar' },\r\n    { code: 'BOB', name: 'Bolivian boliviano' },\r\n    { code: 'BRL', name: 'Brazilian real' },\r\n    { code: 'BSD', name: 'Bahamian dollar' },\r\n    { code: 'BTN', name: 'Bhutanese ngultrum' },\r\n    { code: 'BWP', name: 'Botswana pula' },\r\n    { code: 'BYR', name: 'Belarusian ruble' },\r\n    { code: 'BZD', name: 'Belize dollar' },\r\n    { code: 'CDF', name: 'Congolese franc' },\r\n    { code: 'CHF', name: 'Swiss franc' },\r\n    { code: 'CLP', name: 'Chilean peso' },\r\n    { code: 'CNY', name: 'Chinese/Yuan renminbi' },\r\n    { code: 'COP', name: 'Colombian peso' },\r\n    { code: 'CRC', name: 'Costa Rican colon' },\r\n    { code: 'CUC', name: 'Cuban peso' },\r\n    { code: 'CVE', name: 'Cape Verdean escudo' },\r\n    { code: 'CZK', name: 'Czech koruna' },\r\n    { code: 'DJF', name: 'Djiboutian franc' },\r\n    { code: 'DKK', name: 'Danish krone' },\r\n    { code: 'DOP', name: 'Dominican peso' },\r\n    { code: 'DZD', name: 'Algerian dinar' },\r\n    { code: 'EEK', name: 'Estonian kroon' },\r\n    { code: 'EGP', name: 'Egyptian pound' },\r\n    { code: 'ERN', name: 'Eritrean nakfa' },\r\n    { code: 'ETB', name: 'Ethiopian birr' },\r\n    { code: 'EUR', name: 'European Euro' },\r\n    { code: 'FJD', name: 'Fijian dollar' },\r\n    { code: 'FKP', name: 'Falkland Islands pound' },\r\n    { code: 'GBP', name: 'British pound' },\r\n    { code: 'GEL', name: 'Georgian lari' },\r\n    { code: 'GHS', name: 'Ghanaian cedi' },\r\n    { code: 'GIP', name: 'Gibraltar pound' },\r\n    { code: 'GMD', name: 'Gambian dalasi' },\r\n    { code: 'GNF', name: 'Guinean franc' },\r\n    { code: 'GQE', name: 'Central African CFA franc' },\r\n    { code: 'GTQ', name: 'Guatemalan quetzal' },\r\n    { code: 'GYD', name: 'Guyanese dollar' },\r\n    { code: 'HKD', name: 'Hong Kong dollar' },\r\n    { code: 'HNL', name: 'Honduran lempira' },\r\n    { code: 'HRK', name: 'Croatian kuna' },\r\n    { code: 'HTG', name: 'Haitian gourde' },\r\n    { code: 'HUF', name: 'Hungarian forint' },\r\n    { code: 'IDR', name: 'Indonesian rupiah' },\r\n    { code: 'ILS', name: 'Israeli new sheqel' },\r\n    { code: 'INR', name: 'Indian rupee' },\r\n    { code: 'IQD', name: 'Iraqi dinar' },\r\n    { code: 'IRR', name: 'Iranian rial' },\r\n    { code: 'ISK', name: 'Icelandic kr\\u00f3na' },\r\n    { code: 'JMD', name: 'Jamaican dollar' },\r\n    { code: 'JOD', name: 'Jordanian dinar' },\r\n    { code: 'JPY', name: 'Japanese yen' },\r\n    { code: 'KES', name: 'Kenyan shilling' },\r\n    { code: 'KGS', name: 'Kyrgyzstani som' },\r\n    { code: 'KHR', name: 'Cambodian riel' },\r\n    { code: 'KMF', name: 'Comorian franc' },\r\n    { code: 'KPW', name: 'North Korean won' },\r\n    { code: 'KRW', name: 'South Korean won' },\r\n    { code: 'KWD', name: 'Kuwaiti dinar' },\r\n    { code: 'KYD', name: 'Cayman Islands dollar' },\r\n    { code: 'KZT', name: 'Kazakhstani tenge' },\r\n    { code: 'LAK', name: 'Lao kip' },\r\n    { code: 'LBP', name: 'Lebanese lira' },\r\n    { code: 'LKR', name: 'Sri Lankan rupee' },\r\n    { code: 'LRD', name: 'Liberian dollar' },\r\n    { code: 'LSL', name: 'Lesotho loti' },\r\n    { code: 'LTL', name: 'Lithuanian litas' },\r\n    { code: 'LVL', name: 'Latvian lats' },\r\n    { code: 'LYD', name: 'Libyan dinar' },\r\n    { code: 'MAD', name: 'Moroccan dirham' },\r\n    { code: 'MDL', name: 'Moldovan leu' },\r\n    { code: 'MGA', name: 'Malagasy ariary' },\r\n    { code: 'MKD', name: 'Macedonian denar' },\r\n    { code: 'MMK', name: 'Myanma kyat' },\r\n    { code: 'MNT', name: 'Mongolian tugrik' },\r\n    { code: 'MOP', name: 'Macanese pataca' },\r\n    { code: 'MRO', name: 'Mauritanian ouguiya' },\r\n    { code: 'MUR', name: 'Mauritian rupee' },\r\n    { code: 'MVR', name: 'Maldivian rufiyaa' },\r\n    { code: 'MWK', name: 'Malawian kwacha' },\r\n    { code: 'MXN', name: 'Mexican peso' },\r\n    { code: 'MYR', name: 'Malaysian ringgit' },\r\n    { code: 'MZM', name: 'Mozambican metical' },\r\n    { code: 'NAD', name: 'Namibian dollar' },\r\n    { code: 'NGN', name: 'Nigerian naira' },\r\n    { code: 'NIO', name: 'Nicaraguan c\\u00f3rdoba' },\r\n    { code: 'NOK', name: 'Norwegian krone' },\r\n    { code: 'NPR', name: 'Nepalese rupee' },\r\n    { code: 'NZD', name: 'New Zealand dollar' },\r\n    { code: 'OMR', name: 'Omani rial' },\r\n    { code: 'PAB', name: 'Panamanian balboa' },\r\n    { code: 'PEN', name: 'Peruvian nuevo sol' },\r\n    { code: 'PGK', name: 'Papua New Guinean kina' },\r\n    { code: 'PHP', name: 'Philippine peso' },\r\n    { code: 'PKR', name: 'Pakistani rupee' },\r\n    { code: 'PLN', name: 'Polish zloty' },\r\n    { code: 'PYG', name: 'Paraguayan guarani' },\r\n    { code: 'QAR', name: 'Qatari riyal' },\r\n    { code: 'RON', name: 'Romanian leu' },\r\n    { code: 'RSD', name: 'Serbian dinar' },\r\n    { code: 'RUB', name: 'Russian ruble' },\r\n    { code: 'SAR', name: 'Saudi riyal' },\r\n    { code: 'SBD', name: 'Solomon Islands dollar' },\r\n    { code: 'SCR', name: 'Seychellois rupee' },\r\n    { code: 'SDG', name: 'Sudanese pound' },\r\n    { code: 'SEK', name: 'Swedish krona' },\r\n    { code: 'SGD', name: 'Singapore dollar' },\r\n    { code: 'SHP', name: 'Saint Helena pound' },\r\n    { code: 'SLL', name: 'Sierra Leonean leone' },\r\n    { code: 'SOS', name: 'Somali shilling' },\r\n    { code: 'SRD', name: 'Surinamese dollar' },\r\n    { code: 'SYP', name: 'Syrian pound' },\r\n    { code: 'SZL', name: 'Swazi lilangeni' },\r\n    { code: 'THB', name: 'Thai baht' },\r\n    { code: 'TJS', name: 'Tajikistani somoni' },\r\n    { code: 'TMT', name: 'Turkmen manat' },\r\n    { code: 'TND', name: 'Tunisian dinar' },\r\n    { code: 'TRY', name: 'Turkish new lira' },\r\n    { code: 'TTD', name: 'Trinidad and Tobago dollar' },\r\n    { code: 'TWD', name: 'New Taiwan dollar' },\r\n    { code: 'TZS', name: 'Tanzanian shilling' },\r\n    { code: 'UAH', name: 'Ukrainian hryvnia' },\r\n    { code: 'UGX', name: 'Ugandan shilling' },\r\n    { code: 'UYU', name: 'Uruguayan peso' },\r\n    { code: 'UZS', name: 'Uzbekistani som' },\r\n    { code: 'VEB', name: 'Venezuelan bolivar' },\r\n    { code: 'VND', name: 'Vietnamese dong' },\r\n    { code: 'VUV', name: 'Vanuatu vatu' },\r\n    { code: 'WST', name: 'Samoan tala' },\r\n    { code: 'XAF', name: 'Central African CFA franc' },\r\n    { code: 'XCD', name: 'East Caribbean dollar' },\r\n    { code: 'XDR', name: 'Special Drawing Rights' },\r\n    { code: 'XOF', name: 'West African CFA franc' },\r\n    { code: 'XPF', name: 'CFP franc' },\r\n    { code: 'YER', name: 'Yemeni rial' },\r\n    { code: 'ZAR', name: 'South African rand' },\r\n    { code: 'ZMK', name: 'Zambian kwacha' },\r\n    { code: 'ZWR', name: 'Zimbabwean dollar' }\r\n  ]\r\n\r\n  getCurrencyList (): Array<any> {\r\n    return this.currencyList\r\n  }\r\n\r\n  getCurrencyNameByCode (code: string): string {\r\n    const currency = this.currencyList.find(currency => currency.code === code)\r\n    return currency && currency.name\r\n  }\r\n}\r\n","<template>\r\n  <div id=\"edit-share-structure\">\r\n    <ConfirmDialog\r\n      ref=\"confirm\"\r\n      attach=\"#edit-share-structure\"\r\n    />\r\n\r\n    <v-expand-transition>\r\n      <ul class=\"list add-share-structure\">\r\n        <li class=\"add-share-structure-container\">\r\n          <div class=\"meta-container\">\r\n            <label\r\n              class=\"add-share-structure-header\"\r\n              :class=\"{'error-text': invalidSection}\"\r\n            >\r\n              <span\r\n                v-if=\"activeIndex === -1\"\r\n                class=\"pl-5\"\r\n                :class=\"{'pl-10 text-body-3': isSeries}\"\r\n              >\r\n                Add Share {{ shareStructure.type }}\r\n              </span>\r\n              <span\r\n                v-else\r\n                :class=\"{'pl-10 text-body-3': isSeries}\"\r\n              >Edit Share {{ shareStructure.type }}</span>\r\n            </label>\r\n\r\n            <div class=\"meta-container__inner\">\r\n              <v-form\r\n                ref=\"shareStructureForm\"\r\n                v-model=\"formValid\"\r\n                class=\"share-structure-form\"\r\n                @submit.prevent=\"addShareStructure()\"\r\n              >\r\n                <v-text-field\r\n                  id=\"txt-name\"\r\n                  v-model=\"shareStructure.name\"\r\n                  filled\r\n                  :label=\"shareStructure.type + ' Name [Shares]'\"\r\n                  :hint=\"'Enter the name of the ' + shareStructure.type.toLowerCase() +\r\n                    ' - the word &quot;Shares&quot; is automatically added'\"\r\n                  :rules=\"nameRules\"\r\n                  suffix=\"Shares\"\r\n                  persistent-hint\r\n                />\r\n\r\n                <v-divider class=\"separator\" />\r\n\r\n                <v-radio-group\r\n                  v-model=\"hasNoMaximumShares\"\r\n                  column\r\n                  class=\"radio-group\"\r\n                  @change=\"changeMaximumShareFlag()\"\r\n                >\r\n                  <v-radio :value=\"false\">\r\n                    <template #label>\r\n                      <v-row>\r\n                        <v-col cols=\"6\">\r\n                          <v-text-field\r\n                            id=\"txt-max-shares\"\r\n                            v-model.number=\"shareStructure.maxNumberOfShares\"\r\n                            filled\r\n                            label=\"Maximum Number of Shares\"\r\n                            persistent-hint\r\n                            :hint=\"'Enter the maximum number of shares in the ' + shareStructure.type.toLowerCase()\"\r\n                            :rules=\"maximumShareRules\"\r\n                            :disabled=\"hasNoMaximumShares\"\r\n                          />\r\n                        </v-col>\r\n                      </v-row>\r\n                    </template>\r\n                  </v-radio>\r\n                  <v-radio\r\n                    v-if=\"isNoMaxSharesVisible\"\r\n                    id=\"lbl-no-maximum\"\r\n                    :value=\"true\"\r\n                    label=\"No maximum\"\r\n                  />\r\n                </v-radio-group>\r\n\r\n                <v-divider class=\"separator mx-4\" />\r\n\r\n                <v-radio-group\r\n                  v-show=\"isClass\"\r\n                  v-model=\"hasNoParValue\"\r\n                  column\r\n                  class=\"radio-group\"\r\n                  @change=\"changeParValueFlag()\"\r\n                >\r\n                  <v-radio\r\n                    id=\"radio-par-value\"\r\n                    :value=\"false\"\r\n                  >\r\n                    <template #label>\r\n                      <v-row>\r\n                        <v-col cols=\"6\">\r\n                          <v-text-field\r\n                            id=\"class-par-value\"\r\n                            v-model.number=\"shareStructure.parValue\"\r\n                            filled\r\n                            label=\"Par Value\"\r\n                            :rules=\"parValueRules\"\r\n                            hint=\"Enter the initial value of each share\"\r\n                            persistent-hint\r\n                          />\r\n                        </v-col>\r\n                        <v-col cols=\"6\">\r\n                          <v-select\r\n                            id=\"class-currency\"\r\n                            v-model=\"shareStructure.currency\"\r\n                            :items=\"getCurrencyList()\"\r\n                            filled\r\n                            label=\"Currency\"\r\n                            :rules=\"currencyRules\"\r\n                            item-text=\"`${data.item.name}, ${data.item.code}`\"\r\n                            item-value=\"code\"\r\n                          >\r\n                            <template #selection=\"data\">\r\n                              {{ data.item.name }} ({{ data.item.code }})\r\n                            </template>\r\n                            <template #item=\"data\">\r\n                              {{ data.item.name }} ({{ data.item.code }})\r\n                            </template>\r\n                          </v-select>\r\n                        </v-col>\r\n                      </v-row>\r\n                    </template>\r\n                  </v-radio>\r\n                  <v-radio\r\n                    id=\"radio-no-par\"\r\n                    :value=\"true\"\r\n                    label=\"No par value\"\r\n                  />\r\n                </v-radio-group>\r\n\r\n                <div\r\n                  v-show=\"isSeries\"\r\n                  class=\"pl-10\"\r\n                >\r\n                  <v-row v-if=\"shareStructure.hasParValue\">\r\n                    <v-col cols=\"6\">\r\n                      <v-text-field\r\n                        id=\"series-par-value\"\r\n                        label=\"Par Value\"\r\n                        :value=\"shareStructure.parValue\"\r\n                        :disabled=\"true\"\r\n                        width=\"10\"\r\n                      />\r\n                    </v-col>\r\n                    <v-col cols=\"6\">\r\n                      <v-text-field\r\n                        id=\"series-currency\"\r\n                        label=\"Currency\"\r\n                        :value=\"`${getCurrencyNameByCode(shareStructure.currency)} (${shareStructure.currency})`\"\r\n                        :disabled=\"true\"\r\n                      />\r\n                    </v-col>\r\n                  </v-row>\r\n                  <v-label\r\n                    v-else\r\n                    id=\"lbl-no-par\"\r\n                  >\r\n                    No par value\r\n                  </v-label>\r\n                </div>\r\n\r\n                <v-divider class=\"separator mx-4\" />\r\n\r\n                <div class=\"form__row\">\r\n                  <v-checkbox\r\n                    id=\"special-rights-check-box\"\r\n                    v-model=\"shareStructure.hasRightsOrRestrictions\"\r\n                    :label=\"'This share ' + shareStructure.type.toLowerCase() + ' has special rights or restrictions'\"\r\n                    @click=\"confirmSeriesRemoval()\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form__row form__btns\">\r\n                  <v-btn\r\n                    id=\"remove-btn\"\r\n                    large\r\n                    outlined\r\n                    color=\"error\"\r\n                    :disabled=\"activeIndex === -1\"\r\n                    @click=\"removeShareStructure()\"\r\n                  >\r\n                    Remove\r\n                  </v-btn>\r\n\r\n                  <v-btn\r\n                    id=\"done-btn\"\r\n                    large\r\n                    class=\"form-primary-btn\"\r\n                    color=\"primary\"\r\n                    @click=\"validateForm()\"\r\n                  >\r\n                    Done\r\n                  </v-btn>\r\n\r\n                  <v-btn\r\n                    id=\"cancel-btn\"\r\n                    large\r\n                    outlined\r\n                    color=\"primary\"\r\n                    @click=\"resetFormAndData(true)\"\r\n                  >\r\n                    Cancel\r\n                  </v-btn>\r\n                </div>\r\n              </v-form>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </v-expand-transition>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\nimport { Component, Emit, Mixins, Prop, Watch } from 'vue-property-decorator'\r\nimport { ConfirmDialog } from '@bcrs-shared-components/confirm-dialog'\r\nimport { ConfirmDialogType, FormIF, ShareClassIF } from '@bcrs-shared-components/interfaces'\r\nimport { ActionTypes } from '@bcrs-shared-components/enums'\r\nimport CurrencyLookupMixin from './currency-lookup-mixin'\r\n\r\n@Component({\r\n  components: {\r\n    ConfirmDialog\r\n  }\r\n})\r\nexport default class EditShareStructure extends Mixins(CurrencyLookupMixin) {\r\n  // Refs\r\n  $refs!: Vue['$refs'] & {\r\n    confirm: ConfirmDialogType,\r\n    shareStructureForm: FormIF\r\n  };\r\n\r\n  // Props\r\n  @Prop({ default: null }) readonly initialValue!: ShareClassIF\r\n  @Prop({ default: null }) readonly activeIndex!: number\r\n  @Prop({ default: null }) readonly parentIndex!: number\r\n  @Prop({ default: '' }) readonly shareId!: string\r\n  @Prop({ default: [] }) readonly shareClasses!: ShareClassIF[]\r\n  @Prop({ default: false }) readonly resolutionRequired!: boolean\r\n\r\n  /** Prompt Error. */\r\n  @Prop({ default: false }) readonly invalidSection!: boolean\r\n\r\n  // Text-field Rules\r\n  private nameRules = []\r\n  private maximumShareRules = []\r\n  private parValueRules = []\r\n  private currencyRules = []\r\n\r\n  // Data Properties\r\n  private shareStructure: ShareClassIF = null\r\n  private formValid = true\r\n  private hasNoMaximumShares = false\r\n  private hasNoParValue = false\r\n  private hasSeriesShares = false\r\n\r\n  private excludedWordsListForClass: string [] = ['share', 'shares', 'value']\r\n  private excludedWordsListForSeries: string [] = ['share', 'shares']\r\n\r\n  // Getters\r\n  get isClass (): boolean {\r\n    return this.shareStructure.type === 'Class'\r\n  }\r\n\r\n  get isSeries (): boolean {\r\n    return this.shareStructure.type === 'Series'\r\n  }\r\n\r\n  get isNoMaxSharesVisible (): boolean {\r\n    return this.isSeries ? !(this.shareClasses[this.parentIndex].hasMaximumShares) : true\r\n  }\r\n\r\n  /** The rules applying to the Class/Series name input field. */\r\n  get nameRule (): Array<(v) => boolean | string> {\r\n    const rules: Array<(v) => boolean | string> = [\r\n      (v: string) => !/^\\s/g.test(v) || 'Invalid spaces', // leading spaces\r\n      (v: string) => !/\\s$/g.test(v) || 'Invalid spaces' // trailing spaces\r\n    ]\r\n    if (this.isClass) {\r\n      rules.push(\r\n        (v: string) => !!v || 'Enter the name of the class - the word \"Shares\" is automatically added',\r\n        (v: string) => !(this.shareClasses\r\n          .find((s, index) => {\r\n            // Don't apply uniqueness check to self\r\n            return index !== this.activeIndex && s.name.split(' Shares')[0].toLowerCase() === v.toLowerCase()\r\n          })\r\n        ) || 'Class name must be unique')\r\n      rules.push(\r\n        (v: string) => !(v.split(' ').some(r => this.excludedWordsListForClass.includes(r.toLowerCase()))) ||\r\n          'Class name should not contain any of the words share, shares or value')\r\n    } else if (this.isSeries) {\r\n      rules.push(\r\n        (v: string) => !!v || 'Enter the name of the series - the word \"Shares\" is automatically added',\r\n        (v: string) => !(this.shareClasses[this.parentIndex].series\r\n          .find((s, index) => {\r\n            // Don't apply uniqueness check to self\r\n            return index !== this.activeIndex &&\r\n                s.name.split(' Shares')[0].toLowerCase() === v.toLowerCase()\r\n          })\r\n        ) || 'Series name must be unique')\r\n      rules.push(\r\n        (v: string) => !(v.split(' ').some(r => this.excludedWordsListForSeries.includes(r.toLowerCase()))) ||\r\n          'Series name should not contain any of the words share or shares')\r\n    }\r\n    return rules\r\n  }\r\n\r\n  /** The rules applying to the Class/Series max share input field. */\r\n  get maximumShareRule (): Array<(v) => boolean | string> {\r\n    let rules: Array<(v) => boolean | string> = []\r\n    if (!this.hasNoMaximumShares) {\r\n      rules = [\r\n        (v: string) => (v !== '' && v !== null && v !== undefined) || 'Number of shares is required',\r\n        (v: string) => /^-?\\d+$/.test(v) || 'Must be a whole number',\r\n        (v: string) => (+v > 0) || 'Number must be greater than 0',\r\n        (v: string) => (v && v.toString().length < 16) || 'Number must be less than 16 digits'\r\n      ]\r\n      // To prevent changing share class value to a lower value after adding series.\r\n      if (this.isClass && this.activeIndex !== -1 && !this.hasNoMaximumShares &&\r\n        this.shareStructure.series.length > 0) {\r\n        const seriesSum = this.shareStructure.series.reduce((a, b) => +a + +b.maxNumberOfShares, 0)\r\n        rules.push(\r\n          (v: string) => !!v || 'Enter the maximum number of shares in the class',\r\n          (v: string) => +v >= seriesSum ||\r\n            'The number for the series (or all series combined, if there are multiple under ' +\r\n            'a class) cannot exceed the number for the class')\r\n      }\r\n      if (this.isSeries && this.shareClasses[this.parentIndex].hasMaximumShares) {\r\n        let filteredSeries = this.shareClasses[this.parentIndex].series\r\n        // The series is in edit mode and should be avoided from the calculating the total\r\n        if (this.activeIndex !== -1) {\r\n          filteredSeries = filteredSeries.filter((series) => (\r\n            series.id !== this.shareClasses[this.parentIndex].series[this.activeIndex].id))\r\n        }\r\n        const currentSum = filteredSeries.reduce((a, b) => +a + +b.maxNumberOfShares, 0)\r\n        rules.push(\r\n          (v: string) => !!v || 'Enter the maximum number of shares in the series',\r\n          (v: string) => +v + currentSum <= +this.shareClasses[this.parentIndex].maxNumberOfShares ||\r\n            'The number for the series (or all series combined, if there are multiple under ' +\r\n            'a class) cannot exceed the number for the class')\r\n      }\r\n    }\r\n    return rules\r\n  }\r\n\r\n  /** The rules applying to the Class/Series par value input field. */\r\n  get parValueRule (): Array<(v) => boolean | string> {\r\n    let rules: Array<(v) => boolean | string> = []\r\n    if (!this.hasNoParValue) {\r\n      rules = [\r\n        (v: string) => (v !== '' && v !== null && v !== undefined) || 'Par value is required',\r\n        (v: string) => +v > 0 || 'Amount must be greater than 0',\r\n        (v: string) => (+v < 1)\r\n          ? (/^(\\d+(\\.\\d{0,3})?|\\.\\d{0,3})$/.test(v) || 'Amounts less than 1 can be entered with up to 3 decimal place')\r\n          : (/^\\d+(\\.\\d{1,2})?$/.test(v) || 'Amounts greater than 1 can be entered with up to 2 decimal place')]\r\n    }\r\n    return rules\r\n  }\r\n\r\n  /** The rules applying to the Class/Series currency input field. */\r\n  get currencyRule (): Array<(v) => boolean | string> {\r\n    if (!this.hasNoParValue) {\r\n      return [(v: string) => !!v || 'Currency is required']\r\n    }\r\n    return []\r\n  }\r\n\r\n  /** Called when component is created. */\r\n  created (): void {\r\n    if (this.initialValue) {\r\n      this.shareStructure = { ...this.initialValue }\r\n      this.hasNoMaximumShares = !this.shareStructure.hasMaximumShares\r\n      this.hasNoParValue = !this.shareStructure.hasParValue\r\n      this.hasSeriesShares = this.shareStructure.hasRightsOrRestrictions &&\r\n        (this.shareStructure.series && this.shareStructure.series.length >= 1)\r\n      if (this.activeIndex !== -1) {\r\n        const name = this.shareStructure.name\r\n        this.shareStructure.name = name.substr(0, name.indexOf(' Shares'))\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Applies the Rules to the input fields and validate. */\r\n  protected async validateForm (): Promise<void> {\r\n    this.nameRules = this.nameRule\r\n    this.maximumShareRules = this.maximumShareRule\r\n    this.parValueRules = this.parValueRule\r\n    this.currencyRules = this.currencyRule\r\n\r\n    // Await the applied rules and validate form\r\n    await Vue.nextTick()\r\n    this.$refs.shareStructureForm.validate()\r\n\r\n    if (this.formValid) {\r\n      const shareStructure: ShareClassIF = this.addShareStructure()\r\n      this.emitAddShareStructureEvent(shareStructure)\r\n      this.resetFormAndData(false)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emit the updated share structure to the parent component.\r\n   * @param shareStructure The object body to emit.\r\n   * */\r\n  private emitAddShareStructureEvent (shareStructure: ShareClassIF): void {\r\n    if (this.isClass) {\r\n      this.emitAddEditShareClassEvent(shareStructure)\r\n    } else if (this.isSeries) {\r\n      this.emitAddEditShareSeriesEvent(shareStructure)\r\n    }\r\n  }\r\n\r\n  /** Add a NEW share class or series to the share structure and the appropriate action. */\r\n  protected addShareStructure (): ShareClassIF {\r\n    let shareStructureToAdd: ShareClassIF = { ...this.shareStructure }\r\n    if (this.activeIndex === -1) {\r\n      shareStructureToAdd.id = this.shareId\r\n    }\r\n    shareStructureToAdd.name = `${shareStructureToAdd.name} Shares`\r\n    shareStructureToAdd.hasMaximumShares = !this.hasNoMaximumShares\r\n    shareStructureToAdd.hasParValue = !this.hasNoParValue\r\n\r\n    // Check if Corrections disabled share Classes capability to support Series\r\n    if (!shareStructureToAdd.hasRightsOrRestrictions && shareStructureToAdd.series) {\r\n      let addedSeriesIndexes: number[] = []\r\n      shareStructureToAdd.series.forEach(series => {\r\n        // First remove any ADDED series from the list\r\n        if (series.action === ActionTypes.ADDED) {\r\n          // Find the index of the series to remove due to sorting functionality potentially changing indexes\r\n          const seriesIndex = shareStructureToAdd.series.findIndex(x => x.id === series.id)\r\n          addedSeriesIndexes.push(seriesIndex)\r\n        }\r\n      })\r\n      // Remove the added series from the array starting at the highest index, as to not shift the indexes of series\r\n      addedSeriesIndexes.reverse().forEach(index => shareStructureToAdd.series.splice(index, 1))\r\n\r\n      // Set the action to REMOVED for any original series\r\n      shareStructureToAdd.series.forEach(series => {\r\n        series.action = ActionTypes.REMOVED\r\n      })\r\n    }\r\n    return shareStructureToAdd\r\n  }\r\n\r\n  /** Remove the current share class or series. */\r\n  protected removeShareStructure (): void {\r\n    if (this.isClass) {\r\n      this.emitRemoveShareClassEvent(this.activeIndex)\r\n    } else if (this.isSeries) {\r\n      this.emitRemoveShareSeriesEvent(this.activeIndex)\r\n    }\r\n  }\r\n\r\n  /** Reset the form validators. */\r\n  protected resetFormAndData (emitEvent: boolean): void {\r\n    this.$refs.shareStructureForm.reset()\r\n    if (emitEvent) {\r\n      this.emitResetEvent()\r\n    }\r\n  }\r\n\r\n  /** Update the maximum share flag. */\r\n  protected changeMaximumShareFlag (): void {\r\n    if (this.hasNoMaximumShares) {\r\n      this.shareStructure.maxNumberOfShares = null\r\n    }\r\n  }\r\n\r\n  /** Update the par value flag. */\r\n  protected changeParValueFlag (): void {\r\n    if (this.hasNoParValue) {\r\n      this.shareStructure.currency = null\r\n      this.shareStructure.parValue = null\r\n    }\r\n  }\r\n\r\n  /** Middleware to prompt a confirmation of removal or resolution. */\r\n  protected async confirmSeriesRemoval (): Promise<void> {\r\n    if (this.hasSeriesShares && !this.shareStructure.hasRightsOrRestrictions) {\r\n      // open confirmation dialog and wait for response\r\n      this.$refs.confirm.open(\r\n        'Remove Share Series with Class',\r\n        'A share series exists for this class. Removing the Special Rights or Restrictions for this class' +\r\n        ' will remove all associated share series.',\r\n        {\r\n          width: '45rem',\r\n          persistent: true,\r\n          yes: 'Remove',\r\n          no: null,\r\n          cancel: 'Cancel'\r\n        }\r\n      ).then(() => {\r\n        // if we get here, Yes was clicked\r\n        this.shareStructure.hasRightsOrRestrictions = false\r\n      }).catch(() => {\r\n        // if we get here, Cancel was clicked\r\n        this.shareStructure.hasRightsOrRestrictions = true\r\n      })\r\n    } else {\r\n      // Prompt parent to collect resolution info if required\r\n      if (this.resolutionRequired) {\r\n        await this.emitResolutionPrompt(true)\r\n        this.shareStructure.hasRightsOrRestrictions = false\r\n      }\r\n    }\r\n  }\r\n\r\n  @Watch('resolutionRequired')\r\n  private updateResolutionRequirement (): any {\r\n    // When resolution requirements have been satisfied, update the model\r\n    this.shareStructure.hasRightsOrRestrictions = !this.resolutionRequired\r\n  }\r\n\r\n  // Events\r\n  @Emit('addEditClass')\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  private emitAddEditShareClassEvent (shareClass: ShareClassIF): void {}\r\n\r\n  @Emit('addEditSeries')\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  private emitAddEditShareSeriesEvent (shareSeries: ShareClassIF): void {}\r\n\r\n  @Emit('removeClass')\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  private emitRemoveShareClassEvent (shareClassIndex: number): void {}\r\n\r\n  @Emit('removeSeries')\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  private emitRemoveShareSeriesEvent (shareSeriesIndex: number): void {}\r\n\r\n  @Emit('resetEvent')\r\n  private emitResetEvent (): void {}\r\n\r\n  @Emit('resolutionPrompt')\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  private emitResolutionPrompt (requiresPrompt: boolean): void {}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '@/assets/styles/theme.scss';\r\n\r\nul {\r\n  padding-top: 0.5rem;\r\n}\r\n\r\nli {\r\n  list-style: None;\r\n  padding-top: 0.25rem;\r\n}\r\n\r\n:deep(.v-input .v-label) {\r\n  font-weight: normal !important;\r\n}\r\n\r\n.v-btn {\r\n  min-width: 6.5rem !important;\r\n}\r\n\r\n.add-share-structure {\r\n  .add-share-structure-container {\r\n    padding: 1.25rem 1.25rem 1.25rem 0;\r\n\r\n    .meta-container {\r\n      > label:first-child {\r\n        margin-bottom: 1.5rem;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.meta-container {\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n\r\n  > label:first-child {\r\n    font-weight: bold;\r\n  }\r\n\r\n  &__inner {\r\n    flex: 1 1 auto;\r\n  }\r\n}\r\n\r\n.add-share-structure-header {\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  line-height: 1.5rem;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  .meta-container {\r\n    flex-flow: row nowrap;\r\n\r\n    > label:first-child {\r\n      flex: 0 0 auto;\r\n      margin-right: 1rem;\r\n      width: 10rem;\r\n    }\r\n  }\r\n}\r\n\r\n.separator {\r\n  margin-top: 0.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.radio-group {\r\n  padding-top:0.875rem\r\n}\r\n\r\n:deep(.theme--light.v-btn.v-btn--disabled) {\r\n  color: $app-red !important;\r\n  opacity: 0.4 !important;\r\n}\r\n</style>\r\n","<template>\r\n  <v-card\r\n    id=\"share-structure\"\r\n    flat\r\n  >\r\n    <ConfirmDialog\r\n      ref=\"confirm\"\r\n      attach=\"#share-structure\"\r\n    />\r\n\r\n    <template v-if=\"isEditMode\">\r\n      <div id=\"share-summary\">\r\n        <!-- Summary Header -->\r\n        <div class=\"share-summary-header\">\r\n          <v-icon color=\"app-dk-blue\">\r\n            mdi-sitemap\r\n          </v-icon>\r\n          <label class=\"share-summary-header-title\"><strong>Share Structure</strong></label>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Instructional Text -->\r\n      <div class=\"share-info-container info-text pt-6 px-4\">\r\n        If your share structure contains a class or series of shares with special rights or restrictions, you must have\r\n        passed a resolution or have a court order to change your share structure. <strong>Note:</strong> All changes\r\n        must have the same Resolution or Court Order Date. If you need to enter changes that occurred on multiple dates\r\n        you must file and pay for each change separately.\r\n\r\n        <p\r\n          v-if=\"invalidMinimumShareClass\"\r\n          class=\"error-text small-text mt-6\"\r\n        >\r\n          Your share structure must contain at least one share class.\r\n        </p>\r\n      </div>\r\n\r\n      <!-- Add Buttons -->\r\n      <div class=\"btn-container py-6 px-4\">\r\n        <v-btn\r\n          id=\"btn-add-person\"\r\n          outlined\r\n          color=\"primary\"\r\n          :disabled=\"addEditInProgress\"\r\n          @click=\"initNewShareClass()\"\r\n        >\r\n          <v-icon>mdi-plus</v-icon>\r\n          <span>Add Share Class</span>\r\n        </v-btn>\r\n      </div>\r\n    </template>\r\n\r\n    <div :class=\"{'invalid-section': invalidSection}\">\r\n      <v-expand-transition>\r\n        <v-card\r\n          v-if=\"showAddShareStructureForm\"\r\n          flat\r\n          class=\"add-share-structure-container\"\r\n        >\r\n          <EditShareStructure\r\n            :initialValue=\"currentShareStructure\"\r\n            :activeIndex=\"activeIndex\"\r\n            :shareId=\"shareId\"\r\n            :parentIndex=\"parentIndex\"\r\n            :shareClasses=\"shareClasses\"\r\n            :resolutionRequired=\"resolutionRequired\"\r\n            :invalidSection=\"invalidSection\"\r\n            @addEditClass=\"addEditShareClass($event)\"\r\n            @resolutionPrompt=\"emitResolutionPrompt($event)\"\r\n            @resetEvent=\"resetData()\"\r\n          />\r\n        </v-card>\r\n      </v-expand-transition>\r\n    </div>\r\n\r\n    <v-data-table\r\n      class=\"share-structure-table\"\r\n      :headers=\"headers\"\r\n      :items=\"shareClasses\"\r\n      disable-pagination\r\n      disable-sort\r\n      hide-default-footer\r\n    >\r\n      <template #item=\"row\">\r\n        <!-- Share Class Rows -->\r\n        <tr\r\n          v-if=\"!showClassEditForm[row.index] && !(!isEditMode && row.item.action === ActionTypes.REMOVED)\"\r\n          :key=\"row.item.id\"\r\n          class=\"class-row\"\r\n          :class=\"[\r\n            { 'class-row-has-series': row.item.series.length},\r\n            { 'removed' : row.item.action === ActionTypes.REMOVED }\r\n          ]\"\r\n        >\r\n          <td\r\n            class=\"list-item__title\"\r\n            :class=\"[\r\n              { 'invalid-section': invalidMinimumShareClass },\r\n              { 'list-item__subtitle' : row.item.action === ActionTypes.REMOVED }\r\n            ]\"\r\n          >\r\n            {{ row.item.name }}\r\n            <ActionChip\r\n              v-if=\"row.item.action && isEditMode\"\r\n              :actionable-item=\"row.item\"\r\n              :edited-label=\"editedLabel\"\r\n              class=\"pb-2\"\r\n            />\r\n          </td>\r\n          <td class=\"text-right\">\r\n            {{ row.item.maxNumberOfShares ? (+row.item.maxNumberOfShares).toLocaleString() : 'No Maximum' }}\r\n          </td>\r\n          <td class=\"text-right\">\r\n            {{ row.item.parValue ? `$${formatParValue(row.item.parValue)}` : 'No Par Value' }}\r\n          </td>\r\n          <td>{{ row.item.currency }}</td>\r\n          <td>{{ row.item.hasRightsOrRestrictions ? 'Yes' : 'No' }}</td>\r\n\r\n          <!-- Share Class Action Btns -->\r\n          <td\r\n            v-if=\"isEditMode\"\r\n            class=\"actions-cell pt-4\"\r\n          >\r\n            <div class=\"actions\">\r\n              <!-- Share Class Correct Btn -->\r\n              <span\r\n                v-if=\"!row.item.action\"\r\n                class=\"edit-action\"\r\n              >\r\n                <v-btn\r\n                  :id=\"'class-' + row.index + '-change-btn'\"\r\n                  text\r\n                  color=\"primary\"\r\n                  :disabled=\"addEditInProgress\"\r\n                  @click=\"initShareClassForEdit(row.index)\"\r\n                >\r\n                  <v-icon small>mdi-pencil</v-icon>\r\n                  <span>{{ editLabel }}</span>\r\n                </v-btn>\r\n              </span>\r\n\r\n              <!-- Share Class Undo Btn -->\r\n              <span\r\n                v-if=\"row.item.action === ActionTypes.EDITED || row.item.action === ActionTypes.REMOVED\"\r\n                :class=\"{ 'undo-action': row.item.action !== ActionTypes.REMOVED }\"\r\n              >\r\n                <v-btn\r\n                  :id=\"'class-' + row.index + '-undo-btn'\"\r\n                  text\r\n                  color=\"primary\"\r\n                  :disabled=\"addEditInProgress\"\r\n                  @click=\"undoCorrection(true, row.item.action, row.index)\"\r\n                >\r\n                  <v-icon small>mdi-undo</v-icon>\r\n                  <span>Undo</span>\r\n                </v-btn>\r\n              </span>\r\n\r\n              <!-- Share Class Edit Btn -->\r\n              <span\r\n                v-if=\"row.item.action === ActionTypes.ADDED\"\r\n                class=\"edit-action\"\r\n              >\r\n                <v-btn\r\n                  :id=\"'class-' + row.index + '-change-added-btn'\"\r\n                  text\r\n                  color=\"primary\"\r\n                  :disabled=\"addEditInProgress\"\r\n                  @click=\"initShareClassForEdit(row.index)\"\r\n                >\r\n                  <v-icon small>mdi-pencil</v-icon>\r\n                  <span>Edit</span>\r\n                </v-btn>\r\n              </span>\r\n\r\n              <!-- Share Class Dropdown Actions -->\r\n              <span v-if=\"row.item.action !== ActionTypes.REMOVED\">\r\n                <v-menu\r\n                  v-model=\"classDropdown[row.index]\"\r\n                  offset-y\r\n                  left\r\n                >\r\n                  <template #activator=\"{ on }\">\r\n                    <v-btn\r\n                      text\r\n                      color=\"primary\"\r\n                      class=\"actions__more-actions__btn\"\r\n                      :disabled=\"addEditInProgress\"\r\n                      v-on=\"on\"\r\n                    >\r\n                      <v-icon>{{ classDropdown[row.index] ? 'mdi-menu-up' : 'mdi-menu-down' }}</v-icon>\r\n                    </v-btn>\r\n                  </template>\r\n                  <v-list class=\"more-actions\">\r\n                    <v-list-item\r\n                      v-if=\"row.item.action === ActionTypes.EDITED\"\r\n                      class=\"actions-dropdown_item\"\r\n                      :disabled=\"addEditInProgress\"\r\n                      @click=\"initShareClassForEdit(row.index)\"\r\n                    >\r\n                      <v-list-item-subtitle>\r\n                        <v-icon\r\n                          small\r\n                          color=\"primary\"\r\n                          class=\"mr-3\"\r\n                        >mdi-pencil</v-icon>\r\n                        <span>Change</span>\r\n                      </v-list-item-subtitle>\r\n                    </v-list-item>\r\n                    <v-list-item\r\n                      class=\"actions-dropdown_item\"\r\n                      :class=\"{ 'item-disabled': !row.item.hasRightsOrRestrictions }\"\r\n                      :disabled=\"!row.item.hasRightsOrRestrictions\"\r\n                      @click=\"initNewShareSeries(row.index)\"\r\n                    >\r\n                      <v-list-item-subtitle>\r\n                        <v-icon color=\"primary\">mdi-playlist-plus</v-icon>\r\n                        <span>Add Series</span>\r\n                      </v-list-item-subtitle>\r\n                    </v-list-item>\r\n                    <v-list-item\r\n                      class=\"actions-dropdown_item\"\r\n                      :class=\"{ 'item-disabled': isMoveDisabled(row.index, 'up') }\"\r\n                      :disabled=\"isMoveDisabled(row.index, 'up')\"\r\n                      @click=\"moveIndex(row.index, 'up')\"\r\n                    >\r\n                      <v-list-item-subtitle class=\"move-up-selector\">\r\n                        <v-icon color=\"primary\">mdi-arrow-up</v-icon>\r\n                        <span>Move Up</span>\r\n                      </v-list-item-subtitle>\r\n                    </v-list-item>\r\n                    <v-list-item\r\n                      class=\"actions-dropdown_item\"\r\n                      :class=\"{ 'item-disabled': isMoveDisabled(row.index, 'down') }\"\r\n                      :disabled=\"isMoveDisabled(row.index, 'down')\"\r\n                      @click=\"moveIndex(row.index, 'down')\"\r\n                    >\r\n                      <v-list-item-subtitle class=\"move-down-selector\">\r\n                        <v-icon color=\"primary\">mdi-arrow-down</v-icon>\r\n                        <span>Move Down</span>\r\n                      </v-list-item-subtitle>\r\n                    </v-list-item>\r\n                    <v-list-item\r\n                      class=\"actions-dropdown_item\"\r\n                      @click=\"confirmShareRemoval(row.index)\"\r\n                    >\r\n                      <v-list-item-subtitle class=\"remove-selector\">\r\n                        <v-icon color=\"primary\">mdi-delete</v-icon>\r\n                        <span>Remove</span>\r\n                      </v-list-item-subtitle>\r\n                    </v-list-item>\r\n                  </v-list>\r\n                </v-menu>\r\n              </span>\r\n            </div>\r\n          </td>\r\n          <!-- Placeholder template to preserve table cell and stylings -->\r\n          <template v-else>\r\n            <span />\r\n          </template>\r\n        </tr>\r\n\r\n        <!-- Share Class Edit Form -->\r\n        <tr v-if=\"showClassEditForm[row.index]\">\r\n          <td\r\n            colspan=\"6\"\r\n            :class=\"{'invalid-section': invalidSection}\"\r\n          >\r\n            <v-expand-transition>\r\n              <div class=\"edit-share-structure-container\">\r\n                <EditShareStructure\r\n                  :initialValue=\"currentShareStructure\"\r\n                  :activeIndex=\"activeIndex\"\r\n                  :shareId=\"shareId\"\r\n                  :parentIndex=\"parentIndex\"\r\n                  :shareClasses=\"shareClasses\"\r\n                  :resolutionRequired=\"resolutionRequired\"\r\n                  :invalidSection=\"invalidSection\"\r\n                  @addEditClass=\"addEditShareClass($event)\"\r\n                  @addEditSeries=\"addEditShareSeries($event)\"\r\n                  @removeClass=\"confirmShareRemoval($event)\"\r\n                  @resolutionPrompt=\"emitResolutionPrompt($event)\"\r\n                  @resetEvent=\"resetData()\"\r\n                />\r\n              </div>\r\n            </v-expand-transition>\r\n          </td>\r\n        </tr>\r\n\r\n        <!-- Share Series rows -->\r\n        <template v-for=\"(seriesItem, index) in row.item.series\">\r\n          <tr\r\n            v-if=\"displaySeriesRow(row, seriesItem, index)\"\r\n            :key=\"`class:${row.index}-Series:${index}`\"\r\n            class=\"series-row\"\r\n            :class=\"[\r\n              { 'series-row-last': index === row.item.series.length - 1},\r\n              { 'removed' : row.item.action === ActionTypes.REMOVED || seriesItem.action === ActionTypes.REMOVED }\r\n            ]\"\r\n          >\r\n            <td\r\n              class=\"series-name\"\r\n              :class=\"{ 'invalid-section': invalidMinimumShareClass }\"\r\n            >\r\n              <li>\r\n                <span\r\n                  class=\"h3 ml-n2\"\r\n                  :class=\"{'list-item__subtitle' : row.item.action === ActionTypes.REMOVED ||\r\n                    seriesItem.action === ActionTypes.REMOVED }\"\r\n                >{{ seriesItem.name }}</span>\r\n              </li>\r\n              <ActionChip\r\n                v-if=\"row.item.action !== ActionTypes.REMOVED && seriesItem.action && isEditMode\"\r\n                :actionable-item=\"seriesItem\"\r\n                :edited-label=\"editedLabel\"\r\n              />\r\n            </td>\r\n            <td class=\"text-right\">\r\n              {{ seriesItem.maxNumberOfShares ? (+seriesItem.maxNumberOfShares).toLocaleString() : 'No Maximum' }}\r\n            </td>\r\n            <td class=\"text-right\">\r\n              {{ row.item.parValue ? `$${formatParValue(row.item.parValue)}` : 'No Par Value' }}\r\n            </td>\r\n            <td>{{ row.item.currency }}</td>\r\n            <td>{{ seriesItem.hasRightsOrRestrictions ? 'Yes' : 'No' }}</td>\r\n\r\n            <!-- Share Series Edit Btn -->\r\n            <td\r\n              v-if=\"isEditMode\"\r\n              class=\"actions-cell pt-4\"\r\n            >\r\n              <div\r\n                v-if=\"row.item.action !== ActionTypes.REMOVED\"\r\n                class=\"actions\"\r\n              >\r\n                <!-- Series Correct Btn -->\r\n                <span\r\n                  v-if=\"!seriesItem.action\"\r\n                  class=\"edit-action\"\r\n                >\r\n                  <v-btn\r\n                    :id=\"'series-' + index + '-change-btn'\"\r\n                    text\r\n                    color=\"primary\"\r\n                    :disabled=\"addEditInProgress\"\r\n                    @click=\"editSeries(row.index, index)\"\r\n                  >\r\n                    <v-icon small>mdi-pencil</v-icon>\r\n                    <span>{{ editLabel }}</span>\r\n                  </v-btn>\r\n                </span>\r\n\r\n                <!-- Series Undo btn -->\r\n                <span\r\n                  v-else-if=\"row.item.hasRightsOrRestrictions && seriesItem.action !== ActionTypes.ADDED\"\r\n                  :class=\"{ 'undo-action': seriesItem.action !== ActionTypes.REMOVED }\"\r\n                >\r\n                  <v-btn\r\n                    :id=\"'series-' + index + '-undo-btn'\"\r\n                    text\r\n                    color=\"primary\"\r\n                    :disabled=\"addEditInProgress\"\r\n                    @click=\"\r\n                      undoCorrection(false, seriesItem.action, index, row.index, row.item.id, seriesItem.id)\r\n                    \"\r\n                  >\r\n                    <v-icon small>mdi-undo</v-icon>\r\n                    <span>Undo</span>\r\n                  </v-btn>\r\n                </span>\r\n\r\n                <!-- Series Edit Btn -->\r\n                <span\r\n                  v-else-if=\"seriesItem.action !== ActionTypes.REMOVED\"\r\n                  class=\"edit-action\"\r\n                >\r\n                  <v-btn\r\n                    :id=\"'series-' + index + '-change-added-btn'\"\r\n                    text\r\n                    color=\"primary\"\r\n                    :disabled=\"addEditInProgress\"\r\n                    @click=\"editSeries(row.index, index)\"\r\n                  >\r\n                    <v-icon small>mdi-pencil</v-icon>\r\n                    <span>Edit</span>\r\n                  </v-btn>\r\n                </span>\r\n\r\n                <!-- Share Series Dropdown Actions -->\r\n                <span v-if=\"seriesItem.action !== ActionTypes.REMOVED\">\r\n                  <v-menu\r\n                    v-model=\"seriesDropdown[row.index][index]\"\r\n                    offset-y\r\n                    left\r\n                  >\r\n                    <template #activator=\"{ on }\">\r\n                      <v-btn\r\n                        text\r\n                        color=\"primary\"\r\n                        class=\"actions__more-actions__btn\"\r\n                        :disabled=\"addEditInProgress\"\r\n                        v-on=\"on\"\r\n                      >\r\n                        <v-icon>{{ seriesDropdown[row.index][index] ? 'mdi-menu-up' : 'mdi-menu-down' }}</v-icon>\r\n                      </v-btn>\r\n                    </template>\r\n\r\n                    <v-list class=\"more-actions\">\r\n                      <v-list-item\r\n                        v-if=\"seriesItem.action === ActionTypes.EDITED\"\r\n                        class=\"actions-dropdown_item\"\r\n                        :disabled=\"addEditInProgress\"\r\n                        @click=\"editSeries(row.index, index)\"\r\n                      >\r\n                        <v-list-item-subtitle>\r\n                          <v-icon\r\n                            small\r\n                            color=\"primary\"\r\n                            class=\"mr-2\"\r\n                          >mdi-pencil</v-icon> {{ editLabel }}\r\n                        </v-list-item-subtitle>\r\n                      </v-list-item>\r\n\r\n                      <v-list-item\r\n                        class=\"actions-dropdown_item\"\r\n                        :class=\"{ 'item-disabled': isMoveDisabled(row.index, 'up', index) }\"\r\n                        :disabled=\"isMoveDisabled(row.index, 'up', index)\"\r\n                        @click=\"moveIndex(row.index, 'up', index)\"\r\n                      >\r\n                        <v-list-item-subtitle class=\"move-up-selector\">\r\n                          <v-icon color=\"primary\">mdi-arrow-up</v-icon> Move Up\r\n                        </v-list-item-subtitle>\r\n                      </v-list-item>\r\n\r\n                      <v-list-item\r\n                        class=\"actions-dropdown_item\"\r\n                        :class=\"{ 'item-disabled': isMoveDisabled(row.index, 'down', index) }\"\r\n                        :disabled=\"isMoveDisabled(row.index, 'down', index)\"\r\n                        @click=\"moveIndex(row.index, 'down', index)\"\r\n                      >\r\n                        <v-list-item-subtitle class=\"move-down-selector\">\r\n                          <v-icon color=\"primary\">mdi-arrow-down</v-icon> Move Down\r\n                        </v-list-item-subtitle>\r\n                      </v-list-item>\r\n\r\n                      <v-list-item\r\n                        class=\"actions-dropdown_item\"\r\n                        @click=\"removeSeries(index, row.index)\"\r\n                      >\r\n                        <v-list-item-subtitle>\r\n                          <v-icon color=\"primary\">mdi-delete</v-icon> Remove\r\n                        </v-list-item-subtitle>\r\n                      </v-list-item>\r\n                    </v-list>\r\n                  </v-menu>\r\n                </span>\r\n              </div>\r\n            </td>\r\n            <!-- Placeholder template to preserve table cell and stylings -->\r\n            <template v-else>\r\n              <span />\r\n            </template>\r\n          </tr>\r\n\r\n          <!-- Series Share Edit Form -->\r\n          <tr\r\n            v-if=\"showSeriesEditForm[row.index] && showSeriesEditForm[row.index][index]\"\r\n            :key=\"`class:${row.index}-Series:${index}-edit-form`\"\r\n          >\r\n            <td\r\n              colspan=\"6\"\r\n              :class=\"{'invalid-section': invalidSection}\"\r\n            >\r\n              <v-expand-transition>\r\n                <div class=\"edit-share-structure-container\">\r\n                  <EditShareStructure\r\n                    :initialValue=\"currentShareStructure\"\r\n                    :activeIndex=\"activeIndex\"\r\n                    :shareId=\"shareId\"\r\n                    :parentIndex=\"parentIndex\"\r\n                    :shareClasses=\"shareClasses\"\r\n                    :resolutionRequired=\"resolutionRequired\"\r\n                    :invalidSection=\"invalidSection\"\r\n                    @addEditClass=\"addEditShareClass($event)\"\r\n                    @addEditSeries=\"addEditShareSeries($event)\"\r\n                    @removeSeries=\"removeSeries($event, row.index)\"\r\n                    @resolutionPrompt=\"emitResolutionPrompt($event)\"\r\n                    @resetEvent=\"resetData()\"\r\n                  />\r\n                </div>\r\n              </v-expand-transition>\r\n            </td>\r\n          </tr>\r\n        </template>\r\n\r\n        <!-- Series Share Add Form -->\r\n        <tr v-if=\"showSeriesAddForm[row.index]\">\r\n          <td\r\n            colspan=\"6\"\r\n            :class=\"{'invalid-section': invalidSection}\"\r\n          >\r\n            <v-expand-transition>\r\n              <div class=\"edit-share-structure-container\">\r\n                <EditShareStructure\r\n                  :initialValue=\"currentShareStructure\"\r\n                  :activeIndex=\"activeIndex\"\r\n                  :shareId=\"shareId\"\r\n                  :parentIndex=\"parentIndex\"\r\n                  :shareClasses=\"shareClasses\"\r\n                  :resolutionRequired=\"resolutionRequired\"\r\n                  :invalidSection=\"invalidSection\"\r\n                  @addEditClass=\"addEditShareClass($event)\"\r\n                  @addEditSeries=\"addEditShareSeries($event)\"\r\n                  @removeSeries=\"removeSeries($event, row.index)\"\r\n                  @resolutionPrompt=\"emitResolutionPrompt($event)\"\r\n                  @resetEvent=\"resetData()\"\r\n                />\r\n              </div>\r\n            </v-expand-transition>\r\n          </td>\r\n        </tr>\r\n      </template>\r\n    </v-data-table>\r\n  </v-card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\nimport { Component, Emit, Prop, Watch } from 'vue-property-decorator'\r\nimport { cloneDeep, isEqual, omit } from 'lodash'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { arrayMoveMutable } from './array-move'\r\nimport { ActionChip } from '@bcrs-shared-components/action-chip'\r\nimport { ConfirmDialog } from '@bcrs-shared-components/confirm-dialog'\r\nimport EditShareStructure from './EditShareStructure.vue'\r\nimport { ConfirmDialogType, ShareClassIF, ShareStructureIF } from '@bcrs-shared-components/interfaces'\r\nimport { ActionTypes } from '@bcrs-shared-components/enums'\r\n\r\n@Component({\r\n  components: {\r\n    ActionChip,\r\n    ConfirmDialog,\r\n    EditShareStructure\r\n  }\r\n})\r\nexport default class ShareStructure extends Vue {\r\n  // Declaration for template\r\n  readonly ActionTypes = ActionTypes\r\n\r\n  // Refs\r\n  $refs!: Vue['$refs'] & {\r\n    confirm: ConfirmDialogType,\r\n  };\r\n\r\n  //\r\n  // Props:\r\n  //\r\n\r\n  /** Edit Mode */\r\n  @Prop({ default: true }) readonly isEditMode!: boolean\r\n\r\n  @Prop({ default: null }) readonly originalShareStructure!: ShareStructureIF\r\n\r\n  @Prop({ default: [] }) readonly shareClasses!: ShareClassIF[]\r\n\r\n  @Prop({ default: false }) readonly resolutionRequired!: boolean\r\n\r\n  /** Edit label name (ie 'Change' or 'Correct') */\r\n  @Prop({ default: 'Edit' }) readonly editLabel!: string\r\n\r\n  /** Edited label name (ie 'Changed' or 'Corrected') */\r\n  @Prop({ default: 'EDITED' }) readonly editedLabel!: string\r\n\r\n  @Prop({ default: false }) readonly hasRightsOrRestrictions!: boolean\r\n\r\n  /** Prompt Error. */\r\n  @Prop({ default: false }) readonly invalidSection!: boolean\r\n\r\n  /** Verification the Share Structure contains the minimum required Share Classes. */\r\n  @Prop({ default: false }) readonly invalidMinimumShareClass!: boolean\r\n\r\n  //\r\n  // Local properties:\r\n  //\r\n\r\n  protected activeIndex = -1\r\n  protected classDropdown: Array<boolean> = []\r\n  protected parentIndex = -1\r\n  protected seriesDropdown: Array<boolean> = this.mapEmpty2dArray()\r\n  protected shareId = ''\r\n  protected showAddShareStructureForm = false\r\n  protected showClassEditForm: Array<boolean> = [false]\r\n  protected showSeriesAddForm: Array<boolean> = [false]\r\n  protected showSeriesEditForm: Array<any> = this.mapEmpty2dArray()\r\n  protected addEditInProgress = false\r\n  protected currentShareStructure: ShareClassIF = null\r\n\r\n  readonly headers = [\r\n    {\r\n      text: 'Name of Share Class or Series',\r\n      align: 'start',\r\n      sortable: false,\r\n      value: 'name'\r\n    },\r\n    { text: 'Maximum Number of Shares', value: 'maxNumberOfShares' },\r\n    { text: 'Par Value', value: 'parValue' },\r\n    { text: 'Currency', value: 'currency' },\r\n    { text: 'Special Rights or Restrictions', value: 'hasRightsOrRestrictions' }\r\n  ]\r\n\r\n  readonly newShareClass: ShareClassIF = {\r\n    id: null,\r\n    priority: null,\r\n    type: 'Class',\r\n    name: '',\r\n    hasMaximumShares: true,\r\n    maxNumberOfShares: null,\r\n    hasParValue: true,\r\n    parValue: null,\r\n    currency: 'CAD',\r\n    hasRightsOrRestrictions: false,\r\n    series: [],\r\n    action: ActionTypes.ADDED\r\n  }\r\n\r\n  readonly newShareSeries: ShareClassIF = {\r\n    id: null,\r\n    priority: null,\r\n    type: 'Series',\r\n    name: '',\r\n    hasMaximumShares: true,\r\n    maxNumberOfShares: null,\r\n    hasParValue: true,\r\n    parValue: null,\r\n    currency: null,\r\n    hasRightsOrRestrictions: false,\r\n    action: ActionTypes.ADDED\r\n  }\r\n\r\n  /** True if we have any changes (from original IA). */\r\n  get hasClassChanges (): boolean {\r\n    return this.shareClasses.some(x => x.action)\r\n  }\r\n\r\n  /** True if we have any changes (from original IA). */\r\n  get hasSeriesChanges (): boolean {\r\n    return !!this.shareClasses.find(shareClass => shareClass.series.some(x => x.action))\r\n  }\r\n\r\n  /**\r\n   * Format the display par value with cents value, if it doesn't already contain it.\r\n   * @param parValue The value to evaluate and format.\r\n   * @returns A formatted par value string\r\n   * */\r\n  protected formatParValue (parValue: string): string {\r\n    const hasParCents = (parValue.toString()).includes('.')\r\n    return hasParCents ? parValue : `${parValue}.00`\r\n  }\r\n\r\n  /** Set dropdown models to root state. */\r\n  private clearDropdowns (): void {\r\n    this.classDropdown = []\r\n    this.seriesDropdown = this.mapEmpty2dArray()\r\n  }\r\n\r\n  /** Helper function to handle the various display states of the nested series rows. */\r\n  protected displaySeriesRow (classRow, seriesRow, index): boolean {\r\n    return this.showSeriesEditForm[classRow.index] &&\r\n      !this.showSeriesEditForm[classRow.index][index] &&\r\n      !(!this.isEditMode && (seriesRow.action === ActionTypes.REMOVED || classRow.item.action === ActionTypes.REMOVED))\r\n  }\r\n\r\n  //\r\n  // Share Class functionality:\r\n  //\r\n\r\n  /**\r\n   * Initialize the Add Share Class Form\r\n   */\r\n  protected initNewShareClass (): void {\r\n    this.activeIndex = -1\r\n    this.parentIndex = -1\r\n    this.currentShareStructure = { ...this.newShareClass }\r\n    this.currentShareStructure.priority = this.shareClasses.length === 0\r\n      ? 1\r\n      : this.shareClasses[this.shareClasses.length - 1].priority + 1\r\n    this.shareId = uuidv4() // assign a new (random) ID\r\n\r\n    this.addEditInProgress = true\r\n    this.showAddShareStructureForm = true\r\n  }\r\n\r\n  /**\r\n   *  Initialize the Add Share Class Form to Edit existing ShareClass\r\n   *  @param index The identifier of the ShareClass to be edited.\r\n   */\r\n  protected initShareClassForEdit (index: number): void {\r\n    this.currentShareStructure = { ...this.shareClasses[index] }\r\n    this.activeIndex = index\r\n    this.parentIndex = -1\r\n    this.addEditInProgress = true\r\n    this.showClassEditForm[index] = true\r\n  }\r\n\r\n  /**\r\n   * Add / Edit Share Class and set to store\r\n   * @param shareStructure The current share structure object\r\n   */\r\n  protected addEditShareClass (shareStructure: ShareClassIF): void {\r\n    // Apply a correction tag if Share is changed\r\n    if (shareStructure.action !== ActionTypes.ADDED) {\r\n      shareStructure.action = this.isShareClassEdited(shareStructure) ? ActionTypes.EDITED : null\r\n    }\r\n\r\n    let newList: ShareClassIF[] = [...this.shareClasses]\r\n    // New Share Structure.\r\n    if (this.activeIndex === -1) {\r\n      newList.push(shareStructure)\r\n    } else {\r\n      // Edit Share Structure.\r\n      newList.splice(this.activeIndex, 1, shareStructure)\r\n    }\r\n    this.emitShareClasses(newList)\r\n    this.resetData()\r\n  }\r\n\r\n  /**\r\n   * Compare ShareClass to its original to identify any changes\r\n   * @params shareClass The Share class to compare\r\n   */\r\n  private isShareClassEdited (shareClass: ShareClassIF): boolean {\r\n    const originalShareClasses = cloneDeep(this.originalShareStructure.shareClasses)\r\n\r\n    const originalShareClass = originalShareClasses.find(\r\n      share => (+share.id === +shareClass.id)\r\n    )\r\n\r\n    return !isEqual(\r\n      { ...omit(shareClass, 'action') },\r\n      { ...omit(originalShareClass, 'action') }\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Remove the Share Class from the Store\r\n   * @param index The share class identifier\r\n   */\r\n  private removeShareClass (index: number): void {\r\n    // get share class to remove\r\n    // make a copy so we don't change the item in the list\r\n    const shareClass = { ...this.shareClasses[index] }\r\n    let tempList: ShareClassIF[] = [...this.shareClasses]\r\n\r\n    if (shareClass.action === ActionTypes.ADDED) {\r\n      tempList.splice(index, 1)\r\n    } else {\r\n      shareClass.action = ActionTypes.REMOVED\r\n      tempList.splice(index, 1, shareClass)\r\n    }\r\n\r\n    this.emitShareClasses(tempList)\r\n    this.resetData()\r\n  }\r\n\r\n  /**\r\n   * Restore the Share series from the Store\r\n   * @param index The share class identifier\r\n   */\r\n  private restoreShareClass (index: number): void {\r\n    const originalShareClasses = cloneDeep(this.originalShareStructure.shareClasses)\r\n\r\n    // Fetch and identify the ShareClass to restore\r\n    const shareClassToRestore = originalShareClasses.find(\r\n      shareClass => (+shareClass.id === +this.shareClasses[index].id)\r\n    )\r\n\r\n    // Create a new ShareClass List and restore the original data\r\n    let newList: ShareClassIF[] = [...this.shareClasses]\r\n    newList[index] = { ...shareClassToRestore, series: [...shareClassToRestore.series] }\r\n\r\n    newList.forEach(classShare => {\r\n      // Reset series if corrected RightsOrRestrictions is no longer true\r\n      if (!classShare.hasRightsOrRestrictions) classShare.series = []\r\n    })\r\n\r\n    this.emitShareClasses(newList)\r\n    this.resetData()\r\n  }\r\n\r\n  //\r\n  // Series functionality:\r\n  //\r\n\r\n  /**\r\n   * Initialize the Add Series Form\r\n   */\r\n  protected initNewShareSeries (shareClassIndex: number): void {\r\n    this.activeIndex = -1\r\n    this.parentIndex = shareClassIndex\r\n\r\n    let newList: ShareClassIF[] = [...this.shareClasses]\r\n    const parentShareClass = newList[shareClassIndex]\r\n    const shareSeries = parentShareClass.series\r\n    this.currentShareStructure = { ...this.newShareSeries }\r\n    this.currentShareStructure.hasParValue = parentShareClass.hasParValue\r\n    this.currentShareStructure.parValue = parentShareClass.parValue\r\n    this.currentShareStructure.currency = parentShareClass.currency\r\n    this.currentShareStructure.priority =\r\n      shareSeries.length === 0 ? 1 : shareSeries[shareSeries.length - 1].priority + 1\r\n    this.shareId = uuidv4()\r\n    this.addEditInProgress = true\r\n    this.showSeriesAddForm[shareClassIndex] = true\r\n  }\r\n\r\n  /**\r\n   * Add / Edit Share Series and set to store\r\n   */\r\n  protected addEditShareSeries (shareSeries: ShareClassIF): void {\r\n    // Apply a correction tag if Share is changed\r\n    if (shareSeries.action !== ActionTypes.ADDED && this.isShareClassEdited(shareSeries)) {\r\n      shareSeries.action = ActionTypes.EDITED\r\n    }\r\n\r\n    let newList: ShareClassIF[] = [...this.shareClasses]\r\n    const parentShareClass = newList[this.parentIndex]\r\n    let series = [...parentShareClass.series]\r\n    // New Share Structure.\r\n    if (this.activeIndex === -1) {\r\n      series.push(shareSeries)\r\n    } else {\r\n      // Edit Share Structure.\r\n      series.splice(this.activeIndex, 1, shareSeries)\r\n    }\r\n    parentShareClass.series = series\r\n\r\n    this.emitShareClasses(newList)\r\n    this.resetData()\r\n  }\r\n\r\n  /**\r\n   * Edit an existing series share\r\n   * @param index The share class parent index\r\n   * @param seriesIndex The share series index\r\n   */\r\n  protected editSeries (index: number, seriesIndex: number): void {\r\n    this.activeIndex = seriesIndex\r\n    this.parentIndex = index\r\n    let newList: ShareClassIF[] = [...this.shareClasses]\r\n    this.currentShareStructure = { ...newList[this.parentIndex].series[this.activeIndex] }\r\n    this.addEditInProgress = true\r\n    this.showSeriesEditForm[index][seriesIndex] = true\r\n  }\r\n\r\n  /**\r\n   * Remove the Series share from the Store\r\n   * @param seriesIndex The series share identifier\r\n   * @param parentIndex The parent class index\r\n   */\r\n  protected removeSeries (seriesIndex: number, parentIndex: number): void {\r\n    const shareSeries = { ...this.shareClasses[parentIndex].series[seriesIndex] }\r\n    let tempList: ShareClassIF[] = [...this.shareClasses]\r\n\r\n    if (shareSeries.action === ActionTypes.ADDED) {\r\n      tempList[parentIndex].series.splice(seriesIndex, 1)\r\n    } else {\r\n      shareSeries.action = ActionTypes.REMOVED\r\n      tempList[parentIndex].series.splice(seriesIndex, 1, shareSeries)\r\n    }\r\n\r\n    this.emitShareClasses(tempList)\r\n    this.resetData()\r\n  }\r\n\r\n  /**\r\n   * Restore the Share Series from the Store\r\n   * @param seriesIndex The share series identifier\r\n   * @param parentIndex The share series parent class index\r\n   * @param parentId The Parent class Id\r\n   * @param seriesId The Series Id\r\n   */\r\n  private restoreShareSeries (seriesIndex: number, parentIndex: number, parentId: string, seriesId: string): void {\r\n    const originalShareClasses = cloneDeep(this.originalShareStructure.shareClasses)\r\n\r\n    // Fetch the original Share class ( In the event the list is moved up or down, find the original by ID )\r\n    const originalShareClass = Object.assign({},\r\n      originalShareClasses.find(\r\n        shareClass => (+shareClass.id === +parentId)\r\n      )\r\n    )\r\n\r\n    // Fetch and identify the ShareSeries to restore\r\n    const shareSeriesToRestore = Object.assign({},\r\n      originalShareClass.series.find(\r\n        shareSeries => (+shareSeries.id === +seriesId)\r\n      ))\r\n\r\n    // Create a new ShareSeries List and restore the original data\r\n    let newList: ShareClassIF[] = [...this.shareClasses]\r\n    newList[parentIndex].series[seriesIndex] = shareSeriesToRestore\r\n\r\n    this.emitShareClasses(newList)\r\n    this.resetData()\r\n  }\r\n\r\n  //\r\n  // Common form functionality:\r\n  //\r\n\r\n  /**\r\n   * Adjust the priority of the list share class\r\n   * @param indexFrom The index of the class\r\n   * @param direction The direction of the move\r\n   * @param seriesIndex The index of the series\r\n   */\r\n  protected moveIndex (indexFrom: number, direction: string, seriesIndex = -1): void {\r\n    let indexTo\r\n    if (seriesIndex >= 0) {\r\n      indexTo = direction === 'up' ? seriesIndex - 1 : seriesIndex + 1\r\n      this.shareClasses[indexFrom].series[seriesIndex].priority = indexTo\r\n      this.shareClasses[indexFrom].series[seriesIndex].priority = indexFrom\r\n      arrayMoveMutable(this.shareClasses[indexFrom].series, seriesIndex, indexTo)\r\n    } else {\r\n      indexTo = direction === 'up' ? indexFrom - 1 : indexFrom + 1\r\n      this.shareClasses[indexFrom].priority = indexTo\r\n      this.shareClasses[indexTo].priority = indexFrom\r\n      arrayMoveMutable(this.shareClasses, indexFrom, indexTo)\r\n    }\r\n    this.clearDropdowns()\r\n  }\r\n\r\n  /**\r\n   * Determine if the move up / move down is enabled\r\n   * @param index index of the class item\r\n   * @param direction The direction of the move\r\n   * @param seriesIndex index of the series item\r\n   * @returns A boolean indicating if a move is enabled\r\n   */\r\n  protected isMoveDisabled (index: number, direction: string, seriesIndex = -1): boolean {\r\n    const seriesCheck = seriesIndex >= 0\r\n    const arrBoundry = seriesCheck ? this.shareClasses[index].series.length - 1 : this.shareClasses.length - 1\r\n    switch (direction) {\r\n      case 'up':\r\n        if (seriesCheck) {\r\n          return seriesIndex === 0\r\n        } else {\r\n          return index === 0\r\n        }\r\n      case 'down':\r\n        if (seriesCheck) {\r\n          return seriesIndex === arrBoundry\r\n        } else {\r\n          return index === arrBoundry\r\n        }\r\n      default:\r\n        return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Undo the adding or editing of a Share class or series\r\n   * @param isClass Boolean indicating if item is a Class Share\r\n   * @param actionType The type of action to undo\r\n   * @param index The identifier of which share class/series to undo\r\n   * @param parentIndex The identifier of the parent class when handling series.\r\n   * @param parentId The parent class Id.\r\n   * @param seriesId The series Id.\r\n   */\r\n  protected undoCorrection (\r\n    isClass: boolean,\r\n    actionType: ActionTypes,\r\n    index: number,\r\n    parentIndex: number = null,\r\n    parentId: string = null,\r\n    seriesId: string = null\r\n  ): void {\r\n    switch (actionType) {\r\n      case ActionTypes.ADDED:\r\n        isClass ? this.removeShareClass(index) : this.removeSeries(index, parentIndex)\r\n        break\r\n      case ActionTypes.EDITED:\r\n        isClass ? this.restoreShareClass(index) : this.restoreShareSeries(index, parentIndex, parentId, seriesId)\r\n        break\r\n      case ActionTypes.REMOVED:\r\n        isClass ? this.restoreShareClass(index) : this.restoreShareSeries(index, parentIndex, parentId, seriesId)\r\n        break\r\n    }\r\n    this.clearDropdowns()\r\n  }\r\n\r\n  /**\r\n   * Clear and set local tracking properties to default\r\n   */\r\n  protected resetData (): void {\r\n    function scrollToTop (element: any): void {\r\n      const isJestRunning = (import.meta.env.JEST_WORKER_ID !== undefined)\r\n      // don't call window.scrollTo during Jest tests because jsdom doesn't implement it\r\n      if (!isJestRunning) window.scrollTo({ top: element.offsetTop, behavior: 'smooth' })\r\n    }\r\n\r\n    this.currentShareStructure = null\r\n    this.activeIndex = -1\r\n    this.addEditInProgress = false\r\n    this.showAddShareStructureForm = false\r\n    this.showClassEditForm = [false]\r\n    this.showSeriesAddForm = [false]\r\n    this.showSeriesEditForm = this.mapEmpty2dArray()\r\n    this.parentIndex = -1\r\n    this.shareId = ''\r\n    Vue.nextTick(() => scrollToTop(this.$el))\r\n    this.clearDropdowns()\r\n  }\r\n\r\n  protected confirmShareRemoval (index: number): void {\r\n    const shareClass = { ...this.shareClasses[index] }\r\n\r\n    if (shareClass.series.length > 0) {\r\n      // open confirmation dialog and wait for response\r\n      this.$refs.confirm.open(\r\n        'Remove Share Series with Class',\r\n        'A share series exists for this class. Removing the share class will remove all associated share ' +\r\n        'series.',\r\n        {\r\n          width: '45rem',\r\n          persistent: true,\r\n          yes: 'Remove',\r\n          no: null,\r\n          cancel: 'Cancel'\r\n        }\r\n      ).then(() => {\r\n        // if we get here, Yes was clicked\r\n        this.removeShareClass(index)\r\n      }).catch(() => {\r\n        // if we get here, Cancel was clicked\r\n        this.resetData()\r\n      })\r\n    } else {\r\n      this.removeShareClass(index)\r\n    }\r\n  }\r\n\r\n  /** Map an empty 2d array to handle the unknown size of nested Share Classes and Series */\r\n  private mapEmpty2dArray (): Array<any> {\r\n    return new Array(50).fill(null).map(() => new Array(50).fill(null))\r\n  }\r\n\r\n  @Watch('hasClassChanges')\r\n  @Watch('hasSeriesChanges')\r\n  private onShareStructureChanged (): void {\r\n    this.emitShareStructureChanged(this.hasClassChanges || this.hasSeriesChanges)\r\n  }\r\n\r\n  /** Updates store when local Editing property has changed. */\r\n  @Watch('addEditInProgress', { immediate: true })\r\n  private onEditingChanged (val: boolean): void {\r\n    this.emitEditingShareStructure(val)\r\n  }\r\n\r\n  @Emit('emitShareClasses')\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  private emitShareClasses (shareClasses: ShareClassIF[]): void {}\r\n\r\n  @Emit('emitShareStructureChanged')\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  private emitShareStructureChanged (hasChanges: boolean): void {}\r\n\r\n  @Emit('emitEditingShareStructure')\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  private emitEditingShareStructure (isEditing: boolean): void {}\r\n\r\n  @Emit('emitResolutionPrompt')\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  private emitResolutionPrompt (requiresPrompt: boolean): void {}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '@/assets/styles/theme.scss';\r\n\r\n#share-structure {\r\n  margin-top: 1rem;\r\n\r\n  tbody {\r\n    tr:hover {\r\n      background-color: transparent !important;\r\n    }\r\n  }\r\n}\r\n\r\n.share-summary-header {\r\n  display: flex;\r\n  background-color: $BCgovBlue5O;\r\n  padding: 1.25rem;\r\n  border-top-left-radius: 4px;\r\n  border-top-right-radius: 4px;\r\n\r\n  .share-summary-header-title {\r\n    padding-left: .5rem;\r\n  }\r\n}\r\n\r\n.class-row td {\r\n  height: 4rem !important;\r\n  color: $gray9;\r\n  font-size: 1rem !important;\r\n  padding: 10px;\r\n}\r\n\r\n.class-row td:not(:first-child) {\r\n  color: $gray7;\r\n  font-size: .875rem;\r\n}\r\n\r\n.removed td:not(:last-child) {\r\n  color: rgba(73, 80, 87, .40) !important;\r\n}\r\n\r\n.class-row-has-series td:not(:last-child) {\r\n  border-bottom: thin dashed rgba(0, 0, 0, 0.12) !important;\r\n}\r\n\r\n.series-row {\r\n  td {\r\n    height: 4rem !important;\r\n    color: $gray9;\r\n    font-weight: bold;\r\n    padding: 10px;\r\n  }\r\n\r\n  td:not(:last-child) {\r\n    border-bottom: thin dashed rgba(0, 0, 0, 0.12) !important;\r\n  }\r\n\r\n  .series-name {\r\n    padding-left: 40px;\r\n    margin-left: 40px;\r\n  }\r\n\r\n  td:not(:first-child){\r\n    color: $gray7;\r\n    font-size: 1rem;\r\n    font-weight: normal;\r\n  }\r\n}\r\n\r\n.series-row-last {\r\n  td:not(:last-child) {\r\n    border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\r\n  }\r\n}\r\n\r\n.actions-cell {\r\n  position: absolute;\r\n  right: 0;\r\n  border-bottom: none !important;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  .edit-action, .undo-action {\r\n    border-right: 1px solid $gray1;\r\n  }\r\n\r\n  .v-btn {\r\n    min-width: .5rem;\r\n  }\r\n\r\n  .v-btn + .v-btn {\r\n    margin-left: 0.5rem;\r\n  }\r\n}\r\n\r\n.more-actions {\r\n  padding: 2px 0;\r\n\r\n  .item-disabled {\r\n    opacity: .5;\r\n  }\r\n\r\n  .actions-dropdown_item {\r\n    min-height: 0 !important;\r\n    margin: 1rem 0;\r\n  }\r\n}\r\n\r\n.theme--light.v-btn.v-btn--disabled, .theme--light.v-btn.v-btn--disabled .v-icon {\r\n  color: $app-blue !important;\r\n  opacity: .4;\r\n}\r\n\r\n:deep() {\r\n  .v-data-table > .v-data-table__wrapper > table > thead > tr > th {\r\n    box-shadow: 1px 2px 0 0 rgba(0,0,0,0.1);\r\n    border: none !important;\r\n  }\r\n\r\n  .v-data-table > .v-data-table__wrapper > table > thead > tr > th:nth-child(2) {\r\n    max-width: 140px;\r\n  }\r\n\r\n  .v-data-table > .v-data-table__wrapper > table > thead > tr > th:nth-child(5) {\r\n    border-right: thin solid rgba(0, 0, 0, 0);\r\n  }\r\n\r\n  .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > th {\r\n    font-size: .875rem;\r\n    color: $gray9;\r\n    line-height: 1.25;\r\n  }\r\n\r\n  .theme--light.v-list-item .v-list-item__subtitle {\r\n    color: $app-blue !important;\r\n  }\r\n\r\n  .theme--light.v-label {\r\n    color: $gray7;\r\n  }\r\n\r\n  .theme--light.v-input input {\r\n    color: $gray9;\r\n    font-weight: normal;\r\n  }\r\n}\r\n</style>\r\n"],"names":["getRandomValues","rnds8","rng","byteToHex","unsafeStringify","arr","offset","randomUUID","native","v4","options","buf","rnds","i","arrayMoveMutable","array","fromIndex","toIndex","startIndex","endIndex","item","CurrencyLookupMixin","Vue","__publicField","code","currency","__decorateClass","Component","EditShareStructure","Mixins","rules","v","s","index","r","seriesSum","a","b","filteredSeries","series","currentSum","name","shareStructure","shareStructureToAdd","addedSeriesIndexes","ActionTypes","seriesIndex","x","emitEvent","shareClass","shareSeries","shareClassIndex","shareSeriesIndex","requiresPrompt","Prop","Watch","Emit","ConfirmDialog","ShareStructure","parValue","classRow","seriesRow","uuidv4","newList","originalShareClass","cloneDeep","share","isEqual","omit","tempList","shareClassToRestore","classShare","parentShareClass","parentIndex","parentId","seriesId","originalShareClasses","shareSeriesToRestore","indexFrom","direction","indexTo","seriesCheck","arrBoundry","isClass","actionType","scrollToTop","element","val","shareClasses","hasChanges","isEditing","ActionChip"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}