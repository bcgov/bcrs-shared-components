{"version":3,"file":"DocumentId.stories-8f878d87.js","sources":["../../src/components/document-id/DocumentId.vue"],"sourcesContent":["<template>\n  <v-card\n    id=\"document-id-card\"\n    :class=\"[cardPadding, { 'border-error-left': showBorderError }]\"\n    flat\n  >\n    <v-row no-gutters>\n      <v-col\n        cols=\"12\"\n        sm=\"3\"\n      >\n        <label\n          class=\"title-label\"\n          :class=\"{ 'error-text': showBorderError }\"\n          for=\"doc-id-field\"\n        >\n          Document Id\n        </label>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"9\"\n      >\n        <v-text-field\n          id=\"doc-id-field\"\n          v-model=\"documentId\"\n          filled\n          color=\"primary\"\n          maxlength=\"8\"\n          label=\"Document ID Number\"\n          :disabled=\"generateDocumentId\"\n          :error=\"!isVerifiedDocId && validate && !generateDocumentId\"\n          :error-messages=\"docIdError\"\n          hint=\"Enter the 8-digit Document ID number, also referred to as the barcode number\"\n          :persistent-hint=\"true\"\n        >\n          <template #append>\n            <v-progress-circular\n              v-if=\"isVerifyingDocId\"\n              indeterminate\n              color=\"primary\"\n              class=\"my-0\"\n              :size=\"25\"\n              :width=\"3\"\n            />\n            <v-icon\n              v-if=\"!isVerifyingDocId && isVerifiedDocId && !generateDocumentId\"\n              color=\"green-darken-2\"\n            >\n              mdi-check\n            </v-icon>\n          </template>\n        </v-text-field>\n\n        <v-checkbox\n          v-model=\"generateDocumentId\"\n          color=\"primary\"\n          class=\"\"\n        >\n          <template #label>\n            <span class=\"copy-label\">\n              Generate a Document ID Number upon filing.\n            </span>\n\n            <v-tooltip\n              top\n              transition=\"fade-transition\"\n              content-class=\"top-tooltip\"\n            >\n              <template #activator=\"{ on, attrs }\">\n                <v-icon\n                  class=\"ml-1\"\n                  color=\"primary\"\n                  size=\"20\"\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n                >\n                  mdi-information-outline\n                </v-icon>\n              </template>\n              <div>\n                Upon registration, a Document ID will be generated, and a corresponding document record will be\n                created\n              </div>\n            </v-tooltip>\n          </template>\n        </v-checkbox>\n      </v-col>\n    </v-row>\n  </v-card>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport axios from 'axios'\nimport { Component, Emit, Prop, Watch } from 'vue-property-decorator'\nimport { SessionStorageKeys } from '@/enums/sbc-common-components-constants'\n\n@Component({})\nexport default class DocumentId extends Vue {\n  /** Document Services Api URL. */\n  @Prop({ default: false }) readonly docApiUrl!: string\n\n  /** Document Services Api Key. */\n  @Prop({ default: false }) readonly docApiKey!: string\n\n  /** Validation flag. */\n  @Prop({ default: false }) readonly validate!: boolean\n\n  /** Card padding overrides */\n  @Prop({ default: ['pt-10 pl-4 pb-3 pr-4'] }) readonly cardPadding!: Array<string>\n\n  // local variables\n  documentId = ''\n  isVerifyingDocId = false\n  isVerifiedDocId = false\n  generateDocumentId = false\n  docIdError = []\n\n  /** Getter for the Document ID error styling */\n  get showBorderError (): boolean {\n    return this.validate && !this.isValidDocumentId\n  }\n\n  /** Getter for the Document ID validation state */\n  get isValidDocumentId (): boolean {\n    return this.isVerifiedDocId || this.generateDocumentId\n  }\n\n  /**\n   * Validates the Document ID by making an API call to the document services.\n   * Constructs the URL and headers for the API call, including authorization and account information.\n   * If the API call returns status 200, the Document ID is not unique.\n   * If the API call returns status 400, the Document ID failed the checksum format.\n   * If the API call returns status 404, the Document ID is unique and valid.\n   * If the API call returns any other status, the document ID is not valid.\n   * *\n   * @returns {Promise<number>} - The status code of the API response.\n   */\n  async fetchDocumentIdStatus (): Promise<number> {\n    // Construct the URL for the API call\n    const url = `${this.docApiUrl}/documents/verify/${this.documentId}`\n\n    // Set up the headers for the API call\n    const config = { headers: {\n      'Authorization': `Bearer ${sessionStorage.getItem(SessionStorageKeys.KeyCloakToken)}`,\n      'x-apikey': this.docApiKey }\n    }\n\n    // Add the Account-Id header if the current account is available\n    const currentAccount = sessionStorage.getItem(SessionStorageKeys.CurrentAccount)\n    if (currentAccount) {\n      const accountInfo = JSON.parse(currentAccount)\n      config.headers['Account-Id'] = accountInfo.id\n    }\n\n    try {\n      // Make the API call to validate the Document ID. If the call is successful(200), the Document ID is not unique\n      const test = await axios.get(url, config)\n      return test.status\n    } catch (error: any) {\n      // If the API call fails, return the status code\n      if ([400, 404].includes(error.response.status)) {\n        return error.response.status\n      }\n    }\n  }\n\n  /**\n   * Validates the Document ID if its length is 8 characters.\n   * Depending on the API response, it sets the appropriate error messages and verification status.\n   * If the Document ID is verified, it emits the Document ID.\n   */\n  @Watch('documentId')\n  async onDocumentIdComplete (): Promise<void> {\n    // Validate the document id if the length is 8 characters\n    if (this.documentId?.length === 8) {\n      this.isVerifyingDocId = true\n      // Validate the document ID\n      const documentIdStatus = await this.fetchDocumentIdStatus()\n      switch (documentIdStatus) {\n        case 200:\n          this.docIdError = ['Must be unique number']\n          this.isVerifiedDocId = false\n          break\n        case 400:\n          this.docIdError = ['Document ID is invalid']\n          this.isVerifiedDocId = false\n          break\n        case 404:\n          this.docIdError = null\n          this.isVerifiedDocId = true\n          break\n        default:\n          this.docIdError = ['Document ID request failed']\n          this.isVerifiedDocId = false\n      }\n\n      // Emit the document ID if it is verified\n      !!this.isVerifiedDocId && this.emitDocumentId(this.documentId)\n    } else {\n      // Reset verification status and error display if the document ID length is not 8\n      this.isVerifiedDocId = false\n      this.emitDocumentId('')\n    }\n\n    // Reset the verifying status\n    this.isVerifyingDocId = false\n  }\n\n  /** Resets the documentId, isVerifyingDocId, and docIdError properties when `generateDocumentId` changes. */\n  @Watch('generateDocumentId')\n  onGenerateDocumentId (): void {\n    this.documentId = ''\n    this.isVerifyingDocId = false\n    this.docIdError = null\n  }\n\n  /** Emits an event to confirm the validation state of the Document ID. */\n  @Watch('isValidDocumentId')\n  onValidationUpdate (): void {\n    this.emitIsValidDocumentId(!!this.isValidDocumentId)\n  }\n\n  /**\n   * Emits an event to update the Document ID.\n   * @param docId - The Document ID to emit.\n   */\n  @Emit('updateDocId')\n  emitDocumentId (docId: string): string { return docId }\n\n  /**\n   * Emits an event to update the validation state.\n   * @param isValid - The validation value to emit.\n   */\n  @Emit('isValid')\n  emitIsValidDocumentId (isValid: boolean): boolean { return isValid }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/theme.scss';\n\n.title-label {\n  color: $gray9;\n  font-weight: bold;\n}\n.copy-text, .copy-label {\n  font-size: 14px;\n  color: black;\n}\n.border-error-left {\n  border-left: 3px solid $app-red;\n}\n.error-text {\n  color: $app-red;\n}\n</style>\n"],"names":["DocumentId","Vue","__publicField","url","config","SessionStorageKeys","currentAccount","accountInfo","axios","error","_a","docId","isValid","__decorateClass","Prop","Watch","Emit","Component"],"mappings":"osBAmGA,IAAAA,EAAA,cAAAC,CAAA,CAAA,kCAEAC,EAAA,kBAGAA,EAAA,kBAGAA,EAAA,iBAGAA,EAAA,oBAGAA,EAAA,kBAAA,IACAA,EAAA,wBAAA,IACAA,EAAA,uBAAA,IACAA,EAAA,0BAAA,IACAA,EAAA,kBAAA,CAAA,GAGA,IAAA,iBAAA,CACA,OAAA,KAAA,UAAA,CAAA,KAAA,iBACA,CAGA,IAAA,mBAAA,CACA,OAAA,KAAA,iBAAA,KAAA,kBACA,CAYA,MAAA,uBAAA,CAEA,MAAAC,EAAA,GAAA,KAAA,SAAA,qBAAA,KAAA,UAAA,GAGAC,EAAA,CAAA,QAAA,CACA,cAAA,UAAA,eAAA,QAAAC,EAAA,aAAA,CAAA,GACA,WAAA,KAAA,SAAA,CAAA,EAIAC,EAAA,eAAA,QAAAD,EAAA,cAAA,EACA,GAAAC,EAAA,CACA,MAAAC,EAAA,KAAA,MAAAD,CAAA,EACAF,EAAA,QAAA,YAAA,EAAAG,EAAA,EACA,CAEA,GAAA,CAGA,OADA,MAAAC,EAAA,IAAAL,EAAAC,CAAA,GACA,aACAK,EAAA,CAEA,GAAA,CAAA,IAAA,GAAA,EAAA,SAAAA,EAAA,SAAA,MAAA,EACA,OAAAA,EAAA,SAAA,MAEA,CACA,CAQA,MAAA,sBAAA,OAEA,KAAAC,EAAA,KAAA,aAAA,YAAAA,EAAA,UAAA,EAAA,CAIA,OAHA,KAAA,iBAAA,GAEA,MAAA,KAAA,wBACA,CACA,IAAA,KACA,KAAA,WAAA,CAAA,uBAAA,EACA,KAAA,gBAAA,GACA,MACA,IAAA,KACA,KAAA,WAAA,CAAA,wBAAA,EACA,KAAA,gBAAA,GACA,MACA,IAAA,KACA,KAAA,WAAA,KACA,KAAA,gBAAA,GACA,MACA,QACA,KAAA,WAAA,CAAA,4BAAA,EACA,KAAA,gBAAA,EACA,CAGA,KAAA,iBAAA,KAAA,eAAA,KAAA,UAAA,CAAA,MAGA,KAAA,gBAAA,GACA,KAAA,eAAA,EAAA,EAIA,KAAA,iBAAA,EACA,CAIA,sBAAA,CACA,KAAA,WAAA,GACA,KAAA,iBAAA,GACA,KAAA,WAAA,IACA,CAIA,oBAAA,CACA,KAAA,sBAAA,CAAA,CAAA,KAAA,iBAAA,CACA,CAOA,eAAAC,EAAA,CAAA,OAAAA,CAAA,CAOA,sBAAAC,EAAA,CAAA,OAAAA,CAAA,CACA,EAxIAC,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAFAd,EAEA,UAAA,YAAA,CAAA,EAGAa,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EALAd,EAKA,UAAA,YAAA,CAAA,EAGAa,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EARAd,EAQA,UAAA,WAAA,CAAA,EAGAa,EAAA,CAAAC,EAAA,CAAA,QAAA,CAAA,sBAAA,EAAA,CAAA,EAXAd,EAWA,UAAA,cAAA,CAAA,EAgEAa,EAAA,CADAE,EAAA,YAAA,CAAA,EA1EAf,EA2EA,UAAA,uBAAA,CAAA,EAsCAa,EAAA,CADAE,EAAA,oBAAA,CAAA,EAhHAf,EAiHA,UAAA,uBAAA,CAAA,EAQAa,EAAA,CADAE,EAAA,mBAAA,CAAA,EAxHAf,EAyHA,UAAA,qBAAA,CAAA,EASAa,EAAA,CADAG,EAAA,aAAA,CAAA,EAjIAhB,EAkIA,UAAA,iBAAA,CAAA,EAOAa,EAAA,CADAG,EAAA,SAAA,CAAA,EAxIAhB,EAyIA,UAAA,wBAAA,CAAA,EAzIAA,EAAAa,EAAA,CADAI,EAAA,CAAA,CAAA,CAAA,EACAjB,CAAA;;;;;;;;;;;;;;;;;;;;;;"}