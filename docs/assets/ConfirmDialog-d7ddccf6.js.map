{"version":3,"file":"ConfirmDialog-d7ddccf6.js","sources":["../../src/components/confirm-dialog/ConfirmDialog.vue"],"sourcesContent":["<template>\n  <v-dialog\n    v-model=\"dialog\"\n    content-class=\"confirm-dialog\"\n    :max-width=\"options.width\"\n    :style=\"{ zIndex: options.zIndex }\"\n    :persistent=\"options.persistent\"\n    :attach=\"attach\"\n    @keydown.esc=\"onClickCancel\"\n  >\n    <v-card>\n      <v-card-title>{{ title }}</v-card-title>\n      <!-- eslint-disable-next-line vue/no-v-text-v-html-on-component -->\n      <v-card-text\n        v-show=\"!!message\"\n        class=\"pre-wrap\"\n        v-html=\"message\"\n      />\n      <v-divider\n        v-show=\"!!options.yes || !!options.no || !!options.cancel\"\n        class=\"my-0\"\n      />\n      <v-card-actions>\n        <v-spacer />\n        <v-btn\n          v-if=\"!!options.yes\"\n          text\n          color=\"primary\"\n          class=\"dialog-yes-btn\"\n          @click.native=\"onClickYes()\"\n        >\n          {{ options.yes }}\n        </v-btn>\n        <v-btn\n          v-if=\"!!options.no\"\n          text\n          color=\"primary\"\n          class=\"dialog-no-btn\"\n          @click.native=\"onClickNo()\"\n        >\n          {{ options.no }}\n        </v-btn>\n        <v-btn\n          v-if=\"!!options.cancel\"\n          text\n          color=\"primary\"\n          class=\"dialog-cancel-btn\"\n          @click.native=\"onClickCancel()\"\n        >\n          {{ options.cancel }}\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script lang=\"ts\">\n/**\n * Vuetify Confirm Dialog component\n * ref: https://gist.github.com/eolant/ba0f8a5c9135d1a146e1db575276177d\n *\n * Insert component where you want to use it:\n * <confirm ref=\"confirm\"></confirm>\n *\n * Call it using promise:\n * this.$refs.confirm.open('Delete', 'Are you sure?', { color: 'red' }).then((confirm) => {})\n *\n * Or use await:\n * if (await this.$refs.confirm.open('Delete', 'Are you sure?', { color: 'red' })) {\n *   // yes\n * }\n * else {\n *   // cancel\n * }\n *\n * Alternatively you can place it in main App component and access it globally via this.$root.$confirm\n * <template>\n *   <v-app>\n *     ...\n *     <confirm ref=\"confirm\"></confirm>\n *   </v-app>\n * </template>\n *\n * mounted() {\n *   this.$root.$confirm = this.$refs.confirm.open\n * }\n */\nimport Vue from 'vue'\nimport { Component, Prop } from 'vue-property-decorator'\n\ninterface OptionsObject {\n  width?: number | string,\n  zIndex?: number,\n  persistent?: boolean,\n  yes?: string,\n  no?: string,\n  cancel?: string\n}\n\n@Component({})\nexport default class ConfirmDialog extends Vue {\n  /** Prop to provide attachment selector. */\n  @Prop() readonly attach!: string\n\n  /** Whether the subject dialog is currently displayed. */\n  private dialog = false\n\n  /** The Yes/No click handler for the returned promise. */\n  private resolve = null\n\n  /** The Cancel click handler for the returned promise. */\n  private reject = null\n\n  /** The dialog's title. */\n  private title: string = null\n\n  /** The dialog's message. */\n  private message: string = null\n\n  /** The dialog's default options. */\n  private options: OptionsObject = {\n    width: 400,\n    zIndex: 200,\n    persistent: false,\n    yes: 'Yes',\n    no: 'No',\n    cancel: 'Cancel'\n  }\n\n  /**\n   * Opens the modal with the specified parameters.\n   * @param title   the dialog's title to display\n   * @param message the dialog's message to display\n   * @param options the dialog's options to use\n   * @returns       a promise to subscribe to\n   */\n  open (title: string, message: string, options: OptionsObject): Promise<object> {\n    this.dialog = true\n    this.title = title\n    this.message = message\n    this.options = Object.assign(this.options, options)\n\n    return new Promise((resolve, reject) => {\n      this.resolve = resolve\n      this.reject = reject\n    })\n  }\n\n  /** Handler for Yes button. */\n  private onClickYes (): void {\n    this.resolve(true)\n    this.dialog = false\n  }\n\n  /** Handler for No button. */\n  private onClickNo (): void {\n    this.resolve(false)\n    this.dialog = false\n  }\n\n  /** Handler for Cancel button. */\n  private onClickCancel (): void {\n    this.reject()\n    this.dialog = false\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/theme.scss';\n\n.v-card__text {\n  color: $gray7 !important;\n}\n\n.v-btn {\n  text-transform: unset;\n}\n\n// bold the primary action button\n.dialog-yes-btn {\n  font-weight: bold;\n}\n</style>\n"],"names":["ConfirmDialog","Vue","__publicField","title","message","options","resolve","reject","__decorateClass","Prop","Component"],"mappings":"0dAoGA,IAAAA,EAAA,cAAAC,CAAA,CAAA,kCAEAC,EAAA,eAGAA,EAAA,cAAA,IAGAA,EAAA,eAAA,MAGAA,EAAA,cAAA,MAGAA,EAAA,aAAA,MAGAA,EAAA,eAAA,MAGAA,EAAA,eAAA,CACA,MAAA,IACA,OAAA,IACA,WAAA,GACA,IAAA,MACA,GAAA,KACA,OAAA,QAAA,GAUA,KAAAC,EAAAC,EAAAC,EAAA,CACA,YAAA,OAAA,GACA,KAAA,MAAAF,EACA,KAAA,QAAAC,EACA,KAAA,QAAA,OAAA,OAAA,KAAA,QAAAC,CAAA,EAEA,IAAA,QAAA,CAAAC,EAAAC,IAAA,CACA,KAAA,QAAAD,EACA,KAAA,OAAAC,CAAA,CACA,CACA,CAGA,YAAA,CACA,KAAA,QAAA,EAAA,EACA,KAAA,OAAA,EACA,CAGA,WAAA,CACA,KAAA,QAAA,EAAA,EACA,KAAA,OAAA,EACA,CAGA,eAAA,CACA,KAAA,OAAA,EACA,KAAA,OAAA,EACA,CACA,EA/DAC,EAAA,CAAAC,EAAA,CAAA,EAFAT,EAEA,UAAA,SAAA,CAAA,EAFAA,EAAAQ,EAAA,CADAE,EAAA,CAAA,CAAA,CAAA,EACAV,CAAA"}