{"version":3,"file":"Certify.stories-676dc0cd.js","sources":["../../src/components/certify/Certify.vue"],"sourcesContent":["<template>\n  <div id=\"AR-step-4-container\">\n    <v-form\n      ref=\"certifyForm\"\n      lazy-validation\n      @submit.prevent\n    >\n      <v-row no-gutters>\n        <v-col\n          cols=\"12\"\n          :sm=\"firstColumn\"\n          class=\"pr-4 pb-4\"\n        >\n          <label\n            class=\"title-label\"\n            :class=\"{'error-text': invalidSection}\"\n          >Legal Name</label>\n        </v-col>\n        <v-col\n          cols=\"12\"\n          :sm=\"secondColumn\"\n        >\n          <v-text-field\n            id=\"certified-by-textfield\"\n            filled\n            persistent-hint\n            label=\"Legal name of authorized person\"\n            :value=\"certifiedBy\"\n            :rules=\"[(v) => !!v || 'A person\\'s legal name is required.']\"\n            :disabled=\"disableEdit\"\n            @input=\"emitCertifiedBy($event)\"\n          />\n        </v-col>\n      </v-row>\n\n      <v-row no-gutters>\n        <v-col\n          cols=\"12\"\n          :sm=\"firstColumn\"\n        />\n        <v-col\n          cols=\"12\"\n          :sm=\"secondColumn\"\n        >\n          <v-checkbox\n            hide-details\n            :value=\"isCertified\"\n            class=\"mt-0 pt-0\"\n            @change=\"emitIsCertified($event)\"\n          >\n            <template #label>\n              <div\n                v-if=\"isStaff\"\n                class=\"certify-stmt\"\n                :class=\"{'error-text': invalidSection && !isCertified}\"\n              >\n                <strong>{{ trimmedCertifiedBy || \"[Legal Name]\" }}</strong>\n                certifies that they have relevant knowledge of the\n                {{ entityDisplay || \"association\" }} and is authorized to\n                make this filing.\n              </div>\n              <div\n                v-else\n                class=\"certify-stmt\"\n                :class=\"{'error-text': invalidSection && !isCertified}\"\n              >\n                I,\n                <strong>{{ trimmedCertifiedBy || \"[Legal Name]\" }}</strong>,\n                certify that I have relevant knowledge of the\n                {{ entityDisplay || \"association\" }} and I am authorized to\n                make this filing.\n              </div>\n            </template>\n          </v-checkbox>\n\n          <ul\n            v-if=\"statements.length > 0\"\n            class=\"certify-statements mt-4\"\n          >\n            <li\n              v-for=\"(statement, index) in statements\"\n              :key=\"`statement-${index}`\"\n              class=\"pt-2\"\n            >\n              {{ statement }}\n            </li>\n          </ul>\n          <p class=\"certify-clause\">\n            <strong>Date:</strong> {{ currentDate }}\n          </p>\n          <p class=\"certify-clause\">\n            {{ message }}\n          </p>\n\n          <!-- Incorporation MailTo Section -->\n          <template v-if=\"enableMailTo\">\n            <p class=\"mt-4\">\n              Copies of the incorporation documents will be sent to the following email addresses:\n            </p>\n            <ul class=\"email-addresses\">\n              <li id=\"business-email\">\n                <span>Registered office email address:</span>\n                <a\n                  v-if=\"businessEmail\"\n                  :href=\"`mailto:${businessEmail}`\"\n                >{{ businessEmail }}</a>\n                <span v-else>(Not entered)</span>\n              </li>\n              <li id=\"completing-party-email\">\n                <span>Completing party email address:</span>&nbsp;\n                <a\n                  v-if=\"completingPartyEmail\"\n                  :href=\"`mailto:${completingPartyEmail}`\"\n                >{{ completingPartyEmail }}</a>\n                <span v-else>(Not entered)</span>\n              </li>\n            </ul>\n          </template>\n        </v-col>\n      </v-row>\n    </v-form>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport { Component, Prop, Emit, Watch } from 'vue-property-decorator'\nimport { FormIF } from '@bcrs-shared-components/interfaces'\n\n@Component({})\nexport default class Certify extends Vue {\n  @Prop({ default: '' }) readonly currentDate!: string\n\n  /** Is Staff prop. */\n  @Prop({ default: false }) readonly isStaff!: boolean\n\n  /** Certified By prop. */\n  @Prop({ default: '' }) readonly certifiedBy!: string\n\n  /** Is Certified prop. */\n  @Prop({ default: false }) readonly isCertified!: boolean\n\n  /** Certified Company statements . */\n  @Prop({ default: () => [] }) readonly statements!: []\n\n  /** Message prop. */\n  @Prop({ default: '' }) readonly message!: string\n\n  /** Entity Display prop. */\n  @Prop({ default: '' }) readonly entityDisplay!: string\n\n  /** Enable MailTo prop. */\n  @Prop({ default: false }) readonly enableMailTo!: boolean\n\n  /** Business Email address. */\n  @Prop({ default: '' }) readonly businessEmail!: string\n\n  /** Completing Party Email address. */\n  @Prop({ default: '' }) readonly completingPartyEmail!: string\n\n  /** First column columns. */\n  @Prop({ default: 2 }) readonly firstColumn!: number\n\n  /** Second column columns. */\n  @Prop({ default: 10 }) readonly secondColumn!: number\n\n  /** Call field validations. */\n  @Prop({ default: false }) readonly validate!: boolean\n\n  /** Prompt Error. */\n  @Prop({ default: false }) readonly invalidSection!: boolean\n\n  /** Disable Text Input field. */\n  @Prop({ default: false }) readonly disableEdit!: boolean\n\n  // Form Ref\n  $refs: { certifyForm: FormIF }\n\n  /** Called when component is created. */\n  created (): void {\n    // inform parent of initial validity\n    this.emitValid(Boolean(this.trimmedCertifiedBy && this.isCertified))\n  }\n\n  /** The trimmed \"Certified By\" string (may be ''). */\n  get trimmedCertifiedBy (): string {\n    // remove repeated inline whitespace, and leading/trailing whitespace\n    return this.certifiedBy && this.certifiedBy.replace(/\\s+/g, ' ').trim()\n  }\n\n  /** Prompt the field validations. */\n  @Watch('validate')\n  private validateFields (): void {\n    this.$refs.certifyForm.validate()\n  }\n\n  /** Emits an event to update the Certified By prop. */\n  @Emit('update:certifiedBy')\n  protected emitCertifiedBy (certifiedBy: string): string {\n    // remove repeated inline whitespace, and leading/trailing whitespace\n    certifiedBy = certifiedBy && certifiedBy.replace(/\\s+/g, ' ').trim()\n    this.emitValid(Boolean(certifiedBy && this.isCertified))\n    return certifiedBy\n  }\n\n  /** Emits an event to update the Is Certified prop. */\n  @Emit('update:isCertified')\n  protected emitIsCertified (isCertified: boolean): boolean {\n    this.emitValid(Boolean(this.trimmedCertifiedBy && isCertified))\n    return isCertified\n  }\n\n  /** Emits an event indicating whether or not the form is valid. */\n  @Emit('valid')\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private emitValid (valid: boolean): void {}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/theme.scss';\n\n#AR-step-4-container {\n  line-height: 1.2rem;\n  font-size: $px-16;\n}\n\n.title-label {\n  font-weight: bold;\n  color: $gray9;\n}\n\n// align checkbox with top of its label\n:deep(.v-input--checkbox .v-input__slot) {\n  align-items: flex-start;\n}\n\n.certify-clause {\n  margin: 0;\n  padding-top: 1rem;\n  padding-left: 2rem;\n  color: $gray7;\n  font-size: 0.875rem;\n}\n\n.certify-stmt {\n  display: inline;\n  font-size: 0.875rem;\n  color: $gray7;\n  font-weight: normal;\n}\n\n// override v-text-field label\n:deep(.v-label) {\n  color: $gray7;\n  font-weight: normal;\n}\n\n// override v-text-field label and text\n:deep(.v-input--is-disabled input),\n.v-input--is-disabled textarea {\n  color: $gray9;\n}\n</style>\n"],"names":["Certify","Vue","__publicField","certifiedBy","isCertified","valid","__decorateClass","Prop","Watch","Emit","Component"],"mappings":"ygBAkIA,IAAAA,EAAA,cAAAC,CAAA,CAAA,kCACAC,EAAA,oBAGAA,EAAA,gBAGAA,EAAA,oBAGAA,EAAA,oBAGAA,EAAA,mBAGAA,EAAA,gBAGAA,EAAA,sBAGAA,EAAA,qBAGAA,EAAA,sBAGAA,EAAA,6BAGAA,EAAA,oBAGAA,EAAA,qBAGAA,EAAA,iBAGAA,EAAA,uBAGAA,EAAA,oBAGAA,EAAA,cAGA,SAAA,CAEA,KAAA,UAAA,GAAA,KAAA,oBAAA,KAAA,YAAA,CACA,CAGA,IAAA,oBAAA,CAEA,OAAA,KAAA,aAAA,KAAA,YAAA,QAAA,OAAA,GAAA,EAAA,MACA,CAIA,gBAAA,CACA,KAAA,MAAA,YAAA,UACA,CAIA,gBAAAC,EAAA,CAEA,OAAAA,EAAAA,GAAAA,EAAA,QAAA,OAAA,GAAA,EAAA,OACA,KAAA,UAAA,GAAAA,GAAA,KAAA,YAAA,EACAA,CACA,CAIA,gBAAAC,EAAA,CACA,YAAA,UAAA,GAAA,KAAA,oBAAAA,EAAA,EACAA,CACA,CAKA,UAAAC,EAAA,CAAA,CACA,EArFAC,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EADAP,EACA,UAAA,cAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAJAP,EAIA,UAAA,UAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAPAP,EAOA,UAAA,cAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAVAP,EAUA,UAAA,cAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,IAAA,CAAA,EAAA,CAAA,EAbAP,EAaA,UAAA,aAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAhBAP,EAgBA,UAAA,UAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAnBAP,EAmBA,UAAA,gBAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAtBAP,EAsBA,UAAA,eAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAzBAP,EAyBA,UAAA,gBAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EA5BAP,EA4BA,UAAA,uBAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,EAAA,CAAA,EA/BAP,EA+BA,UAAA,cAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAlCAP,EAkCA,UAAA,eAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EArCAP,EAqCA,UAAA,WAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAxCAP,EAwCA,UAAA,iBAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EA3CAP,EA2CA,UAAA,cAAA,CAAA,EAmBAM,EAAA,CADAE,EAAA,UAAA,CAAA,EA7DAR,EA8DA,UAAA,iBAAA,CAAA,EAMAM,EAAA,CADAG,EAAA,oBAAA,CAAA,EAnEAT,EAoEA,UAAA,kBAAA,CAAA,EASAM,EAAA,CADAG,EAAA,oBAAA,CAAA,EA5EAT,EA6EA,UAAA,kBAAA,CAAA,EAQAM,EAAA,CAFAG,EAAA,OAAA,CAAA,EAnFAT,EAqFA,UAAA,YAAA,CAAA,EArFAA,EAAAM,EAAA,CADAI,EAAA,CAAA,CAAA,CAAA,EACAV,CAAA;;;;;;;;;"}