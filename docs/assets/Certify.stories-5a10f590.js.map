{"version":3,"file":"Certify.stories-5a10f590.js","sources":["../../src/components/certify/Certify.vue"],"sourcesContent":["<template>\r\n  <div id=\"AR-step-4-container\">\r\n    <v-form\r\n      ref=\"certifyForm\"\r\n      lazy-validation\r\n      @submit.prevent\r\n    >\r\n      <v-row no-gutters>\r\n        <v-col\r\n          cols=\"12\"\r\n          :sm=\"firstColumn\"\r\n          class=\"pr-4 pb-4\"\r\n        >\r\n          <label\r\n            class=\"title-label\"\r\n            :class=\"{'error-text': invalidSection}\"\r\n          >Legal Name</label>\r\n        </v-col>\r\n        <v-col\r\n          cols=\"12\"\r\n          :sm=\"secondColumn\"\r\n        >\r\n          <v-text-field\r\n            id=\"certified-by-textfield\"\r\n            filled\r\n            persistent-hint\r\n            label=\"Legal name of authorized person\"\r\n            :value=\"certifiedBy\"\r\n            :rules=\"[(v) => !!v || 'A person\\'s legal name is required.']\"\r\n            :disabled=\"disableEdit\"\r\n            @input=\"emitCertifiedBy($event)\"\r\n          />\r\n        </v-col>\r\n      </v-row>\r\n\r\n      <v-row no-gutters>\r\n        <v-col\r\n          cols=\"12\"\r\n          :sm=\"firstColumn\"\r\n        />\r\n        <v-col\r\n          cols=\"12\"\r\n          :sm=\"secondColumn\"\r\n        >\r\n          <v-checkbox\r\n            hide-details\r\n            :value=\"isCertified\"\r\n            class=\"mt-0 pt-0\"\r\n            @change=\"emitIsCertified($event)\"\r\n          >\r\n            <template #label>\r\n              <div\r\n                v-if=\"isStaff\"\r\n                class=\"certify-stmt\"\r\n                :class=\"{'error-text': invalidSection && !isCertified}\"\r\n              >\r\n                <strong>{{ trimmedCertifiedBy || \"[Legal Name]\" }}</strong>\r\n                certifies that they have relevant knowledge of the\r\n                {{ entityDisplay || \"association\" }} and is authorized to\r\n                make this filing.\r\n              </div>\r\n              <div\r\n                v-else\r\n                class=\"certify-stmt\"\r\n                :class=\"{'error-text': invalidSection && !isCertified}\"\r\n              >\r\n                I,\r\n                <strong>{{ trimmedCertifiedBy || \"[Legal Name]\" }}</strong>,\r\n                certify that I have relevant knowledge of the\r\n                {{ entityDisplay || \"association\" }} and I am authorized to\r\n                make this filing.\r\n              </div>\r\n            </template>\r\n          </v-checkbox>\r\n\r\n          <ul\r\n            v-if=\"statements.length > 0\"\r\n            class=\"certify-statements mt-4\"\r\n          >\r\n            <li\r\n              v-for=\"(statement, index) in statements\"\r\n              :key=\"`statement-${index}`\"\r\n              class=\"pt-2\"\r\n            >\r\n              {{ statement }}\r\n            </li>\r\n          </ul>\r\n          <p class=\"certify-clause\">\r\n            <strong>Date:</strong> {{ currentDate }}\r\n          </p>\r\n          <p class=\"certify-clause\">\r\n            {{ message }}\r\n          </p>\r\n\r\n          <!-- Incorporation MailTo Section -->\r\n          <template v-if=\"enableMailTo\">\r\n            <p class=\"mt-4\">\r\n              Copies of the incorporation documents will be sent to the following email addresses:\r\n            </p>\r\n            <ul class=\"email-addresses\">\r\n              <li id=\"business-email\">\r\n                <span>Registered office email address:</span>\r\n                <a\r\n                  v-if=\"businessEmail\"\r\n                  :href=\"`mailto:${businessEmail}`\"\r\n                >{{ businessEmail }}</a>\r\n                <span v-else>(Not entered)</span>\r\n              </li>\r\n              <li id=\"completing-party-email\">\r\n                <span>Completing party email address:</span>&nbsp;\r\n                <a\r\n                  v-if=\"completingPartyEmail\"\r\n                  :href=\"`mailto:${completingPartyEmail}`\"\r\n                >{{ completingPartyEmail }}</a>\r\n                <span v-else>(Not entered)</span>\r\n              </li>\r\n            </ul>\r\n          </template>\r\n        </v-col>\r\n      </v-row>\r\n    </v-form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\nimport { Component, Prop, Emit, Watch } from 'vue-property-decorator'\r\nimport { FormIF } from '@bcrs-shared-components/interfaces'\r\n\r\n@Component({})\r\nexport default class Certify extends Vue {\r\n  @Prop({ default: '' }) readonly currentDate!: string\r\n\r\n  /** Is Staff prop. */\r\n  @Prop({ default: false }) readonly isStaff!: boolean\r\n\r\n  /** Certified By prop. */\r\n  @Prop({ default: '' }) readonly certifiedBy!: string\r\n\r\n  /** Is Certified prop. */\r\n  @Prop({ default: false }) readonly isCertified!: boolean\r\n\r\n  /** Certified Company statements . */\r\n  @Prop({ default: () => [] }) readonly statements!: []\r\n\r\n  /** Message prop. */\r\n  @Prop({ default: '' }) readonly message!: string\r\n\r\n  /** Entity Display prop. */\r\n  @Prop({ default: '' }) readonly entityDisplay!: string\r\n\r\n  /** Enable MailTo prop. */\r\n  @Prop({ default: false }) readonly enableMailTo!: boolean\r\n\r\n  /** Business Email address. */\r\n  @Prop({ default: '' }) readonly businessEmail!: string\r\n\r\n  /** Completing Party Email address. */\r\n  @Prop({ default: '' }) readonly completingPartyEmail!: string\r\n\r\n  /** First column columns. */\r\n  @Prop({ default: 2 }) readonly firstColumn!: number\r\n\r\n  /** Second column columns. */\r\n  @Prop({ default: 10 }) readonly secondColumn!: number\r\n\r\n  /** Call field validations. */\r\n  @Prop({ default: false }) readonly validate!: boolean\r\n\r\n  /** Prompt Error. */\r\n  @Prop({ default: false }) readonly invalidSection!: boolean\r\n\r\n  /** Disable Text Input field. */\r\n  @Prop({ default: false }) readonly disableEdit!: boolean\r\n\r\n  // Form Ref\r\n  $refs: { certifyForm: FormIF }\r\n\r\n  /** Called when component is created. */\r\n  created (): void {\r\n    // inform parent of initial validity\r\n    this.emitValid(Boolean(this.trimmedCertifiedBy && this.isCertified))\r\n  }\r\n\r\n  /** The trimmed \"Certified By\" string (may be ''). */\r\n  get trimmedCertifiedBy (): string {\r\n    // remove repeated inline whitespace, and leading/trailing whitespace\r\n    return this.certifiedBy && this.certifiedBy.replace(/\\s+/g, ' ').trim()\r\n  }\r\n\r\n  /** Prompt the field validations. */\r\n  @Watch('validate')\r\n  private validateFields (): void {\r\n    this.$refs.certifyForm.validate()\r\n  }\r\n\r\n  /** Emits an event to update the Certified By prop. */\r\n  @Emit('update:certifiedBy')\r\n  protected emitCertifiedBy (certifiedBy: string): string {\r\n    // remove repeated inline whitespace, and leading/trailing whitespace\r\n    certifiedBy = certifiedBy && certifiedBy.replace(/\\s+/g, ' ').trim()\r\n    this.emitValid(Boolean(certifiedBy && this.isCertified))\r\n    return certifiedBy\r\n  }\r\n\r\n  /** Emits an event to update the Is Certified prop. */\r\n  @Emit('update:isCertified')\r\n  protected emitIsCertified (isCertified: boolean): boolean {\r\n    this.emitValid(Boolean(this.trimmedCertifiedBy && isCertified))\r\n    return isCertified\r\n  }\r\n\r\n  /** Emits an event indicating whether or not the form is valid. */\r\n  @Emit('valid')\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  private emitValid (valid: boolean): void {}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '@/assets/styles/theme.scss';\r\n\r\n#AR-step-4-container {\r\n  line-height: 1.2rem;\r\n  font-size: $px-16;\r\n}\r\n\r\n.title-label {\r\n  font-weight: bold;\r\n  color: $gray9;\r\n}\r\n\r\n// align checkbox with top of its label\r\n:deep(.v-input--checkbox .v-input__slot) {\r\n  align-items: flex-start;\r\n}\r\n\r\n.certify-clause {\r\n  margin: 0;\r\n  padding-top: 1rem;\r\n  padding-left: 2rem;\r\n  color: $gray7;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.certify-stmt {\r\n  display: inline;\r\n  font-size: 0.875rem;\r\n  color: $gray7;\r\n  font-weight: normal;\r\n}\r\n\r\n// override v-text-field label\r\n:deep(.v-label) {\r\n  color: $gray7;\r\n  font-weight: normal;\r\n}\r\n\r\n// override v-text-field label and text\r\n:deep(.v-input--is-disabled input),\r\n.v-input--is-disabled textarea {\r\n  color: $gray9;\r\n}\r\n</style>\r\n"],"names":["Certify","Vue","__publicField","certifiedBy","isCertified","valid","__decorateClass","Prop","Watch","Emit","Component"],"mappings":"ygBAkIA,IAAAA,EAAA,cAAAC,CAAA,CAAA,kCACAC,EAAA,oBAGAA,EAAA,gBAGAA,EAAA,oBAGAA,EAAA,oBAGAA,EAAA,mBAGAA,EAAA,gBAGAA,EAAA,sBAGAA,EAAA,qBAGAA,EAAA,sBAGAA,EAAA,6BAGAA,EAAA,oBAGAA,EAAA,qBAGAA,EAAA,iBAGAA,EAAA,uBAGAA,EAAA,oBAGAA,EAAA,cAGA,SAAA,CAEA,KAAA,UAAA,GAAA,KAAA,oBAAA,KAAA,YAAA,CACA,CAGA,IAAA,oBAAA,CAEA,OAAA,KAAA,aAAA,KAAA,YAAA,QAAA,OAAA,GAAA,EAAA,MACA,CAIA,gBAAA,CACA,KAAA,MAAA,YAAA,UACA,CAIA,gBAAAC,EAAA,CAEA,OAAAA,EAAAA,GAAAA,EAAA,QAAA,OAAA,GAAA,EAAA,OACA,KAAA,UAAA,GAAAA,GAAA,KAAA,YAAA,EACAA,CACA,CAIA,gBAAAC,EAAA,CACA,YAAA,UAAA,GAAA,KAAA,oBAAAA,EAAA,EACAA,CACA,CAKA,UAAAC,EAAA,CAAA,CACA,EArFAC,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EADAP,EACA,UAAA,cAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAJAP,EAIA,UAAA,UAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAPAP,EAOA,UAAA,cAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAVAP,EAUA,UAAA,cAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,IAAA,CAAA,EAAA,CAAA,EAbAP,EAaA,UAAA,aAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAhBAP,EAgBA,UAAA,UAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAnBAP,EAmBA,UAAA,gBAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAtBAP,EAsBA,UAAA,eAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAzBAP,EAyBA,UAAA,gBAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EA5BAP,EA4BA,UAAA,uBAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,EAAA,CAAA,EA/BAP,EA+BA,UAAA,cAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAlCAP,EAkCA,UAAA,eAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EArCAP,EAqCA,UAAA,WAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EAxCAP,EAwCA,UAAA,iBAAA,CAAA,EAGAM,EAAA,CAAAC,EAAA,CAAA,QAAA,GAAA,CAAA,EA3CAP,EA2CA,UAAA,cAAA,CAAA,EAmBAM,EAAA,CADAE,EAAA,UAAA,CAAA,EA7DAR,EA8DA,UAAA,iBAAA,CAAA,EAMAM,EAAA,CADAG,EAAA,oBAAA,CAAA,EAnEAT,EAoEA,UAAA,kBAAA,CAAA,EASAM,EAAA,CADAG,EAAA,oBAAA,CAAA,EA5EAT,EA6EA,UAAA,kBAAA,CAAA,EAQAM,EAAA,CAFAG,EAAA,OAAA,CAAA,EAnFAT,EAqFA,UAAA,YAAA,CAAA,EArFAA,EAAAM,EAAA,CADAI,EAAA,CAAA,CAAA,CAAA,EACAV,CAAA;;;;;;;;;"}